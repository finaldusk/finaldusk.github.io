{"meta":{"title":"王鑫磊的记事本","subtitle":null,"description":null,"author":"finaldusk","url":"http://www.wangxinlei.cn"},"pages":[],"posts":[{"title":"解决Extmail在部分邮件客户端附件名乱码的问题","slug":"extmailencodeerror","date":"2018-08-27T08:38:37.000Z","updated":"2018-10-07T06:29:36.823Z","comments":true,"path":"2018/08/27/extmailencodeerror/","link":"","permalink":"http://www.wangxinlei.cn/2018/08/27/extmailencodeerror/","excerpt":"","text":"使用Extmail发送邮件的附件名称为中文时，部分邮件客户端（如安卓端K-9Mail）附件名称会显示为乱码，这是因为邮件头中Content-Disposition和Content-Type中的中文字符没有进行编码，修改extmail/libs/Ext/App/Compose.pm 第701行 print $FD “Content-Disposition: attachment; filename=\\“”.rfc822_encode_str($chst, $lf).”\\“\\n”; 第702行 print $FD “Content-Type: application/octet-stream; charset=\\“$chst\\“; name=\\“”.rfc822_encode_str($chst, $lf).”\\“\\n”; 第1198行 print $TMP “Content-Disposition: attachment; filename=\\“”.rfc822_encode_str($chst, $header{filename}).”\\“\\n”; 第1199行 print $TMP ‘Content-Type: ‘.$header{‘Content-Type’}.”; charset=\\“$chst\\“; name=\\“”.rfc822_encode_str($chst, $header{filename}).”\\“\\n”; 修改完成后再发送邮件附件中的中文文件名就不会显示为乱码了","categories":[{"name":"extmail","slug":"extmail","permalink":"http://www.wangxinlei.cn/categories/extmail/"}],"tags":[{"name":"extmail","slug":"extmail","permalink":"http://www.wangxinlei.cn/tags/extmail/"},{"name":"中文","slug":"中文","permalink":"http://www.wangxinlei.cn/tags/中文/"},{"name":"乱码","slug":"乱码","permalink":"http://www.wangxinlei.cn/tags/乱码/"},{"name":"附件","slug":"附件","permalink":"http://www.wangxinlei.cn/tags/附件/"}]},{"title":"迁移QMail到POSTFIX(ExtMail)","slug":"qmail2postfix","date":"2018-06-01T03:18:56.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2018/06/01/qmail2postfix/","link":"","permalink":"http://www.wangxinlei.cn/2018/06/01/qmail2postfix/","excerpt":"","text":"迁移身份认证数据库使用工具: navicat Excel 思路：Qmail身份认证数据库存储的内容与Postfix身份认证所用数据库有所差异，但都可以通过拼接字符串方式来消除差异，通过Excel函数拼接字符串生成SQL脚本。 具体步骤： 使用navicat登陆原邮件服务器数据库，导出vpopmail的vpopmail表为Excel文件，注意选择正确的编码格式防止出现乱码（一般为GBK） 打开导出的Excel文件，新建一张工作表建库脚本 新工作表各列公式如下 A列username邮件地址 =vpopmail!B1&amp;”@”&amp;vpopmail!C1 B列uid用户名 =vpopmail!B1 C列password密码 =vpopmail!D1 D列name姓名 =vpopmail!G1 E列maildir邮箱存储路径 =MID(vpopmail!H1,24,100)&amp;”/Maildir” F列Homedir用户存储路径 =MID(vpopmail!H1,24,100) G列quota邮箱大小 因为要扩容到每人1G故填写固定值 1073741824S H列netdiskquota网盘大小 因为要扩容到每人1G故填写固定值 1073741824S I列domain域名 =vpopmail!C1 J列uidnumber用户文件所有人 固定值1000 K列gidnumber用户文件所有组 固定值1000 L列createtime创建时间 =vpopmail!K1 M列expiredate过期时间 固定值0000-00-00 N列active是否启用 固定值1 P列拼接SQL语句 =”INSERT INTO `mailbox` VALUES (‘“&amp;A2&amp;”‘, ‘“&amp;B2&amp;”‘, ‘“&amp;C2&amp;”‘, ‘’, ‘“&amp;D2&amp;”‘, ‘’, ‘“&amp;E2&amp;”‘, ‘“&amp;F2&amp;”‘, ‘1073741824S’, ‘1073741824S’, ‘ln.pcc’, 1000, 1000, ‘“&amp;L2&amp;”‘, ‘0000-00-00’, 1,0, 0, 0, 0, 0, 0, 0, ‘’, ‘’);” 注：固定值列可以引用对应单元格，也可以直接写到公式里，根据需求决定 4.navicat连接到新邮件服务器数据库中执行使用Excel生成的SQL语句 迁移邮件存储使用工具 PuTTY 具体步骤1.登陆原邮件服务器打包邮件存储传送到新邮件服务器中 tar czvf domain.tar.gz /home/vpopmail/domains/sftp 【新邮件服务器IP地址】【新邮件服务器密码】put domain.tar.gzexit 2.解压打包的文件并放到其应该在的位置 tar -zxvf domain.tar.gzcp -R 【目录】 /home/domains/ 迁移网盘使用工具 Excel PuTTY convmv 问题：Qmail的网盘位于/home/netdisk/【域名】/【用户名】 Extmail的网盘位于/home/domains/【域名】/【用户名】/Maildir/fileman/ Qmail的网盘储存文件名采用GBK编码，Extmail的网盘储存文件名采用UTF-8编码 思路使用Excel生成文件迁移脚本 使用convmv解决文件名乱码 具体步骤1.在之前使用的Excel中新建一张工作表 各列公式如下 A列用户名 =vpopmail!B1 B列新网盘所在目录 =建库脚本!E2&amp;”/fileman/“ C列Shell脚本 =”cp -r /home/netdisk/ln.pcc/“&amp;A2&amp;”/ /home/domains/“&amp;B2&amp;”” 2..登陆原邮件服务器打包网盘传送到新邮件服务器中 tar czvf netdisk.tar.gz /home/netdisk/sftp 【新邮件服务器IP地址】【新邮件服务器密码】put netdisk.tar.gzexit 2.解压打包的文件并放到Home文件夹 tar -zxvf netdisk.tar.gzcp -R 【目录】 /home/netdisk/ 3.允许excel生成的shell脚本拷贝文件 4.执行命令修改文件名编码 convmv -f gbk -t utf-8 -r –notest /home/domains/ 生成新的全局通讯录使用工具 Excel navicat 具体步骤1.连接到原邮件服务器导出dept表，并将表移动至刚刚使用的Excel中 2.新建一张工作表通讯录 3.各列公式如下 A列姓名 =vpopmail!G1 B列邮箱地址 =建库脚本!A2 C列部门 =VLOOKUP(vpopmail!M1,dept!$A$1:$B$36,2,FALSE) D列电话 由于原数据库中没存电话故填入固定值024-00000000 E列通讯录所需格式 =””””&amp;A2&amp;”””,”””&amp;B2&amp;”””,”””&amp;C2&amp;”””,”””&amp;D2&amp;”””” 后续操作1.变更文件所有权chown -R vuser.vgroup /home/domains/ 若不进行此操作用户登陆邮箱后会提示无权操作文件 2.删除原网盘内记录网盘使用情况的文件find /home/ -name .ftpquota | xargs rm 若不进行此操作则用户登陆网盘后会看见.ftpquota这个文件而这个文件无论是对于用户还是对于新邮件系统都是无用 的","categories":[{"name":"extmail","slug":"extmail","permalink":"http://www.wangxinlei.cn/categories/extmail/"}],"tags":[]},{"title":"[JS]身份证号码校验并提取信息","slug":"idcardpaser","date":"2018-05-14T08:40:31.000Z","updated":"2018-10-07T06:29:36.823Z","comments":true,"path":"2018/05/14/idcardpaser/","link":"","permalink":"http://www.wangxinlei.cn/2018/05/14/idcardpaser/","excerpt":"","text":"IDCardPaser中国居民身份证解析器，依据身份证号判断身份证是否符合格式规则，若符合规则可返回所在地、出生日期、性别信息。 本项目大部分代码来自以下两个项目cn/GB2260.js. mc-zone/IDValidator. 与mc-zone/IDValidator 的区别地区码使用 cn/GB2260.js 中提供的数据，地区名称不包含省市从而大大减少了GB2260.js占用的空间 使用js内置函数对出生日期进行日期校验 不包含伪造ID功能 项目中GB2260.js与cn/GB2260.js的区别本项目中的GB2260.js基于 GB2260.js/lib/201607.json 修改除大陆地区的地区码外还包含hongkong和macao的地区码 源代码下载本项目源代码发布于github和码云 github https://github.com/finaldusk/IDCardPaser 码云 https://gitee.com/finaldusk/IDCardPaser GB2260.js本JS记录了地区码（身份证前六位）与地区名称的对应关系，由于文件较大（100KB）影响本文阅读效果故若需要下载请访问github或码云单独下载此文件。 IDCardPaser.jsfunction IDCardPaser() { var param = { error: { longNumber: ‘长数字存在精度问题，请使用字符串传值！ Long number is not allowed, because the precision of the Number In JavaScript.’ } }; var util = { checkArg: function (id) { var argType = (typeof id); switch (argType) { case &apos;number&apos;: // long number not allowed id = id.toString(); if (id.length &gt; 15) { this.error(param.error.longNumber); return false; } break; case &apos;string&apos;: break; default: return false; } id = id.toUpperCase(); var code = null; if (id.length === 18) { // 18位 code = { body: id.slice(0, 17), checkBit: id.slice(-1), type: 18 }; } else if (id.length === 15) { // 15位 code = { body: id, type: 15 }; } else { return false; } return code; } // 地址码检查 , checkAddr: function (addr, GB2260) { var addrInfo = this.getAddrInfo(addr, GB2260); return (addrInfo === false ? false : true); } // 取得地址码信息 , getAddrInfo: function (addr, GB2260) { GB2260 = GB2260 || null; // 查询GB/T2260,没有引入GB2260时略过 if (GB2260 === null) { return addr; } var province = addr.slice(0, 2) + &apos;0000&apos;; var city = addr.slice(0, 4) + &apos;00&apos;; if (!GB2260.hasOwnProperty(addr)) { // 考虑标准不全的情况，搜索不到时向上搜索 if (!GB2260.hasOwnProperty(city)) { if (!GB2260.hasOwnProperty(province)) { return false; } else { return GB2260\\[province\\] + &apos;未知地区&apos;; } } else { return GB2260\\[province\\]+GB2260\\[city\\] + &apos;未知地区&apos;; } } else { return GB2260\\[province\\] + GB2260\\[city\\]+ GB2260\\[addr\\]; } } // 生日码检查 , checkBirth: function (birth) { var year, month, day; if (birth.length == 8) { year = parseInt(birth.slice(0, 4), 10); month = parseInt(birth.slice(4, 6), 10); day = parseInt(birth.slice(-2), 10); } else if (birth.length == 6) { year = parseInt(&apos;19&apos; + birth.slice(0, 2), 10); month = parseInt(birth.slice(2, 4), 10); day = parseInt(birth.slice(-2), 10); } else { return false; } birth=year+&apos;-&apos;+month+&apos;-&apos;+day; return (new Date(birth).getDate()==birth.substring(birth.length-2)); } // 顺序码检查 , checkOrder: function (order) { // 暂无需检测 return true; } // 加权 , weight: function (t) { return Math.pow(2, t - 1) % 11; } // 随机整数 , rand: function (max, min) { min = min || 1; return Math.round(Math.random() * (max - min)) + min; } // 数字补位 , str_pad: function (str, len, chr, right) { str = str.toString(); len = len || 2; chr = chr || &apos;0&apos;; right = right || false; if (str.length &gt;= len) { return str; } else { for (var i = 0, j = len - str.length; i &lt; j; i++) { if (right) { str = str + chr; } else { str = chr + str; } } return str; } } // 抛错 , error: function (msg) { var e = new Error(); e.message = &apos;IDCardPaser: &apos; + msg; throw e; } }; var _IDCardPaser = function (GB2260) { if (typeof GB2260 !== &quot;undefined&quot;) { this.GB2260 = GB2260; } // 建立cache this.cache = {}; }; _IDCardPaser.prototype = { isValid: function (id) { var GB2260 = this.GB2260 || null; var code = util.checkArg(id); if (code === false) { return false; } // 查询cache if (this.cache.hasOwnProperty(id) &amp;&amp; typeof this.cache\\[id\\].valid !== &apos;undefined&apos;) { return this.cache\\[id\\].valid; } else { if (!this.cache.hasOwnProperty(id)) { this.cache\\[id\\] = {}; } } var addr = code.body.slice(0, 6); var birth = (code.type === 18 ? code.body.slice(6, 14) : code.body .slice(6, 12)); var order = code.body.slice(-3); if (!(util.checkAddr(addr, GB2260) &amp;&amp; util.checkBirth(birth) &amp;&amp; util .checkOrder(order))) { this.cache\\[id\\].valid = false; return false; } // 15位不含校验码，到此已结束 if (code.type === 15) { this.cache\\[id\\].valid = true; return true; } /\\* 校验位部分 */ // 位置加权 var posWeight = \\[\\]; for (var i = 18; i &gt; 1; i--) { var wei = util.weight(i); posWeight\\[i\\] = wei; } // 累加body部分与位置加权的积 var bodySum = 0; var bodyArr = code.body.split(&apos;&apos;); for (var j = 0; j &lt; bodyArr.length; j++) { bodySum += (parseInt(bodyArr\\[j\\], 10) * posWeight\\[18 - j\\]); } // 得出校验码 var checkBit = 12 - (bodySum % 11); if (checkBit == 10) { checkBit = &apos;X&apos;; } else if (checkBit &gt; 10) { checkBit = checkBit % 11; } checkBit = (typeof checkBit === &apos;number&apos; ? checkBit.toString() : checkBit); // 检查校验码 if (checkBit !== code.checkBit) { this.cache\\[id\\].valid = false; return false; } else { this.cache\\[id\\].valid = true; return true; } } // 分析详细信息 , getInfo: function (id) { var GB2260 = this.GB2260 || null; // 号码必须有效 if (this.isValid(id) === false) { return false; } // TODO 复用此部分 var code = util.checkArg(id); // 查询cache // 到此时通过isValid已经有了cache记录 if (typeof this.cache\\[id\\].info !== &apos;undefined&apos;) { return this.cache\\[id\\].info; } var addr = code.body.slice(0, 6); var birth = (code.type === 18 ? code.body.slice(6, 14) : code.body .slice(6, 12)); var order = code.body.slice(-3); var info = {}; info.addrCode = addr; if (GB2260 !== null) { info.addr = util.getAddrInfo(addr, GB2260); } info.birth = (code.type === 18 ? ((\\[birth.slice(0, 4), birth.slice(4, 6), birth.slice(-2)\\]).join(&apos;-&apos;)) : (\\[ &apos;19&apos; + birth.slice(0, 2), birth.slice(2, 4), birth.slice(-2)\\]).join(&apos;-&apos;)); info.sex = (order % 2 === 0 ? &apos;女&apos; :&apos;男&apos;); info.length = code.type; if (code.type === 18) { info.checkBit = code.checkBit; } // 记录cache this.cache\\[id\\].info = info; return info; } };// _IDCardPaser GB2260 = GB2260 == null ? &quot;&quot; : GB2260; return new _IDCardPaser(GB2260); } index.html&lt;!DOCTYPE html&gt; 身份证号码解析器 身份证号码： 所在地： 出生日期： 性别： document.getElementById(“IDCardNumber”).addEventListener(“change”, function () { var idCardPaser = new IDCardPaser(); var info = idCardPaser.getInfo(document.getElementById(“IDCardNumber”).value); if (info == false) { alert(‘身份证号码输入可能有误，请确认’) } else { document.getElementById(“Sex”).value = info.sex; document.getElementById(“BirthDate”).value = info.birth; document.getElementById(“Address”).value = info.addr; } });","categories":[{"name":"前端","slug":"前端","permalink":"http://www.wangxinlei.cn/categories/前端/"}],"tags":[]},{"title":"使UEditor编辑器中插入的视频可以在IE8中正常播放","slug":"forceueditorvideoplayinie8","date":"2017-12-20T13:01:31.000Z","updated":"2018-10-07T06:29:36.823Z","comments":true,"path":"2017/12/20/forceueditorvideoplayinie8/","link":"","permalink":"http://www.wangxinlei.cn/2017/12/20/forceueditorvideoplayinie8/","excerpt":"","text":"UEditor中插入的视频在现代浏览器中都可以正常播放，然而在IE8等上古浏览器中却不能播放，其实UEditor已经引用了Video.js只要稍加修改是可以在IE8中正常播放的。 本文使用UEditor1.4.3.3版本 1.根据 ueditor.all.js 第17664至17670行代码正常生成的Video标签是应该包含一个source子标签的，然而在编辑器生成的Html代码中却找不到source标签，原来UEditor生成的部分标签没有被包含在UEditor的XSS白名单里，我们需要将被误过滤的标签加入到XSS白名单里来使Video.js正常工作。 //在ueditor.config.js第428行为video标签添加”data-setup”属性//添加后的第428行代码如下所示video: [‘autoplay’, ‘controls’, ‘loop’, ‘preload’, ‘src’, ‘height’, ‘width’, ‘class’, ‘style’,’data-setup’] //添加source标签的src和type属性到白名单source:[‘src’, ‘type’], 完成上述操作后在需要播放视频的页面引入video.js相关文件即可播放视频 videojs.options.flash.swf = \"ueditor/third-party/video-js/video-js.swf\"; 2.在现代浏览器中播放，一切正常，但在IE8中播放器的播放按钮始终不会消失，而且进度条也不会正常显示，经过反复测试发现，若video标签的父标签为p标签，那么播放器就会产生bug，给video标签套上一个div标签就不会产生这个问题了。 //修改ueditor.all.js第17664行~17670行代码让video标签生成时外面自动套上一层div标签 case ‘video’: var ext = url.substr(url.lastIndexOf(‘.’) + 1); if(ext == ‘ogv’) ext = ‘ogg’; str = ‘‘; break; 本文同样适用于“在IE8浏览器中播放video标签的视频”","categories":[{"name":"前端","slug":"前端","permalink":"http://www.wangxinlei.cn/categories/前端/"}],"tags":[{"name":"Ueditor","slug":"Ueditor","permalink":"http://www.wangxinlei.cn/tags/Ueditor/"},{"name":"html5","slug":"html5","permalink":"http://www.wangxinlei.cn/tags/html5/"},{"name":"ie8","slug":"ie8","permalink":"http://www.wangxinlei.cn/tags/ie8/"},{"name":"video","slug":"video","permalink":"http://www.wangxinlei.cn/tags/video/"},{"name":"在IE8浏览器中播放video标签的视频","slug":"在IE8浏览器中播放video标签的视频","permalink":"http://www.wangxinlei.cn/tags/在IE8浏览器中播放video标签的视频/"}]},{"title":"修改extmail的附件大小限制","slug":"changeextmaillimit","date":"2017-08-23T02:50:30.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2017/08/23/changeextmaillimit/","link":"","permalink":"http://www.wangxinlei.cn/2017/08/23/changeextmaillimit/","excerpt":"","text":"1、修改extmail目录下的webmail.cf文件 SYS_MESSAGE_SIZE_LIMIT = 5242880 2、修改/etc/postfix/main.cf文件 message_size_limit = &lt;新的邮件大小限制&gt; 需要注意的是 以上大小为附件经过编码后的大小，经过编码后附件大小会变大40%左右 所以应将大小限制放大50%左右。 当网络带宽有限时还应调整/etc/httpd/conf/httpd.conf文件修改连接超时时间防止上传附件过程中超时导致邮件发送结果不能正常返回","categories":[{"name":"extmail","slug":"extmail","permalink":"http://www.wangxinlei.cn/categories/extmail/"}],"tags":[]},{"title":"使用CMD命令创建指定大小的空文件","slug":"usecmdmakefile","date":"2017-08-23T02:20:24.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2017/08/23/usecmdmakefile/","link":"","permalink":"http://www.wangxinlei.cn/2017/08/23/usecmdmakefile/","excerpt":"","text":"以管理员身份运行CMD或PowerShell fsutil file createnew C:\\test.txt 1024 C:\\test.txt 为创建文件的路径 1024为创建文件的大小单位B","categories":[{"name":"运维","slug":"运维","permalink":"http://www.wangxinlei.cn/categories/运维/"}],"tags":[]},{"title":"C#多线程Ping测试","slug":"csharpmutithreadpingtest","date":"2017-06-30T07:39:15.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2017/06/30/csharpmutithreadpingtest/","link":"","permalink":"http://www.wangxinlei.cn/2017/06/30/csharpmutithreadpingtest/","excerpt":"","text":"public static Stopwatch sw = new Stopwatch(); public static void Main(string[] args) { sw.Start(); ModelDataBase db = new ModelDataBase(); List pingresult = new List(); var assets = db.tbl_Asset.ToList(); //读取IP地址列表并添加任务 foreach (var item in assets) { var ipadd = item.Asset_IPAddr; pingresult p = new pingresult(); p.ipadd = ipadd; p.PingTask = Task.Run(() =&gt; { return PingReply(ipadd); }); pingresult.Add(p); } Console.WriteLine(&quot;任务创建完毕\\\\t&quot;+ sw.Elapsed); foreach (var item in pingresult) { new Thread(item.FillResult).Start(); //Task.Run(new Action(item.FillResult)); } Console.ReadLine(); } public class pingresult { public string ipadd { get; set; } public PingReply PingReply { get; set; } public Task&lt;PingReply&gt; PingTask{get;set;} /// &lt;summary&gt; /// 从异步任务中获取测试结果并输出 /// &lt;/summary&gt; public void FillResult() { PingReply = PingTask.Result; ShowResult(); } /// &lt;summary&gt; /// 输出测试结果 /// &lt;/summary&gt; public void ShowResult() { var str = ipadd+ &quot;\\\\t&quot;; if (PingReply.Status == IPStatus.Success) { str+= PingReply.RoundtripTime + &quot;ms\\\\tTTL=&quot; + PingReply.Options.Ttl; //Console.WriteLine(&quot;Don&apos;t fragment: {0}&quot;, reply.Options.DontFragment); //Console.WriteLine(&quot;Buffer size: {0}&quot;, reply.Buffer.Length); } else { str += PingReply.Status; } str = (&quot;Thread ID:&quot; + Thread.CurrentThread.ManagedThreadId + &quot;\\\\t&quot; + sw.Elapsed) + Environment.NewLine + str; Console.WriteLine(str+ Environment.NewLine); } } /// &lt;summary&gt; /// 异步测试网络连通性 /// &lt;/summary&gt; /// &lt;param name=&quot;ipadd&quot;&gt;IP地址&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; public static Task&lt;PingReply&gt; PingReply(String ipadd) { Ping pingSender = new Ping(); PingOptions options = new PingOptions(); // Use the default Ttl value which is 128, // but change the fragmentation behavior. options.DontFragment = true; // Create a buffer of 32 bytes of data to be transmitted. string data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;; byte\\[\\] buffer = Encoding.ASCII.GetBytes(data); int timeout = 1000; return pingSender.SendPingAsync(ipadd, timeout, buffer, options); }","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"ASP.NET MVC中使用Ueditor","slug":"asp-net-mvc-ueditor","date":"2017-02-15T03:07:52.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2017/02/15/asp-net-mvc-ueditor/","link":"","permalink":"http://www.wangxinlei.cn/2017/02/15/asp-net-mvc-ueditor/","excerpt":"","text":"1.将下载的uediotr文件夹拖入项目中 2.在需要的Model类中添加[DataType(DataType.MultilineText)]标签 3.在View中添加Script引用 @section Scripts {@Scripts.Render(“~/bundles/jqueryval”, “~/Content/ueditor/ueditor.config.js”, “~/Content/ueditor/ueditor.all.js”) var editorOption = {initialFrameWidth: 784,initialFrameHeight: 400};var editor = new baidu.editor.ui.Editor(editorOption);editor.render(‘此处为对应类名‘);} 4.接收表单的对应Action上添加[ValidateInput(false)]标签 5.在要显示输入的地方使用HTML.Raw显示","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[{"name":"ASP.NET","slug":"ASP-NET","permalink":"http://www.wangxinlei.cn/tags/ASP-NET/"},{"name":"MVC","slug":"MVC","permalink":"http://www.wangxinlei.cn/tags/MVC/"},{"name":"Ueditor","slug":"Ueditor","permalink":"http://www.wangxinlei.cn/tags/Ueditor/"}]},{"title":"Bootstrap在使用Bundle时提示数组越界","slug":"bootstrap-bundle","date":"2017-02-14T14:27:27.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2017/02/14/bootstrap-bundle/","link":"","permalink":"http://www.wangxinlei.cn/2017/02/14/bootstrap-bundle/","excerpt":"","text":"在使用Bundle引入了从官方下载的bootstrap时编译会报索引超出了数组界限异常 “/”应用程序中的服务器错误。 索引超出了数组界限。说明: 执行当前 Web 请求期间，出现未经处理的异常。请检查堆栈跟踪信息，以了解有关该错误以及代码中导致错误的出处的详细信息。 异常详细信息: System.IndexOutOfRangeException: 索引超出了数组界限。 源错误: 行 6: 行 7: @ViewBag.Title - 我的 ASP.NET 应用程序行 8: @Styles.Render(“~/Content/css”) 行 9: @Scripts.Render(“~/bundles/modernizr”)行 10: 源文件: c:\\users\\final\\documents\\visual studio 2015\\Projects\\NetDisk\\NetDisk\\Views\\Shared\\Layout.cshtml 行: 8 这时到Content/bootstrap.css中找到2424行，会发现有多行行首为”“删掉这些”_”再次编译，正常运行。","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"辽宁省县区经纬坐标","slug":"liaoningxy","date":"2017-01-05T02:34:31.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2017/01/05/liaoningxy/","link":"","permalink":"http://www.wangxinlei.cn/2017/01/05/liaoningxy/","excerpt":"","text":"适用于1080P分辨率 具体经纬度有偏移10公里左右 在点大小12px时几乎不重叠 var geoCoordMap = { “康平县”: [123.335742, 42.751171], “法库县”: [123.413278, 42.509307], “新民市”: [122.824839, 42.007298], “辽中区”: [122.735799, 41.517894], “皇姑区”: [123.421817, 41.896006], “苏家屯区”: [123.349248, 41.671746], “于洪区”: [123.12861, 41.721581], “铁西区”: [123.3036, 41.828691], “沈河区”: [123.50942, 41.77965], “大东区”: [123.669031, 41.878177], “浑南区”: [123.504461, 41.641791], “和平区”: [123.425712, 41.79556], “沈北新区”: [123.519984, 42.06026], &quot;清原县&quot;: \\[124.924862, 42.105873\\], &quot;新宾县&quot;: \\[125.035246, 41.738324\\], &quot;抚顺县&quot;: \\[123.905701, 41.980746\\], &quot;望花区&quot;: \\[123.922655, 41.741218\\], &quot;新抚区&quot;: \\[123.853959, 41.847621\\], &quot;东洲区&quot;: \\[124.042596, 41.858129\\], &quot;顺城区&quot;: \\[123.96836, 41.916234\\], &quot;西丰县&quot;: \\[124.731855, 42.743536\\], &quot;昌图县&quot;: \\[124.117845, 42.791827\\], &quot;铁岭县&quot;: \\[123.676885, 42.23804\\], &quot;银州区&quot;: \\[123.851084, 42.291848\\], &quot;清河区&quot;: \\[124.166713, 42.554245\\], &quot;调兵山市&quot;: \\[123.571675, 42.475131\\], &quot;开原市&quot;: \\[124.037932, 42.552544\\], &quot;站前区&quot;: \\[122.283002, 40.692966\\], &quot;西市区&quot;: \\[122.203951, 40.672832\\], &quot;鲅鱼圈区&quot;: \\[122.131655, 40.23033\\], &quot;老边区&quot;: \\[122.372689, 40.682025\\], &quot;大石桥市&quot;: \\[122.512106, 40.650722\\], &quot;盖州市&quot;: \\[122.352998, 40.408562\\], &quot;清河门区&quot;: \\[121.424366, 41.787839\\], &quot;海州区&quot;: \\[121.641109, 42.026417\\], &quot;细河区&quot;: \\[121.741288, 42.04399\\], &quot;太平区&quot;: \\[121.705787, 41.992971\\], &quot;新邱区&quot;: \\[121.843048, 42.145903\\], &quot;阜新县&quot;: \\[121.702768, 42.151465\\], &quot;彰武县&quot;: \\[122.543151, 42.395064\\], &quot;北票市&quot;: \\[120.77083, 41.816017\\], &quot;喀左县&quot;: \\[119.746262, 41.132468\\], &quot;凌源市&quot;: \\[119.40943, 41.256164\\], &quot;建平县&quot;: \\[119.646296, 41.408706\\], &quot;朝阳县&quot;: \\[120.262853, 41.242755\\], &quot;双塔区&quot;: \\[120.460873, 41.559353\\], &quot;龙城区&quot;: \\[120.390833, 41.690589\\], &quot;连山区&quot;: \\[120.771427, 40.919333\\], &quot;南票区&quot;: \\[120.75548, 41.113792\\], &quot;龙港区&quot;: \\[120.899859, 40.73916\\], &quot;绥中县&quot;: \\[120.349008, 40.332558\\], &quot;建昌县&quot;: \\[119.839352, 40.828145\\], &quot;兴城市&quot;: \\[120.76073, 40.615724\\], &quot;义县&quot;: \\[121.235815, 41.533315\\], &quot;黑山县&quot;: \\[122.126503, 41.673349\\], &quot;北镇市&quot;: \\[121.783854, 41.59571\\], &quot;凌海市&quot;: \\[121.361866, 41.167448\\], &quot;古塔区&quot;: \\[121.131325, 41.190036\\], &quot;凌河区&quot;: \\[121.199165, 41.123553\\], &quot;太和区&quot;: \\[121.09223, 41.109639\\], &quot;双台子区&quot;: \\[122.049465, 41.206104\\], &quot;兴隆台区&quot;: \\[122.098332, 41.116161\\], &quot;大洼县&quot;: \\[122.086834, 41.001272\\], &quot;盘山县&quot;: \\[121.882164, 41.326266\\], &quot;铁东区&quot;: \\[123.061316, 41.093548\\], &quot;鞍山铁西区&quot;: \\[122.888841, 41.152675\\], &quot;千山区&quot;: \\[122.948058, 41.072666\\], &quot;立山区&quot;: \\[123.039469, 41.159193\\], &quot;海城市&quot;: \\[122.674398, 40.888362\\], &quot;台安县&quot;: \\[122.439545, 41.41938\\], &quot;岫岩县&quot;: \\[123.283373, 40.296641\\], &quot;白塔区&quot;: \\[123.165228, 41.436858\\], &quot;文圣区&quot;: \\[123.15488, 41.34117\\], &quot;宏伟区&quot;: \\[123.206047, 41.143284\\], &quot;弓长岭区&quot;: \\[123.419341, 41.156321\\], &quot;太子河区&quot;: \\[123.179026, 41.259659\\], &quot;辽阳县&quot;: \\[123.107737, 41.211918\\], &quot;灯塔市&quot;: \\[123.340002, 41.430368\\], &quot;平山区&quot;: \\[123.738754, 41.236397\\], &quot;溪湖区&quot;: \\[123.763762, 41.422532\\], &quot;明山区&quot;: \\[123.83074, 41.318804\\], &quot;南芬区&quot;: \\[123.749102, 41.111284\\], &quot;本溪县&quot;: \\[124.127396, 41.307534\\], &quot;桓仁县&quot;: \\[125.342768, 41.282384\\], &quot;元宝区&quot;: \\[124.394157, 40.140571\\], &quot;振兴区&quot;: \\[124.283774, 40.048728\\], &quot;振安区&quot;: \\[124.461997, 40.199673\\], &quot;东港市&quot;: \\[124.137745, 39.862009\\], &quot;凤城市&quot;: \\[124.060706, 40.460159\\], &quot;宽甸县&quot;: \\[124.767852, 40.742374\\], &quot;中山区&quot;: \\[121.653045, 38.938018\\], &quot;西岗区&quot;: \\[121.707649, 38.891015\\], &quot;沙河口区&quot;: \\[121.543223, 38.879781\\], &quot;金州区&quot;: \\[121.781166, 39.056454\\], &quot;甘井子区&quot;: \\[121.53012, 38.957997\\], &quot;旅顺口区&quot;: \\[121.254448, 38.850628\\], &quot;瓦房店市&quot;: \\[121.983536, 39.633444\\], &quot;庄河市&quot;: \\[122.970092, 39.691212\\], &quot;普兰店市&quot;: \\[121.857055, 39.405678\\], &quot;长海县&quot;: \\[122.589497, 39.280454\\], };","categories":[{"name":"运维","slug":"运维","permalink":"http://www.wangxinlei.cn/categories/运维/"}],"tags":[]},{"title":"邮件服务器更换域名","slug":"changemailname","date":"2016-12-09T02:35:16.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/12/09/changemailname/","link":"","permalink":"http://www.wangxinlei.cn/2016/12/09/changemailname/","excerpt":"","text":"按照上一篇 基于CentOS6.5搭建的邮件系统 搭建完邮件服务器后需要将邮件服务器克隆并更换域名这时只需按照如下方法修改相关配置文件即可 修改IP地址克隆邮件服务器虚拟机后MAC地址会发生变化这时需要做一些操作将”新网卡”变成eth0 # vi /etc/udev/rules.d/70-persistent-net.rules ##出现以下内容，会看到有2块网卡eth0和eth1，eth0为原系统的，eth1为新生成的# PCI device0x1022:0x2000 (pcnet32)SUBSYSTEM==”net”, ACTION==”add”,DRIVERS==”?“, ATTR{address}==”00:0c:29:16:f4:91”,ATTR{type}==”1”, KERNEL==”eth“, NAME=”eth0” # PCI device0x1022:0x2000 (pcnet32)SUBSYSTEM==”net”, ACTION==”add”,DRIVERS==”?“, ATTR{address}==”00:0c:29:52:45:fc”,ATTR{type}==”1”, KERNEL==”eth“, NAME=”eth1” ##将原网卡注释掉并将新网卡名称变更为eth0 # PCI device0x1022:0x2000 (pcnet32) #SUBSYSTEM==”net”, ACTION==”add”,DRIVERS==”?“, ATTR{address}==”00:0c:29:16:f4:91”,ATTR{type}==”1”, KERNEL==”eth“, NAME=”eth0” # PCI device0x1022:0x2000 (pcnet32)SUBSYSTEM==”net”, ACTION==”add”,DRIVERS==”?“, ATTR{address}==”00:0c:29:52:45:fc”,ATTR{type}==”1”, KERNEL==”eth“, NAME=”eth0” 记录一下新生成的MAC地址下一步操作会用到 #vi /etc/sysconfig/network-scripts/ifcfg-eth0 HWADDR=00:0C:29:52:45:fc ##将MAC地址修改为新MACIPADDR=192.168.1.99 ##修改IP地址 #vi /etc/sysconfig/network HOSTNAME=mail.fmail.com ##修改主机名 #shutdown -r now ##重新启动 启动之后就可以重新使用SSH连接了 修改POSTFIX配置文件vi /etc/postfix/main.cfmyhostname = mail.fmail.com 重新初始化数据库#cd /var/www/extsuite #mysql -uroot -p123456mysql&gt; DROP DATABASE extmail;mysql&gt; quit ##email.com为原域名 fmail.com为现域名[root@mail extsuite]# mysql -uroot -p123456 &lt; extman/docs/extmail.sql[root@mail extsuite]# sed -i ‘s/email.com/fmail.com/g’ extman/docs/init.sql[root@mail extsuite]# sed -i ‘s/1000/1002/g’ extman/docs/init.sql[root@mail extsuite]# mysql -uroot -p123456 &lt; /var/www/extsuite/extman/docs/init.sql 修改Apache配置#vi /etc/httpd/conf.d/extmail.confServerName mail.fmail.com ##修改ServerName 建立Maildir#cd /var/www/extsuite/extman/tools[root@mail tools]# ./maildirmake.pl /home/domains/fmail.com/postmaster/Maildir[root@mail tools]# chown -R vmail:vmail /home/domains 重新启动#shutdown -r now","categories":[{"name":"extmail","slug":"extmail","permalink":"http://www.wangxinlei.cn/categories/extmail/"}],"tags":[]},{"title":"基于CentOS6.5搭建的邮件系统","slug":"emailsystembaseoncentos6-5","date":"2016-12-08T07:55:32.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/12/08/emailsystembaseoncentos6-5/","link":"","permalink":"http://www.wangxinlei.cn/2016/12/08/emailsystembaseoncentos6-5/","excerpt":"","text":"-1 参考资料本资料主要参考一下资料整理而成，实现了最基本的WebMail以及IMAP和POP3功能。若要使用更多功能(如反垃圾邮件和防病毒)请到以下参考资料查看。 月晴星飞博客-Postfix邮箱 记事本博客-Postfix+Sasl+Courier-authlib+Dovecot+MySQL+extmail实现WebMail 相关源码包可到 http://down.51cto.com/data/1955875 下载(月晴星飞博客提供) ExtMail可到官网或 Postfix邮箱(三)：安装Webmail前台 下载 0 准备工作0.1 系统环境CentOS 6.5 x86_64 下载地址 http://vault.centos.org/6.5/isos/x86\\_64/CentOS-6.5-x86_64-minimal.iso 主机名 mail.email.com IP地址 eth0=192.168.1.92 DNS: 192.168.1.91 (Windows Server) 在DNS中做好到 email.com 的解析 (泛解析及MX记录) 关闭SELinux 1.永久性关闭（这样需要重启服务器后生效）# sed -i ‘s/SELINUX=enforcing/SELINUX=disabled/‘ /etc/selinux/config2.临时性关闭（立即生效，但是重启服务器后失效）# setenforce 0 #设置selinux为permissive模式（即关闭）# setenforce 1 #设置selinux为enforcing模式（即开启） 0.2 安装软件编译环境 #yum install gcc gcc-c++ 依赖软件 #yum install openssl openssl-devel cyrus-sasl libtool-ltdl libtool-ltdl-devel db4 db4-devel expect expect-devel pcre pcre-devel LAMP环境 #yum install httpd httpd-devel mysql mysql-server mysql-devel php php-mysql 设置防火墙 #iptables -I INPUT -p tcp -m multiport –dport 21,80 -j ACCEPT #service iptables save 安装EPEL软件源 #wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm #rpm -ivh epel-release-latest-6.noarch.rpm&gt; #yum repolist 同步系统时间 #yum install ntpdate&gt; #ntpdate time1.aliyun.com &amp;&amp; hwclock -w 1 安装POSTFIX1.1 安装[root@mail ~]# rpm -aq|grep postfixpostfix-2.6.6-2.2.el6_1.x86_64 #CentOS6.5已默认安装了2.6.6版本，再升级一下：[root@mail ~]# yum update postfixpostfix-2.6.6-6.el6_5.x86_64 1.2 配置[root@mail ~]# cd /etc/postfix[root@mail postfix]# postconf -n /etc/postfix/main2.cf[root@mail postfix]# mv main.cf main.cf.old[root@mail postfix]# mv main2.cf main.cf[root@mail postfix]# vi main.cf# 注释掉下面这行，否则25端口只能本地连接# inet_interfaces = localhost# 添加以下基本配置# 主机设置mynetworks = 127.0.0.1myhostname = mail.email.commydestination = $myhostname, localhost.$mydomain, localhost# 显示连接信息mail_name = Postfix - by email.comsmtpd_banner = $myhostname ESMTP $mail_name# 立即响应smtpd_error_sleep_time = 0s# 邮件大小和邮箱大小限制10M、2Gmessage_size_limit = 10485760mailbox_size_limit = 2097152000show_user_unknown_table_name = no# 队列超时限制 1天bounce_queue_lifetime = 1dmaximal_queue_lifetime = 1d 1.3 启动[root@mail postfix]# service postfix start[root@mail postfix]# chkconfig postfix on[root@mail postfix]# ps aux|grep postfixroot 3070 0.0 0.3 81292 3436 ? Ss 13:59 0:00 /usr/libexec/postfix/masterpostfix 3072 0.0 0.3 81372 3392 ? S 13:59 0:00 pickup -l -t fifo -upostfix 3073 0.0 0.3 81440 3440 ? S 13:59 0:00 qmgr -l -t fifo -uroot 3124 0.0 0.0 103248 880 pts/1 S+ 14:02 0:00 grep postfix[root@mail postfix]# netstat -tlnp|grep 25tcp 0 0 127.0.0.1:25 0.0.0.0: LISTEN 3070/mastertcp 0 0 ::1:25 ::: LISTEN 3070/master 1.4检查[root@mail postfix]# postfix check #没有错误返回表示配置正确[root@mail postfix]# postconf -a #出现cyrus表示可以支持cyrus认证用户[root@mail postfix]# postconf -m #出现mysql表示可以支持mysql存储账号 1.5设置防火墙[root@mail ~]# iptables -I INPUT -p tcp –dport 25 -j ACCEPT[root@mail ~]# service iptables save 2 安装Courier-Authlib2.1 编译安装#先查看下uid 1000是否已使用[root@mail ~]# cat /etc/passwd #安装系统时创建了一个用户，占用了1000，因此使用1002[root@mail ~]# groupadd vmail -g 1002[root@mail ~]# useradd vmail -u 1002 -g 1002 -d /home/domains[root@mail ~]# cd /usr/local/src[root@mail src]# wget http://cznic.dl.sourceforge.net/project/courier/authlib/0.66.1/courier-authlib-0.66.1.tar.bz2[root@mail src]# tar -jxf courier-authlib-0.66.1.tar.bz2[root@mail src]# cd courier-authlib-0.66.1[root@mail courier-authlib-0.66.1]# ./configure –with-mysql-libs –with-mysql-includes –with-authmysql –with-authmysql=yes –with-mailuser=vmail –with-mailgroup=vmail[root@mail courier-authlib-0.66.1]# make[root@mail courier-authlib-0.66.1]# make install[root@mail courier-authlib-0.66.1]# make install-configure 说明：编译时可能出现报错，基本是因为某些包没有安装，YUM装上后重新编译；因此建议先按上文“系统环境”安装好依赖软件。 mysql参数也可以指定绝对路径： –with-mysql-libs=/usr/local/mysql/lib/mysql\\ –with-mysql-includes=/usr/local/mysql/include/mysql/ \\ 2.2 配置[root@mail courier-authlib-0.66.1]# cd /usr/local/etc/authlib[root@mail authlib]# vi authmysqlrcMYSQL_SERVER localhostMYSQL_USERNAME extmailMYSQL_PASSWORD extmailMYSQL_SOCKET /var/lib/mysql/mysql.sockMYSQL_PORT 3306MYSQL_OPT 0MYSQL_DATABASE extmailMYSQL_USER_TABLE mailboxMYSQL_CRYPT_PWFIELD passwordMYSQL_UID_FIELD 1002MYSQL_GID_FIELD 1002MYSQL_LOGIN_FIELD usernameMYSQL_HOME_FIELD homedirMYSQL_NAME_FIELD nameMYSQL_MAILDIR_FIELD maildirMYSQL_QUOTA_FIELD quotaMYSQL_SELECT_CLAUSE SELECT username,password,””,uidnumber,gidnumber,\\CONCAT(‘/home/domains/‘,homedir), \\CONCAT(‘/home/domains/‘,maildir), \\quota, \\name \\FROM mailbox \\WHERE username = ‘$(local_part)@$(domain)’[root@mail authlib]# vi authdaemonrcauthmodulelist=”authmysql”authmodulelistorig=”authmysql”[root@mail authlib]# ln -s /usr/local/etc/authlib /etc/authlib 2.3启动[root@mail authlib]# /usr/local/sbin/authdaemond start[root@mail authlib]# ps aux|grep authdaemondroot 9954 0.0 0.0 4308 440 ? S 15:31 0:00 /usr/local/sbin/courierlogger -pid=/usr/local/var/spool/authdaemon/pid-start /usr/local/libexec/courier-authlib/authdaemondroot 9955 0.0 0.2 66500 2720 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemondroot 9956 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemondroot 9957 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemondroot 9958 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemondroot 9959 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemondroot 9960 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemondroot 10024 0.0 0.0 112656 980 pts/1 S+ 15:31 0:00 grep –color=auto authdaemond[root@mail authlib]# echo “/usr/local/sbin/authdaemond start” &gt;&gt; /etc/rc.d/rc.local 3 安装Maildrop3.1 安装Courier-Unicode[root@mail ~]# cd /usr/local/src[root@mail src]# wget http://jaist.dl.sourceforge.net/project/courier/courier-unicode/1.1/courier-unicode-1.1.tar.bz2[root@mail src]# tar -jxf courier-unicode-1.1.tar.bz2[root@mail src]# cd courier-unicode-1.1[root@mail courier-unicode-1.1]# ./configure[root@mail courier-unicode-1.1]# make &amp;&amp; make install 3.2 安装Maildrop[root@mail ~]# cd /usr/local/src[root@mail src]# wget http://jaist.dl.sourceforge.net/project/courier/maildrop/2.7.2/maildrop-2.7.2.tar.bz2[root@mail src]# tar -jxf maildrop-2.7.2.tar.bz2[root@mail src]# cd maildrop-2.7.2[root@mail maildrop-2.7.2]# ./configure –enable-maildirquota –enable-maildrop-uid=1002 –enable-maildrop-gid=1002 –with-trashquota[root@mail maildrop-2.7.2]# make[root@mail maildrop-2.7.2]# make install 3.3 配置[root@mail maildrop-2.7.2]# vi /etc/postfix/master.cfmaildrop unix - n n - - pipeflags=DRhu user=vmail argv=/usr/local/bin/maildrop -w 90 -d ${user}@${nexthop} ${recipient} ${user} ${extension} {nexthop} #flags前的两个空格一定要保留 [root@mail maildrop-2.7.2]# vi /etc/postfix/main.cf #控制maildrop一次只处理一封邮件maildrop_destination_recipient_limit = 1 用户vmail和组vmail将惯穿整个邮件系统，一定要记住它们的名称vmail和ID号1002，如果不和本文设置的一样，请在编译和配置时修改成你自己的。 建立到libunicode.so的链接 ln -s /usr/local/lib/libunicode.so.1 /lib64/ 若在上述路径未找到请使用find / -name libunicode.so 查找 4 Webmail前台4.1 安装[root@mail ~]# cd /usr/local/src[root@mail src]# tar -zxvf extmail-1.2.tar.gz[root@mail src]# tar -zxvf extman-1.1.tar.gz[root@mail src]# mkdir /var/www/extsuite[root@mail src]# mv extman-1.1 /var/www/extsuite/extman[root@mail src]# mv extmail-1.2 /var/www/extsuite/extmail 4.2 配置extmail[root@mail src]# cd /var/www/extsuite[root@mail extsuite]# cp extmail/webmail.cf.default extmail/webmail.cf[root@mail extsuite]# vi extmail/webmail.cfSYS_MYSQL_USER = extmailSYS_MYSQL_PASS = extmailSYS_MYSQL_DB = extmail 4.3 配置extman[root@mail extsuite]# mkdir /var/www/extsuite/extman/session[root@mail extsuite]# cp extman/webman.cf.default extman/webman.cf[root@mail extsuite]# vi extman/webman.cfSYS_SESS_DIR = /var/www/extsuite/extman/session/SYS_DEFAULT_UID = 1002SYS_DEFAULT_GID = 1002 注意：用户和组1002是前一小节中创建的用户和组vmail，注意保持一致。目录session用来保存临时会话信息(由于原来的目录会被centos系统随时清理故需要新建目录)。 4.4 初始化数据库4.4.1设置数据库root账户的密码[root@mail extsuite]# service mysqld start[root@mail extsuite]# mysql -urootmysql&gt;set password for root@localhost=password(‘123456’);mysql&gt;quit 4.4.2 导入数据库及表结构[root@mail extsuite]# mysql -uroot -p123456 &lt; extman/docs/extmail.sql 4.4.3 修改参数并导入数据[root@mail extsuite]# sed -i ‘s/extmail.org/email.com/g’ extman/docs/init.sql[root@mail extsuite]# sed -i ‘s/1000/1002/g’ extman/docs/init.sql[root@mail extsuite]# mysql -uroot -p123456 &lt; /var/www/extsuite/extman/docs/init.sql 4.4.4 查看数据库确认设置[root@mail extsuite]# mysql -uroot -p123456mysql&gt; use extmail;mysql&gt; show tables;+——————-+| Tables_in_extmail |+——————-+| alias || domain || domain_manager || mailbox || manager |+——————-+mysql&gt; select username,uidnumber,gidnumber from mailbox;+————————-+———–+———–+| username | uidnumber | gidnumber |+————————-+———–+———–+| postmaster@email.com | 1002 | 1002 |+————————-+———–+———–+1 row in set (0.00 sec)mysql&gt; quit 4.5 配置postfix[root@mail extsuite]# cp extman/docs/mysql_*.cf /etc/postfix/[root@mail extsuite]# vi /etc/postfix/main.cf# 添加 extmail 配置virtual_alias_maps = mysql:/etc/postfix/mysql_virtual_alias_maps.cfvirtual_mailbox_domains = mysql:/etc/postfix/mysql_virtual_domains_maps.cfvirtual_mailbox_maps = mysql:/etc/postfix/mysql_virtual_mailbox_maps.cfvirtual_transport = maildropvirtual_uid_maps = static:1002virtual_gid_maps = static:1002 4.6 设置文件权限归属[root@mail extsuite]# chown root.root -R extmail extman[root@mail extsuite]# chown -R vmail:vmail extmail/cgi/ extman/cgi/ extman/session 4.7 配置Apache[root@mail extsuite]# vi /etc/httpd/conf.d/extmail.conf# VirtualHost for ExtMail SolutionNameVirtualHost *:80 ServerName mail.email.comDocumentRoot /var/www/extsuite/extmail/html/ScriptAlias /extmail/cgi/ /var/www/extsuite/extmail/cgi/Alias /extmail /var/www/extsuite/extmail/html/ScriptAlias /extman/cgi/ /var/www/extsuite/extman/cgi/Alias /extman /var/www/extsuite/extman/html/# Suexec configSuexecUserGroup vmail vmail 4.8 重启相关服务并设置自启[root@mail extsuite]# service postfix restart[root@mail extsuite]# service httpd restart[root@mail extsuite]# chkconfig postfix on[root@mail extsuite]# chkconfig httpd on 4.9建立Maildir手动建立Maildir [root@mail extsuite]# cd extman/tools[root@mail tools]# ./maildirmake.pl /home/domains/email.com/postmaster/Maildir[root@mail tools]# chown -R vmail:vmail /home/domains 测试authlib认证登陆账号 必须先启动authdaemond进程，否则报Authentication FAILED: Operation not permitted [root@mail tools]# /usr/local/sbin/authtest -s login postmaster@email.com extmailAuthentication succeeded.Authenticated: postmaster@email.com (uid 1002, gid 1002)Home Directory: /home/domains/email.com/postmasterMaildir: /home/domains/email.com/postmaster/Maildir/Quota: 104857600SEncrypted Password: $1$phz1mRrj$3ok6BjeaoJYWDBsEPZb5C0Cleartext Password: extmailOptions: (none) 输出表明ExtMan的安装正确，数据库也正确导入，courier-authlib能正确连接到mysql数据库 4.10安装其他依赖包# yum install -y rrdtool rrdtool-perl# yum install -y cpan perl# yum install -y perl-YAML perl-Test-Exception perl-Crypt-PasswdMD5 perl-GD perl-CGI perl-Time-HiRes # yum install perl-Unix-Syslog# yum install perl-File-Tail# yum install perl-Encode-HanExtra 4.11启动进程[root@mail tools]# cd /var/www/extsuite/extman[root@mail extman]# cp -R addon/mailgraph_ext/ /usr/local/[root@mail extman]# /usr/local/mailgraph_ext/mailgraph-init startStarting mail statistics grapher: mailgraph_extStarting queue statistics grapher: qmonitor[root@mail courier-unicode-1.1]# ps aux|grep mailgraph_extroot 63848 0.0 0.5 187384 5884 ? SNs 15:53 0:00 /usr/bin/perl -w /usr/local/mailgraph_ext/mailgraph_ext.pl -l /var/log/maillog -d –daemon-pid=/var/run/mailgraph.pid –daemon-rrd=/var/libroot 63850 0.2 0.4 181624 4204 ? SNs 15:53 0:00 /usr/bin/perl -w /usr/local/mailgraph_ext/qmonitor.pl -d –daemon-pid=/var/run/qmonitor.pid –daemon-rrd=/var/libroot 63852 0.0 0.0 103256 852 pts/1 S+ 15:53 0:00 grep mailgraph_ext[root@mail extman]# /var/www/extsuite/extman/daemon/cmdserver -v -dloaded ok[root@mail extman]# ps aux|grep cmdserverroot 36597 0.0 0.5 144572 5288 ? Ss 10:23 0:00 /usr/bin/perl -w /var/www/extsuite/extman/daemon/cmdserver -v -droot 36568 0.0 0.0 112656 980 pts/1 S+ 10:21 0:00 grep –color=auto cmdserver[root@mail extman]# echo “/usr/local/mailgraph_ext/mailgraph-init start” &gt;&gt; /etc/rc.d/rc.local[root@mail extman]# echo “/var/www/extsuite/extman/daemon/cmdserver -v -d” &gt;&gt; /etc/rc.d/rc.local进程mailgraph-init用于生成图形日志；进程cmdserver用于生成extman主页的系统信息。 4.12定时任务[root@mail extman]# crontab -e0 4 /var/www/extsuite/extman/tools/expireusers.pl -all postmaster@email.com30 4 /var/www/extsuite/extman/tools/reportusage.pl -all /home/domains postmaster@email.com[root@mail extman]# service crond restart 每天4点发送关于用户到期的报告给管理员邮箱； 每天4点半发送邮箱容量使用情况报告给管理员邮箱。 4.13 测试Web访问Extmail 账号：postmaster 密码：extmail 域名：email.com Extman 账号：root@email.com 密码：extmail*123* 4.14 检查Maildrop查看版本信息 [root@mail extsuite]# maildrop -vmaildrop 2.7.2 Copyright 1998-2005 Double Precision, Inc.GDBM/DB extensions enabled.Courier Authentication Library extension enabled. #必须有这条Maildir quota extension are now always enabled.This program is distributed under the terms of the GNU General PublicLicense. See COPYING for additional information. 测试Maildrop连接 [root@mail extsuite]# echo “test” | maildrop -V 10 -d postmaster@email.commaildrop: authlib: groupid=1002maildrop: authlib: userid=1002maildrop: authlib: logname=postmaster@email.com, home=/home/domains/email.com/postmaster, mail=/home/domains/email.com/postmaster/Maildir/maildrop: Changing to /home/domains/email.com/postmasterMessage envelope sender=MAILER-DAEMONmaildrop: Attempting .mailfiltermaildrop: Delivery complete. 5 安装Cyrus-SASL使Postfix支持SMTP认证5.1检查所需包是否安装[root@mail ~]# rpm -aq|grep cyrus-saslcyrus-sasl-gssapi-2.1.23-13.el6_3.1.x86_64cyrus-sasl-plain-2.1.23-13.el6_3.1.x86_64cyrus-sasl-lib-2.1.23-13.el6_3.1.x86_64cyrus-sasl-2.1.23-13.el6_3.1.x86_64cyrus-sasl-md5-2.1.23-13.el6_3.1.x86_64 若缺少以上包请使用yum安装 5.2配置cyrus-sasl[root@mail ~]# vi /etc/sasl2/smtpd.conf #pwcheck_method: saslauthd #mech_list: plain loginpwcheck_method: authdaemondlog_level: 3mech_list: PLAIN LOGINauthdaemond_path:/usr/local/var/spool/authdaemon/socket[root@mail ~]# chmod 755 /usr/local/var/spool/authdaemon 5.3配置postfix[root@mail ~]# vi /etc/postfix/main.cf# SMTP 收件方限制smtpd_recipient_restrictions =permit_mynetworks,permit_sasl_authenticated,reject_non_fqdn_hostname,reject_non_fqdn_sender,reject_non_fqdn_recipient,reject_unauth_destination,reject_unauth_pipelining,reject_invalid_hostname# SMTP 发件方限制smtpd_sender_restrictions =permit_mynetworks,reject_sender_login_mismatch,reject_authenticated_sender_login_mismatch,reject_unauthenticated_sender_login_mismatch# SMTP 用户登陆限制smtpd_sender_login_maps =mysql:/etc/postfix/mysql_virtual_sender_maps.cf,mysql:/etc/postfix/mysql_virtual_alias_maps.cf# SMTP 认证配置broken_sasl_auth_clients = yessmtpd_sasl_auth_enable = yessmtpd_sasl_local_domain = $myhostnamesmtpd_sasl_security_options = noanonymous 重启Postfix [root@mail ~]# service postfix restart 5.4测试SMTP认证获得用户名和密码的Base64编码 [root@mail ~]# perl -e ‘use MIME::Base64; print encode_base64(“postmaster\\@email.com”)’cG9zdG1hc3RlclxAZW1haWwuY29t[root@mail ~]# perl -e ‘use MIME::Base64; print encode_base64(“extmail”)’ZXh0bWFpbA== 使用telnet测试 [root@mail ~]# telnet localhost 25Trying ::1…Connected to localhost.Escape character is ‘^]‘.220 mail.email.com ESMTP Postfix - by email.comehlo localhost #输入hello内容250-mail.email.com250-PIPELINING250-SIZE 10485760250-VRFY250-ETRN250-AUTH PLAIN LOGIN #显示认证登陆表示Postfix成功250-AUTH=PLAIN LOGIN #调用Cyrus-SASL进行SMTP认证250-ENHANCEDSTATUSCODES250-8BITMIME250 DSNauth login #输入认证登陆命令334 VXNlcm5hbWU6cG9zdG1hc3RlclxAZW1haWwuY29t #输入账号的Base64编码334 UGFzc3dvcmQ6ZXh0bWFpbA== #输入密码的Base64编码235 2.7.0 Authentication successful #显示认证成功quit221 2.0.0 ByeConnection closed by foreign host. 以上信息表示postfix成功使用并通过SMTP认证（cyrus-sasl） 6 实现POP3、IMAP功能6.1 安装Courier-IMAP[root@mail ~]# cd /usr/local/src[root@mail src]# wget http://ncu.dl.sourceforge.net/project/courier/imap/4.15.1/courier-imap-4.15.1.tar.bz2[root@mail src]# tar -jxf courier-imap-4.15.1.tar.bz2[root@mail src]# cd courier-imap-4.15.1[root@mail courier-imap-4.15.1]# ./configure –enable-workarounds-for-imap-client-bugs –with-authchangepwdir –enable-unicode –with-trashquota –disable-root-check[root@mail courier-imap-4.15.1]# make[root@mail courier-imap-4.15.1]# make install[root@mail courier-imap-4.15.1]# make install-configure 6.2 启动imap[root@mail courier-imap-4.15.1]# cd /usr/lib/courier-imap/[root@mail courier-imap]# /usr/lib/courier-imap/libexec/imapd.rc start[root@mail courier-imap]# echo “/usr/lib/courier-imap/libexec/imapd.rc start” &gt;&gt; /etc/rc.local[root@mail courier-imap]# ps aux|grep imapdroot 46134 0.0 0.0 4068 340 ? S 16:41 0:00 /usr/local/sbin/courierlogger -pid=/var/run/imapd.pid -start -name=imapd /usr/lib/courier-imap/libexec/couriertcpd -address=0 -maxprocs=40 -maxperip=4 -nodnslookup -noidentlookup 143 /usr/lib/courier-imap/sbin/imaplogin /usr/lib/courier-imap/bin/imapd Maildirroot 46135 0.1 0.0 8280 636 ? S 16:41 0:00 /usr/lib/courier-imap/libexec/couriertcpd -address=0 -maxprocs=40 -maxperip=4 -nodnslookup -noidentlookup 143 /usr/lib/courier-imap/sbin/imaplogin /usr/lib/courier-imap/bin/imapd Maildirroot 46137 0.0 0.0 103256 848 pts/1 S+ 16:41 0:00 grep imapd[root@mail courier-imap]# netstat -tnlp|grep 143tcp6 0 0 :::143 :::* LISTEN 32666/couriertcpd 6.3 启动pop3[root@mail courier-imap]# /usr/lib/courier-imap/libexec/pop3d.rc start[root@mail courier-imap]# echo “/usr/lib/courier-imap/libexec/pop3d.rc start” &gt;&gt; /etc/rc.local[root@mail courier-imap]# ps aux|grep pop3droot 46149 0.0 0.0 4068 344 ? S 16:42 0:00 /usr/local/sbin/courierlogger -pid=/var/run/pop3d.pid -start -name=pop3d /usr/lib/courier-imap/libexec/couriertcpd -address=0 -maxprocs=40 -maxperip=4 -nodnslookup -noidentlookup 110 /usr/lib/courier-imap/sbin/pop3login /usr/lib/courier-imap/bin/pop3d Maildirroot 46150 0.0 0.0 8280 632 ? S 16:42 0:00 /usr/lib/courier-imap/libexec/couriertcpd -address=0 -maxprocs=40 -maxperip=4 -nodnslookup -noidentlookup 110 /usr/lib/courier-imap/sbin/pop3login /usr/lib/courier-imap/bin/pop3d Maildirroot 46155 0.0 0.0 103256 848 pts/1 S+ 16:42 0:00 grep pop3d[root@mail courier-imap]# netstat -tnlp|grep 110tcp6 0 0 :::110 :::* LISTEN 32761/couriertcpd 6.4 设置imapd、pop3为启用状态[root@mail courier-imap]# sed -i ‘s/IMAPDSTART=NO/IMAPDSTART=YES/g’ etc/imapd[root@mail courier-imap]# sed -i ‘s/POP3DSTART=NO/POP3DSTART=YES/g’ etc/pop3d 6.5 设置防火墙策略[root@mail ~]# iptables -I INPUT -p tcp -m multiport –dport 110,143 -j ACCEPT[root@mail ~]# service iptables save 6.6 测试IMAP连接[root@mail courier-imap]# telnet localhost 110Trying ::1…Connected to localhost.Escape character is ‘^]‘.+OK Hello there.user postmaster@email.com #输入用户账号+OK Password required.pass extmail #输入用户密码+OK logged in.list #显示邮件列表+OK POP3 clients that break here, they violate STD53.1 62 7163 9234 1197.quit #退出+OK Bye-bye.Connection closed by foreign host. 6.7 测试POP3连接[root@mail courier-imap]# telnet localhost 143Trying ::1…Connected to localhost.Escape character is ‘^]‘.* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACETHREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTAIDLE ACL ACL2=UNION STARTTLS] Courier-IMAP ready.Copyright 1998-2011 Double Precision, Inc.See COPYING for distribution information.tag login postmaster@email.com extmail #输入登陆账号、密码tag OK LOGIN Ok. #显示登陆成功tag logout #退出* BYE Courier-IMAP server shutting downtag OK LOGOUT completedConnection closed by foreign host.","categories":[{"name":"extmail","slug":"extmail","permalink":"http://www.wangxinlei.cn/categories/extmail/"}],"tags":[]},{"title":"在空ASP.NET MVC网站中使用Bundle","slug":"using-bundle-in-empty-asp-net-mvc-project","date":"2016-09-26T05:46:34.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/09/26/using-bundle-in-empty-asp-net-mvc-project/","link":"","permalink":"http://www.wangxinlei.cn/2016/09/26/using-bundle-in-empty-asp-net-mvc-project/","excerpt":"","text":"1.在NuGet管理器中添加包 Microsoft.AspNet.Web.Optimization 2.在Global.asax中using System.Web.Optimization; 并在protected void Application_Start()方法中添加语句 BundleConfig.RegisterBundles(BundleTable.Bundles); 3.在Views文件夹下的Web.config中在configuration节点的system.web.webPages.razor节点的pages pageBaseType=”System.Web.Mvc.WebViewPage”节点的namespaces节点添加 4.在App_Start文件夹下创建类BundleConfig.csusing System.Web;using System.Web.Optimization; namespace ProjectName{ public class BundleConfig { // 有关绑定的详细信息，请访问 http://go.microsoft.com/fwlink/?LinkId=301862 public static void RegisterBundles(BundleCollection bundles) { bundles.Add(new ScriptBundle(“~/bundles/jquery”).Include( “~/Scripts/jquery-{version}.js”)); bundles.Add(new ScriptBundle(&quot;~/bundles/jqueryval&quot;).Include( &quot;~/Scripts/jquery.validate*&quot;)); // 使用要用于开发和学习的 Modernizr 的开发版本。然后，当你做好 // 生产准备时，请使用 http://modernizr.com 上的生成工具来仅选择所需的测试。 bundles.Add(new ScriptBundle(&quot;~/bundles/modernizr&quot;).Include( &quot;~/Scripts/modernizr-*&quot;)); bundles.Add(new ScriptBundle(&quot;~/bundles/bootstrap&quot;).Include( &quot;~/Scripts/bootstrap.js&quot;, &quot;~/Scripts/respond.js&quot;)); bundles.Add(new StyleBundle(&quot;~/Content/css&quot;).Include( &quot;~/Content/bootstrap.css&quot;, &quot;~/Content/site.css&quot;)); } } } 5.在视图中引用@Styles.Render(“~/Content/css”)@Scripts.Render(“~/bundles/modernizr”)@Scripts.Render(“~/bundles/jquery”)@Scripts.Render(“~/bundles/bootstrap”)","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"ASP.NET MVC实现灵活的角色控制功能","slug":"asp-net-mvc-roles","date":"2016-09-08T02:18:37.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/09/08/asp-net-mvc-roles/","link":"","permalink":"http://www.wangxinlei.cn/2016/09/08/asp-net-mvc-roles/","excerpt":"","text":"采用ASP.NET MVC+Entity Framework Modelpublic class User { public string Username { get; set; } public string Password { get; set; } public virtual Power Power { get; set; } } public class Power { public bool P_Admin { get; set; } public bool P_Event { get; set; } //此处可添加更多权限 //重写tostring方法返回拥有的权限 public override string ToString() { Type type = this.GetType(); System.Reflection.PropertyInfo[] ps = type.GetProperties(); String roles=””; foreach (PropertyInfo i in ps) { if (i.PropertyType == typeof(bool))//只获取bool类型的属性 { var obj = i.GetValue(this, null); if ((bool)obj) { roles += i.Name+”,”;//值为true的属性加入到权限中以逗号分隔 } } } roles=roles.Substring(0, roles.Length - 1); return roles; } } View@model ProjectName.Models.User@{ ViewBag.Title = “login”;} 登陆 @Html.ValidationMessage(“CredentialError”, new { style = “color:red;” }) @using (Html.BeginForm(“DoLogin”, “Home”, FormMethod.Post, new { @class = “” })) { @Html.TextBoxFor(x =&gt; x.Username, new { placeholder = “用户名”, @class = “form-control” }) @Html.ValidationMessageFor(x =&gt; x.Username) @Html.PasswordFor(x =&gt; x.Password, new { placeholder = “密码”, @class = “form-control” }) } Controllerspublic class HomeController : Controller { private Modeldb db = new Modeldb(); // GET: Home public ActionResult Index() { return View(); } public ActionResult Login() { return View(); } \\[HttpPost\\] public ActionResult DoLogin(User u) { var user = db.User.Where(a =&gt; a.Username == u.Userame).Select(a =&gt; a); if (user.Count() &gt; 0 &amp;&amp; user.First().Password== u.Password) { FormsAuthenticationTicket ticket = new FormsAuthenticationTicket ( 1, user.First().Username, DateTime.Now, DateTime.Now.AddMinutes(20), true, user.First().Power.ToString() ); var cookie = new HttpCookie(FormsAuthentication.FormsCookieName, FormsAuthentication.Encrypt(ticket)); cookie.HttpOnly = true; HttpContext.Response.Cookies.Add(cookie); return RedirectToAction(&quot;Index&quot;, &quot;Admin&quot;); } else { ModelState.AddModelError(&quot;CredentialError&quot;, &quot;用户名或密码不正确&quot;); return View(&quot;Login&quot;, u); } } public ActionResult Logout() { FormsAuthentication.SignOut(); return RedirectToAction(&quot;Login&quot;); } } 自定义RoleProvider继承RoleProvider只需给出GetRolesForUser的具体实现即可 namespace ProjectName.utils{ public class CustomRoleProvider: RoleProvider { public override string ApplicationName { get { throw new NotImplementedException(); } set { throw new NotImplementedException(); } } public override void AddUsersToRoles(string\\[\\] usernames, string\\[\\] roleNames) { throw new NotImplementedException(); } public override void CreateRole(string roleName) { throw new NotImplementedException(); } public override bool DeleteRole(string roleName, bool throwOnPopulatedRole) { throw new NotImplementedException(); } public override string\\[\\] FindUsersInRole(string roleName, string usernameToMatch) { throw new NotImplementedException(); } public override string\\[\\] GetAllRoles() { throw new NotImplementedException(); } public override string\\[\\] GetRolesForUser(string username) { var cookie = HttpContext.Current.Request.Cookies\\[FormsAuthentication.FormsCookieName\\]; var ticket = FormsAuthentication.Decrypt(cookie.Value); string role = ticket.UserData; return role.Split(&apos;,&apos;); } public override string\\[\\] GetUsersInRole(string roleName) { throw new NotImplementedException(); } public override bool IsUserInRole(string username, string roleName) { throw new NotImplementedException(); } public override void RemoveUsersFromRoles(string\\[\\] usernames, string\\[\\] roleNames) { throw new NotImplementedException(); } public override bool RoleExists(string roleName) { throw new NotImplementedException(); } } } 配置Web.config&lt;system.web&gt; &lt;/system.web&gt; 使用方式 为相应的Controller或ActionResult添加过滤器 允许匿名访问：[AllowAnonymous] 登陆访问：[Authorize] 限制权限访问：[Authorize(Roles =”Admin”)]","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"ASP.NET MVC 创建最简单的CRUD程序","slug":"asp-net-mvc-crud-simple","date":"2016-09-04T01:11:54.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/09/04/asp-net-mvc-crud-simple/","link":"","permalink":"http://www.wangxinlei.cn/2016/09/04/asp-net-mvc-crud-simple/","excerpt":"","text":"ModelUser.cs[Table(“User”)] public partial class User { [Key] public int UID { get; set; } \\[Required\\] \\[StringLength(10)\\] public string username { get; set; } \\[Required\\] \\[StringLength(10)\\] public string password { get; set; } } ModelUser.cspublic partial class ModelUser : DbContext { public ModelUser() : base(“name=ModelUser”)//参数为Web.config中连接字符串的标识 { } public virtual DbSet&lt;User&gt; User { get; set; } protected override void OnModelCreating(DbModelBuilder modelBuilder) { modelBuilder.Entity&lt;User&gt;() .Property(e =&gt; e.username) .IsFixedLength(); modelBuilder.Entity&lt;User&gt;() .Property(e =&gt; e.password) .IsFixedLength(); } } ViewIndex.cshtml@model IEnumerable&lt;UsersCRUD.Models.User&gt; @{ ViewBag.Title = “Index”;} Index @Html.ActionLink(“Create New”, “Create”) @Html.DisplayNameFor(model =&gt; model.username) @Html.DisplayNameFor(model =&gt; model.password) @foreach (var item in Model) { @Html.DisplayFor(modelItem =&gt; item.username) @Html.DisplayFor(modelItem =&gt; item.password) @Html.ActionLink(“Edit”, “Edit”, new { id=item.UID }) | @Html.ActionLink(“Details”, “Details”, new { id=item.UID }) | @Html.ActionLink(“Delete”, “Delete”, new { id=item.UID }) } Create.cshtml————–@model UsersCRUD.Models.User@{ ViewBag.Title = “Create”;}Create@using (Html.BeginForm()){ @Html.AntiForgeryToken() User @Html.ValidationSummary(true, “”, new { @class = “text-danger” }) @Html.LabelFor(model =&gt; model.username, htmlAttributes: new { @class = “control-label col-md-2” }) @Html.EditorFor(model =&gt; model.username, new { htmlAttributes = new { @class = “form-control” } }) @Html.ValidationMessageFor(model =&gt; model.username, “”, new { @class = “text-danger” }) @Html.LabelFor(model =&gt; model.password, htmlAttributes: new { @class = “control-label col-md-2” }) @Html.EditorFor(model =&gt; model.password, new { htmlAttributes = new { @class = “form-control” } }) @Html.ValidationMessageFor(model =&gt; model.password, “”, new { @class = “text-danger” }) } @Html.ActionLink(“Back to List”, “Index”) Delete.cshtml————–@model UsersCRUD.Models.User@{ ViewBag.Title = “Delete”;}DeleteAre you sure you want to delete this? User @Html.DisplayNameFor(model =&gt; model.username) @Html.DisplayFor(model =&gt; model.username) @Html.DisplayNameFor(model =&gt; model.password) @Html.DisplayFor(model =&gt; model.password) @using (Html.BeginForm()) { @Html.AntiForgeryToken() | @Html.ActionLink(“Back to List”, “Index”) } Details.cshtml—————@model UsersCRUD.Models.User@{ ViewBag.Title = “Details”;}Details User @Html.DisplayNameFor(model =&gt; model.username) @Html.DisplayFor(model =&gt; model.username) @Html.DisplayNameFor(model =&gt; model.password) @Html.DisplayFor(model =&gt; model.password) @Html.ActionLink(“Edit”, “Edit”, new { id = Model.UID }) | @Html.ActionLink(“Back to List”, “Index”) Edit.cshtml@model UsersCRUD.Models.User @{ ViewBag.Title = “Edit”;} Edit @using (Html.BeginForm()){ @Html.AntiForgeryToken() &lt;div class=&quot;form-horizontal&quot;&gt; &lt;h4&gt;User&lt;/h4&gt; &lt;hr /&gt; @Html.ValidationSummary(true, &quot;&quot;, new { @class = &quot;text-danger&quot; }) @Html.HiddenFor(model =&gt; model.UID) &lt;div class=&quot;form-group&quot;&gt; @Html.LabelFor(model =&gt; model.username, htmlAttributes: new { @class = &quot;control-label col-md-2&quot; }) &lt;div class=&quot;col-md-10&quot;&gt; @Html.EditorFor(model =&gt; model.username, new { htmlAttributes = new { @class = &quot;form-control&quot; } }) @Html.ValidationMessageFor(model =&gt; model.username, &quot;&quot;, new { @class = &quot;text-danger&quot; }) &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; @Html.LabelFor(model =&gt; model.password, htmlAttributes: new { @class = &quot;control-label col-md-2&quot; }) &lt;div class=&quot;col-md-10&quot;&gt; @Html.EditorFor(model =&gt; model.password, new { htmlAttributes = new { @class = &quot;form-control&quot; } }) @Html.ValidationMessageFor(model =&gt; model.password, &quot;&quot;, new { @class = &quot;text-danger&quot; }) &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;form-group&quot;&gt; &lt;div class=&quot;col-md-offset-2 col-md-10&quot;&gt; &lt;input type=&quot;submit&quot; value=&quot;Save&quot; class=&quot;btn btn-default&quot; /&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; } @Html.ActionLink(“Back to List”, “Index”) Conrollerpublic class UsersController : Controller { private ModelUser db = new ModelUser(); // GET: Users public ActionResult Index() { return View(db.User.ToList()); } // GET: Users/Details/5 public ActionResult Details(int? id) { if (id == null) { return new HttpStatusCodeResult(HttpStatusCode.BadRequest); } User user = db.User.Find(id); if (user == null) { return HttpNotFound(); } return View(user); } // GET: Users/Create public ActionResult Create() { return View(); } // POST: Users/Create // 为了防止“过多发布”攻击，请启用要绑定到的特定属性，有关 // 详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=317598。 \\[HttpPost\\] \\[ValidateAntiForgeryToken\\] public ActionResult Create(\\[Bind(Include = &quot;UID,username,password&quot;)\\] User user) { if (ModelState.IsValid) { db.User.Add(user); db.SaveChanges(); return RedirectToAction(&quot;Index&quot;); } return View(user); } // GET: Users/Edit/5 public ActionResult Edit(int? id) { if (id == null) { return new HttpStatusCodeResult(HttpStatusCode.BadRequest); } User user = db.User.Find(id); if (user == null) { return HttpNotFound(); } return View(user); } // POST: Users/Edit/5 // 为了防止“过多发布”攻击，请启用要绑定到的特定属性，有关 // 详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=317598。 \\[HttpPost\\] \\[ValidateAntiForgeryToken\\] public ActionResult Edit(\\[Bind(Include = &quot;UID,username,password&quot;)\\] User user) { if (ModelState.IsValid) { db.Entry(user).State = EntityState.Modified; db.SaveChanges(); return RedirectToAction(&quot;Index&quot;); } return View(user); } // GET: Users/Delete/5 public ActionResult Delete(int? id) { if (id == null) { return new HttpStatusCodeResult(HttpStatusCode.BadRequest); } User user = db.User.Find(id); if (user == null) { return HttpNotFound(); } return View(user); } // POST: Users/Delete/5 \\[HttpPost, ActionName(&quot;Delete&quot;)\\] \\[ValidateAntiForgeryToken\\] public ActionResult DeleteConfirmed(int id) { User user = db.User.Find(id); db.User.Remove(user); db.SaveChanges(); return RedirectToAction(&quot;Index&quot;); } protected override void Dispose(bool disposing) { if (disposing) { db.Dispose(); } base.Dispose(disposing); } }","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"ASP.NET MVC 通过向导创建CRUD程序","slug":"asp-net-mvc-crud","date":"2016-09-02T07:34:05.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/09/02/asp-net-mvc-crud/","link":"","permalink":"http://www.wangxinlei.cn/2016/09/02/asp-net-mvc-crud/","excerpt":"","text":"1.首先创建好数据库和表 2.打开Visual Studio(以2015Update3版本为例) 3.创建ASP.NET Web应用程序 4.选择Empty模板并勾选MVC引用 5.在Models文件夹添加项 6.选择数据分组中的ASP.NET实体数据模型 7.选择来自数据库的Code First 8.配置好数据连接，一定要勾选将Web.Config中的设置另存为 9.勾选需要的表并完成向导 10.非常重要：生成解决方案 11.在Controllers文件夹上添加新搭建基架的项目 12.选择包含视图的MVC5控制器（使用Entity Framework） 13.选择相应模型类与数据上下文类并选择添加 至此，一个包含CRUD操作的ASP.NET MVC应用程序已经创建完成","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"ASP.NET MVC有用户角色功能的登陆验证","slug":"asp-net-mvc-authwithrole","date":"2016-09-02T05:59:41.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/09/02/asp-net-mvc-authwithrole/","link":"","permalink":"http://www.wangxinlei.cn/2016/09/02/asp-net-mvc-authwithrole/","excerpt":"","text":"Modelpublic enum UserStatus { AuthenticatedAdmin, AuthentucatedUser, NonAuthenticatedUser } public class UserDetails { [StringLength(7, MinimumLength = 2, ErrorMessage = “UserName length should be between 2 and 7”)] public string UserName { get; set; } public string Password { get; set; } } public class UserBusinessLayer { public UserStatus GetUserValidity(UserDetails u) { if (u.UserName == “Admin” &amp;&amp; u.Password == “Admin”) { return UserStatus.AuthenticatedAdmin; } else if (u.UserName == “Sukesh” &amp;&amp; u.Password == “Sukesh”) { return UserStatus.AuthentucatedUser; } else { return UserStatus.NonAuthenticatedUser; } } } View@model ProjectName.Models.UserDetails@Html.ValidationMessage(“CredentialError”, new {style=”color:red;” }) @using (Html.BeginForm(“DoLogin”, “Authentication”, FormMethod.Post)) { @Html.LabelFor(c=&gt;c.UserName) @Html.TextBoxFor(x=&gt;x.UserName) @Html.ValidationMessageFor(x=&gt;x.UserName) @Html.LabelFor(c =&gt; c.Password) @Html.PasswordFor(x =&gt; x.Password) &lt;input type=&quot;submit&quot; name=&quot;BtnSubmi&quot; value=&quot;Login&quot; /&gt; } Controller[AllowAnonymous] public class AuthenticationController : Controller { public ActionResult Logout() { FormsAuthentication.SignOut(); return RedirectToAction(&quot;Login&quot;); } // GET: Authentication public ActionResult Login() { return View(); } \\[HttpPost\\] public ActionResult DoLogin(UserDetails u) { if (ModelState.IsValid) { UserBusinessLayer bal = new UserBusinessLayer(); UserStatus status = bal.GetUserValidity(u); bool IsAdmin = false; if (status==UserStatus.AuthenticatedAdmin) { IsAdmin = true; } else if (status == UserStatus.AuthentucatedUser) { IsAdmin = false; } else { ModelState.AddModelError(&quot;CredentialError&quot;, &quot;Invalid Username or Password&quot;); return View(&quot;Login&quot;); } FormsAuthentication.SetAuthCookie(u.UserName, false); Session\\[&quot;IsAdmin&quot;\\] = IsAdmin; return RedirectToAction(&quot;Index&quot;, &quot;Employee&quot;); } else { return View(&quot;Login&quot;); } } } Filterpublic class AdminFilter:ActionFilterAttribute { public override void OnActionExecuting(ActionExecutingContext filterContext) { if (!Convert.ToBoolean(filterContext.HttpContext.Session[“IsAdmin”])) { filterContext.Result = new ContentResult() { Content=”Unauthorized to access specified resource.” }; } } } 使用方式为相应的Controller或ActionResult添加过滤器 允许匿名访问：[AllowAnonymous] 登陆访问：[Authorize] 管理员访问：[AdminFilter]","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"ASP.NET MVC 用户登陆验证模块","slug":"asp-net-mvc-verification","date":"2016-09-02T00:24:07.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/09/02/asp-net-mvc-verification/","link":"","permalink":"http://www.wangxinlei.cn/2016/09/02/asp-net-mvc-verification/","excerpt":"","text":"Modelpublic class UserDetails { public string UserName { get; set; } public string Password { get; set; } } public class UserDetailBusinessLayer { public bool IsValidUser(UserDetails u) { if (u.UserName == “Admin” &amp;&amp; u.Password == “Admin”) { return true; } else { return false; } } } View@model ProjectName.Models.UserDetails 登陆@Html.ValidationMessage(“CredentialError”, new { style = “color:red;” })@using (Html.BeginForm(“DoLogin”, “Authentication”, FormMethod.Post)) { 用户 密码 } Controllerpublic class AuthenticationController : Controller { // GET: Authentication public ActionResult Login() { return View(); } \\[HttpPost\\] public ActionResult DoLogin(UserDetails u) { //初始化用户信息业务层 var bal = new UserDetailBusinessLayer(); if (bal.IsValidUser(u)) { FormsAuthentication.SetAuthCookie(u.UserName, false); return RedirectToAction(&quot;Index&quot;, &quot;Admin&quot;); } else { ModelState.AddModelError(&quot;CredentialError&quot;, &quot;用户名或密码输入错误&quot;); return View(&quot;Login&quot;); } } public ActionResult Logout() { FormsAuthentication.SignOut(); return RedirectToAction(&quot;Login&quot;); } }","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"批处理暴力找回宽带账号","slug":"findadsl","date":"2016-08-04T13:58:48.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/08/04/findadsl/","link":"","permalink":"http://www.wangxinlei.cn/2016/08/04/findadsl/","excerpt":"","text":"存在这样一种情况： 宽带账号忘记了，密码还记得，小区宽带前部分一样仅后几位不同。 宽带拨号691几次之后服务器会拒绝拨号请求造成678/651错误。 这是即可使用本批处理找回你的宽带账号。 @echo offREM id为起始ID,ENDID为终止ID,PASSWORD为密码SET id=242006000SET ENDID=242007000SET PASSWORD=888888 set count=1:1cls echo 正在尝试%id%第%count%次 rasdial “宽带连接” “username” “password” &gt;now.temp find “651” now.temp&gt;nulif “%errorlevel%”==”0” ( echo %id%,%password%&gt;&gt;651.csv goto RETRY) find “691” now.temp&gt;nulif “%errorlevel%”==”0” ( echo %id%,%password%&gt;&gt;691.csv set count=1) find “已连接” now.temp&gt;nulif “%errorlevel%”==”0” ( echo %id%,%password%&gt;&gt;success.csv rasdial “宽带连接” /disconnect) set /a id=%id%+1set count=1 if %id% geq %ENDID% (goto END) :RETRYset /a count=%count%+1goto 1 :END @pause","categories":[{"name":"脚本","slug":"脚本","permalink":"http://www.wangxinlei.cn/categories/脚本/"}],"tags":[]},{"title":"六月总结","slug":"summary","date":"2016-06-24T14:42:23.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/06/24/summary/","link":"","permalink":"http://www.wangxinlei.cn/2016/06/24/summary/","excerpt":"","text":"Q：网页内容溢出第一屏时页面不出现滚动条也没办法强制滚动到下一屏 A：原来是不知什么时候在CSS里给body设置了 overflow: hidden; Q：使用母版后控件ID发生了变化 A：使用 “#&lt;%=原控件ID.ClientID%&gt;”来选择控件，因为使用了母版之后客户端收到的HTML代码的控件ID会附加上客户端ID 如下： $(function () { $(\"#\").datepicker({ dateFormat: 'yy-mm-dd' }); }); &lt;asp:TextBox ID=”datepicker” placeholder=”单击以选择日期” runat=”server”&gt;&lt;/asp:TextBox&gt; Q：CheckBoxList生成的Checkbox修改样式不正常 A：经过观察 默认情况下CheckBox的 RepeatLayout=”Table” 传送到客户端的CheckBox会被套上表格而表格的宽度是Checkbox中最宽的那个元素的宽度，所以解决这个问题可以设置 RepeatLayout=”Flow” 这样生成的CheckBox就不会被套上Table了。 Q：如何拿到在Web.config中配置的连接字符串 A：ConfigurationManager.ConnectionStrings[“连接字符串名”].ConnectionString 例如： Web.config中配置连接字符串的部分如下： using System.Configuration;using System.Data.SqlClient; public class SqlCon{private SqlConnection sqlcon;public SqlCon(){sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings[“ConnectionString”].ConnectionString);} } Q：如何定义数据库操作类以便捷操作数据库 A： using System;using System.Configuration;using System.Data;using System.Data.SqlClient; /// /// SqlData 数据库操作工具类/// public class SqlData{ private SqlConnection sqlcon; private SqlCommand sqlcom; private SqlDataAdapter sqldata; /// /// 构造函数初始化数据库连接 /// public SqlData() { sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings[“ConnectionString”].ConnectionString); sqlcon.Open(); } /// &lt;summary&gt; /// 执行SqlCom返回执行结果 /// &lt;/summary&gt; /// &lt;param name=&quot;SqlCom&quot;&gt;SQL语句&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; public bool ExceSQL(String SqlCom) { sqlcom = new SqlCommand(SqlCom, sqlcon); try { sqlcom.ExecuteNonQuery(); return true; } catch { return false; } finally { sqlcon.Close(); } } /// &lt;summary&gt; /// 执行SqlCom返回DAtaSet /// &lt;/summary&gt; /// &lt;param name=&quot;SqlCom&quot;&gt;SQL语句&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; public DataSet ExecDS(String SqlCom) { try { sqlcom = new SqlCommand(SqlCom, sqlcon); sqldata = new SqlDataAdapter(); sqldata.SelectCommand = sqlcom; DataSet ds = new DataSet(); sqldata.Fill(ds); return ds; } finally { sqlcon.Close(); } } /// &lt;summary&gt; /// 执行SqlCom语句返回SqlDataReader /// &lt;/summary&gt; /// &lt;param name=&quot;SqlCom&quot;&gt;SQL语句&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; public SqlDataReader ExecRead(String SqlCom) { sqlcom = new SqlCommand(SqlCom, sqlcon); SqlDataReader read = sqlcom.ExecuteReader(); return read; } public void shut() { sqlcon.Close(); } } Q:数据库表名起成了USER无法执行SQL语句怎么办？ A:用[]包围关键字如： SELECT UserName FROM [User] WHERE UID = 1","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"C#小程序 - 应用启动器","slug":"csharprunapp","date":"2016-06-13T15:26:17.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2016/06/13/csharprunapp/","link":"","permalink":"http://www.wangxinlei.cn/2016/06/13/csharprunapp/","excerpt":"","text":"C#中调用外部程序 Process.Start(程序路径,参数);Process.Start(程序路径); C#中获取当前路径 public String getRoot() { string rootfilePath = System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName; int iIndex = rootfilePath.LastIndexOf(“\\\\”); rootfilePath = rootfilePath.Substring(0, iIndex + 1); return rootfilePath; } 设置双击托盘图标显示窗口 private void notifyIcon1_MouseDoubleClick(object sender, MouseEventArgs e) { this.Show(); this.WindowState = FormWindowState.Normal; } 设置最小化时隐藏任务栏图标 private void Form1_SizeChanged(object sender, EventArgs e) { if (WindowState == FormWindowState.Minimized) { this.ShowInTaskbar = false; notifyIcon1.Visible = true; } } 程序完整代码 using System;using System.Collections.Generic;using System.ComponentModel;using System.Data;using System.Diagnostics;using System.Drawing;using System.Text;using System.Windows.Forms; namespace FastRun{ public partial class Form1 : Form { public String getRoot() { string rootfilePath = System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName; int iIndex = rootfilePath.LastIndexOf(“\\\\”); rootfilePath = rootfilePath.Substring(0, iIndex + 1); return rootfilePath; } public void runApp(String path,String args) { try { Process.Start(getRoot() + path, args); } catch (Exception ex) { MessageBox.Show(ex.Message + path); } } public void runApp(String path) { try { Process.Start(getRoot() + path); } catch (Exception ex) { MessageBox.Show(ex.Message + path); } } public Form1() { InitializeComponent(); } private void pictureBox1_Click(object sender, EventArgs e) { String path= &quot;portable\\\\\\firefox\\\\\\firefox.exe&quot;; String args= &quot;-profile \\\\&quot;&quot; + getRoot() + &quot;portable\\\\\\firefox\\\\\\Profile\\\\&quot;&quot;; runApp(path, args); } private void pictureBox2_Click(object sender, EventArgs e) { String path = &quot;portable\\\\\\HBuilder\\\\\\HBuilder.exe&quot;; runApp(path); } private void pictureBox3_Click(object sender, EventArgs e) { String path = &quot;portable\\\\\\notepad++\\\\\\notepad++.exe&quot;; runApp(path); } private void pictureBox4_Click(object sender, EventArgs e) { String path = &quot;portable\\\\\\VNC-Viewer.exe&quot;; runApp(path); } private void pictureBox8_Click(object sender, EventArgs e) { String path = &quot;setup\\\\\\firefox.exe&quot;; String args = &quot; -ms&quot;; runApp(path, args); } private void pictureBox7_Click(object sender, EventArgs e) { String path = &quot;setup\\\\\\ChromeStandaloneSetup.exe.exe&quot;; runApp(path); } private void pictureBox6_Click(object sender, EventArgs e) { String path = &quot;setup\\\\\\7z1602.exe&quot;; String args = &quot;/S&quot;; runApp(path, args); } private void pictureBox5_Click(object sender, EventArgs e) { String path = &quot;setup\\\\\\7z1602.exe&quot;; String args = &quot;/i /quiet&quot;; runApp(path, args); } private void notifyIcon1_MouseDoubleClick(object sender, MouseEventArgs e) { this.Show(); this.WindowState = FormWindowState.Normal; } private void Form1_SizeChanged(object sender, EventArgs e) { if (WindowState == FormWindowState.Minimized) { this.ShowInTaskbar = false; notifyIcon1.Visible = true; } } } }","categories":[{"name":"C#","slug":"C","permalink":"http://www.wangxinlei.cn/categories/C/"}],"tags":[]},{"title":"华为HG255D免TTL刷U-Boot更新固件","slug":"hg255d","date":"2016-03-17T09:32:45.000Z","updated":"2018-10-07T06:29:36.822Z","comments":true,"path":"2016/03/17/hg255d/","link":"","permalink":"http://www.wangxinlei.cn/2016/03/17/hg255d/","excerpt":"","text":"原版固件下，将网线连接至路由器LAN口，本机IP设置为192.168.1.100/24 关闭路由器电源，按下Reset不要松开同时打开电源 访问网页 http://192.168.1.1/upload.html 上传ralink.bin并点击下方按钮 注意观察指示灯变化，等待刷机完成进入192.168.1.1 账号密码都是admin 选择 系统管理 &gt;&gt; 系统指令 执行命令：/hg255d/hg255d-flash-uboot.sh 回显正常后关掉路由器 打开电源同时按住 Reset 或 WLAN 或 WPS 当电源灯闪烁时打开TFTP2软件 IP地址填写为192.168.1.1 更新文件选择自己中意的固件 上传完成后等待路由器自动重启 访问路由器配置页面即可正常使用 参考文章：http://www.right.com.cn/forum/forum.php?mod=viewthread&amp;tid=78021 原文中文件分享已失效，故提供本人分享的工具下载地址： http://pan.baidu.com/s/1dEiQ2IX 备用： 链接：http://pan.baidu.com/s/1i3ZoWyL 密码：87pd","categories":[{"name":"服务器与运维","slug":"服务器与运维","permalink":"http://www.wangxinlei.cn/categories/服务器与运维/"}],"tags":[]},{"title":"傻瓜式搭建openvpn服务","slug":"vpnonmyown","date":"2016-02-07T06:54:33.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2016/02/07/vpnonmyown/","link":"","permalink":"http://www.wangxinlei.cn/2016/02/07/vpnonmyown/","excerpt":"","text":"首先访问 https://openvpn.net/index.php/access-server/download-openvpn-as-sw/ 下载OpenVPN Access Server软件包 然后暗装（以Centos为例） rpm -ivh openvpn-as-2.0.24-CentOS7.x86_64.rpm 安装完成后输入 passwd openvpn 为默认账户openvpn设置密码 设置密码后访问 https://你的服务器:943/admin/ 即可管理你的VPN服务器啦","categories":[{"name":"服务器与运维","slug":"服务器与运维","permalink":"http://www.wangxinlei.cn/categories/服务器与运维/"}],"tags":[]},{"title":"使用AU3编写的基于控件名称的抢课脚本","slug":"auto-au3","date":"2015-12-29T10:56:16.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/12/29/auto-au3/","link":"","permalink":"http://www.wangxinlei.cn/2015/12/29/auto-au3/","excerpt":"","text":"使用按键精灵等软件编写的脚本基于坐标控制 当窗口移动或分辨率发生变化的时候脚本非但不会起作用还可能发生莫名其妙的情况。 我写的这个脚本基于网页中控件的名称来进行选课，不会发生因坐标移动而无法选择的情况，欢迎探讨~ #include &lt;IE.au3&gt; while trueWinActivate(“现代教学管理信息系统 - Internet Explorer”);激活窗口WinWaitActive(“现代教学管理信息系统 - Internet Explorer”);等待窗口被激活Local $oIE =_IEAttach(“现代教学管理信息系统”);选定标题为”现代教学管理信息系统”的IE窗口Local $oForm = _IEFormGetObjByName($oIE, “xsxjs_form”);表单名为xsxjs_form_IEAction($oForm, “focus”)_IEFormElementRadioSelect($oForm, “(2015-2016-2)-16209670-160042-1”, “xkkh”, 1, “byValue”);”(2015-2016-2)-16209670-160042-1”为课程ID_IEFormElementRadioSelect($oForm, “1”, “RadioButtonList1”, 1, “byValue”);预定教材Local $oSubmit = _IEGetObjByName($oIE, “btnSelect”)_IEAction($oSubmit, “click”)WinWaitActive(“来自网页的消息”);等待窗口被激活Send(“{ENTER}”)WEnd","categories":[{"name":"脚本","slug":"脚本","permalink":"http://www.wangxinlei.cn/categories/脚本/"}],"tags":[]},{"title":"为Ubuntu安装SSHD服务在终端中安装deb软件包","slug":"installsshdonub","date":"2015-12-26T13:41:45.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/12/26/installsshdonub/","link":"","permalink":"http://www.wangxinlei.cn/2015/12/26/installsshdonub/","excerpt":"","text":"首先配置好网络环境，更新yum源。 然后执行： sudo apt-get install openssh-server 完成了…… 打开SSH客户端连接到Ubuntu 下载想要安装的deb包 sudo dpkg -i ***.deb","categories":[{"name":"服务器与运维","slug":"服务器与运维","permalink":"http://www.wangxinlei.cn/categories/服务器与运维/"}],"tags":[]},{"title":"在CentOS上搭建Minecraft服务器","slug":"mconctos","date":"2015-12-26T06:36:42.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/12/26/mconctos/","link":"","permalink":"http://www.wangxinlei.cn/2015/12/26/mconctos/","excerpt":"","text":"首先你需要下载jdk或jre,如下载64位rpm包： wget http://download.oracle.com/otn-pub/java/jdk/8u20-b26/jdk-8u20-linux-x64.rpm 安装java的rpm包 rpm -ivh jdk-8u20-linux-x64.rpm 配置环境变量 vi /etc/profile 在文件末尾添加如下内容 export JAVA_HOME=/usr/java/jdk1.8.0_20export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jarexport PATH=$PATH:$JAVA_HOME/bin 重新启动使设置生效。 将Minecraft服务端jar包拷贝到如/home/minecraft/ 在该文件夹下建立Shell脚本 java -Xincgc -Xms512M -Xmx768M -jar minecraft_server.1.8.8.jar 最小内存和最大内存可根据自己实际情况进行修改。 安装Screen模拟终端 yum install screen 创建一个虚拟终端 screen -S minecraft 执行Shell脚本，在MC中选择多人游戏键入服务器IP地址，与小伙伴们愉快的玩耍吧！ 下次需要回到该终端时执行 screen -R minecraft","categories":[{"name":"服务器与运维","slug":"服务器与运维","permalink":"http://www.wangxinlei.cn/categories/服务器与运维/"}],"tags":[]},{"title":"让一个主机绑定多个网站（XAMPP）","slug":"mutidn","date":"2015-12-12T12:51:53.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/12/12/mutidn/","link":"","permalink":"http://www.wangxinlei.cn/2015/12/12/mutidn/","excerpt":"","text":"例如有域名A.com和B.com 但是只有一个独立IP主机1.1.1.1； 主机使用Linux操作系统安装了Xampp集成环境。 方法1（配置httpd.conf）： 操作步骤： 编辑 /opt/lampp/etc/httpd.conf 去掉 Include etc/extra/httpd-vhosts.conf 前面的 # 编辑 /opt/lampp/etc/extra/httpd-vhosts.conf 为每条域名按照如下模板添加记录 ServerAdmin admin@A.com DocumentRoot “/opt/lampp/htdocs/A/“ ServerName A.com ServerAlias *.A.com ErrorLog “logs/dummy-A.com-error_log” CustomLog “logs/dummy-A.com-access_log” common 编辑 /opt/lampp/apache2/conf/httpd.conf 增加以下信息 RewriteEngine on RewriteMap lowercase int:tolower RewriteMap vhost txt:/opt/lampp/apache2/conf/vhost.map RewriteCond ${lowercase:%{SERVER_NAME}} ^(.+)$ RewriteCond ${vhost:%1} ^(/.)$ RewriteRule ^/(.)$ %1/$1 其中 /opt/lampp/apache2/conf/vhost.map 为新建二级域名的配置文件路径 编辑/opt/lampp/apache2/conf/vhost.map www.A.com /opt/lampp/htdocs/A www.B.com /opt/lampp/htdocs/B 在DNS服务器绑定好域名，重启apache服务器（编辑vhost.map文件无需重启） 方法2（配置.htaccess）： 此方法适用于无法更改httpd.conf的情况如使用虚拟主机 首先将你的Web默认文件夹（如htdocs）整理一下 将目录名设置为二级域名的名称 如：创建www.A.com需在目录下创建一个名为www的文件夹 RewriteEngine on RewriteCond %{HTTP_HOST} ^A.com$ RewriteCond %{REQUEST_URI} !^/www/ RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule ^(.)$ /www/$1 RewriteCond %{HTTP_HOST} ^A.com$ RewriteRule ^(/)?$ www/index.php [L] RewriteCond %{HTTP_HOST} ^www.A.com$ RewriteCond %{REQUEST_URI} !^/www/ RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule ^(.)$ /www/$1 RewriteCond %{HTTP_HOST} ^www.A.com$ RewriteRule ^(/)?$ www/index.php [L] RewriteCond %{HTTP_HOST} ^a.A.com$ RewriteCond %{REQUEST_URI} !^/a/ RewriteCond %{REQUEST_FILENAME} !-f RewriteCond %{REQUEST_FILENAME} !-d RewriteRule ^(.*)$ /a/$1 RewriteCond %{HTTP_HOST} ^a.A.com$ RewriteRule ^(/)?$ a/index.html [L]","categories":[{"name":"服务器与运维","slug":"服务器与运维","permalink":"http://www.wangxinlei.cn/categories/服务器与运维/"}],"tags":[]},{"title":"教你6步操作不用HUB重装Windows平板操作系统","slug":"setupsyswithouthub","date":"2015-12-06T12:56:41.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/12/06/setupsyswithouthub/","link":"","permalink":"http://www.wangxinlei.cn/2015/12/06/setupsyswithouthub/","excerpt":"","text":"我在之前的文章提到了499的Windows平板，操作系统有时需要重新安装，官方提供的安装方法需要用到USBHUB然而不是每次装系统身边都能找到HUB的，下面我来介绍一种方法重新安装操作系统而不需要USBHUB。 前提：已按官方介绍的方法处理好优盘并用OTG数据线连接至平板电脑。 从右向左滑一下（Windows10打开通知） 选择更改电脑设置（Windows10点击所有设置） 选择更新和恢复 选择恢复再点击立即重启 重启后选择使用设备 再选择EFI USB DEVICE 现在是不是已经进入操作系统安装界面了~ 注：本方法仅适用于USB启动PE带触屏驱动或USB启动全自动安装的情况下使用。","categories":[{"name":"运维","slug":"运维","permalink":"http://www.wangxinlei.cn/categories/运维/"}],"tags":[]},{"title":"CentOS中简单架设LAMP测试环境","slug":"lamp","date":"2015-11-01T08:44:42.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/11/01/lamp/","link":"","permalink":"http://www.wangxinlei.cn/2015/11/01/lamp/","excerpt":"","text":"在学习使用PHP的过程中 逐个安装各个服务过于繁琐下面介绍一个软件可以实现“一键”搭建LAMP环境。 安装过程 1. 安装Linux服务器 最小安装CentOS 后 需要设置开启防火墙的80\\443和22端口 #/sbin/iptables -I INPUT -p tcp –dport 80 -j ACCEPT #/sbin/iptables -I INPUT -p tcp –dport 22 -j ACCEPT 然后保存： #/etc/rc.d/init.d/iptables save 2. 利用WinSCP通过Windows远程传送xampp 软件到/home/或在Centos中直接wget软件包 Xampp官方下载地址https://www.apachefriends.org/download.html 3. 安装xampp软件 执行命令 #cd /home/ # chmod 755 xampp-linux--installer.run # ./xampp-linux--installer.run 4.为Xampp完善安全性设置 执行命令 #/opt/lampp/lampp security 5.启动LAMP服务 #/opt/lampp/lampp start （更多关于Xampp相关的资料可以参见官方FAQ: https://www.apachefriends.org/faq_linux.html）","categories":[{"name":"服务器与运维","slug":"服务器与运维","permalink":"http://www.wangxinlei.cn/categories/服务器与运维/"}],"tags":[]},{"title":"昂达V820W使用指南","slug":"v820w","date":"2015-07-19T03:52:50.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/07/19/v820w/","link":"","permalink":"http://www.wangxinlei.cn/2015/07/19/v820w/","excerpt":"","text":"几个月前在京东以499的价格入了这款平板，8寸，4核atom的CPU，2G内存，存储空间32GB Win8、Android双系统，还是比较值的然而现在已经降价了，而且9寸的现在还赠蓝牙键盘也才499…… 先来说说这款机器的优点：便宜 然后说说这款机器的缺点：没有单独的充电接口、充电较慢、发热严重、电量低于50%屏幕亮度有抖动、Android自带昂达桌面会自动安装垃圾应用…… 这款机器有三个版本： V1 安卓Windows双系统 V2安卓单系统 V3Windows单系统 买国产Windows平板如果有双系统版本且价格近似时建议买双系统版的，因为双系统版可以完美的变为单系统，而单系统版刷双系统会有些缺陷…… 以上为本人个人见解，以下内容来源于如网络： onda V820w原WIN8单系统刷双系统教程 此贴1L 介绍如何刷装系统 5L介绍安装Win8的方法 6L介绍调整安卓Data分区大小的方法 注：适用于双系统刷单系统后刷回双系统，原双系统刷回双系统不存在教程中提到的缺陷，可以完美刷回双系统并调整分区大小、楼层中的root固件发现问题刷了变砖所以楼主已经把帖子锁定不再提供下载，若要ROOT可使用下面帖子的ROOT工具完成ROOT操作 昂达V820w双系统版安卓一键root工具(android4.4.4) 双系统：安卓与WIN 系统时间不一致的解决方法 新建reg文件导入注册表即可 Windows Registry Editor Version 5.00 [HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\TimeZoneInformation] “RealTimeIsUniversal”=dword:00000001","categories":[{"name":"运维","slug":"运维","permalink":"http://www.wangxinlei.cn/categories/运维/"}],"tags":[]},{"title":"华为认证培训资料","slug":"e5-8d-8e-e4-b8-ba-e8-ae-a4-e8-af-81-e5-9f-b9-e8-ae-ad-e8-b5-84-e6-96-99","date":"2015-01-18T12:45:31.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/01/18/e5-8d-8e-e4-b8-ba-e8-ae-a4-e8-af-81-e5-9f-b9-e8-ae-ad-e8-b5-84-e6-96-99/","link":"","permalink":"http://www.wangxinlei.cn/2015/01/18/e5-8d-8e-e4-b8-ba-e8-ae-a4-e8-af-81-e5-9f-b9-e8-ae-ad-e8-b5-84-e6-96-99/","excerpt":"","text":"HCNA认证主要定位于中小企业网络基本配置操作和设备维护，包括网络基础知识；流行网络的布线结构；网络连接方法；网络的建构；网络故障的排除；TCP/IP网络的建设；网络布线与网络互连实践；华为设备的安装与调试。 网盘资料（搜集自网络）： 链接: http://pan.baidu.com/s/1bnnOKmb 密码: ofdl 网盘内含有华为官方HCNA培训教材及视频资料，还含有培训机构录制的培训视频，还有题库（慎重使用）。 在线资料（转自华为企业技术交流社区） 企业网络在线学习资料（**免费资源合集）——无需注册，无需登录，访问页面即可播放—— 2014**年第57期 ?获取方式一：只需两步，即可免费在线学习资料！ 步骤一：点击E-Learning课程链接。 http://support.huawei.com/learning/NavigationAction!createNavi?navId=_16&amp;lang=zh 步骤二：先在左侧导航栏选择技术方向，然后在“价格类型”中选择“免费”。 ?获取方式二：点击链接直接进入**路由交换、WLAN、安全**免费资源。 1.**路由交换** 序号 课程名称 课程类别 课程时长 1 IP技术通用原理培训(Fast-Track) 技术基础 4.5 2 华为VRP快速入门 技术基础 1 3 STP原理与配置 技术基础 0.5 4 HCNA华为认证网络工程师培训v2.0（免费版） 技术基础 11 5 NE路由器操作与维护培训(Fast-Track) 操作维护 7 6 园区网路由器(NE/AR)操作与维护培训(Fast-Track) 操作维护 10 7 AR G3路由器操作与维护培训(含初级操作与维护培训) 操作维护 15.5 8 NE路由器安装与基础调测培训 操作维护 3 9 NE路由器初级操作与维护培训 操作维护 4 10 NE路由器操作与维护培训(包含初级操作与维护培训) 操作维护 13 11 AR G3路由器操作与维护培训（Fast-Track） 操作维护 8 12 盒式交换机(S67/S57/S37/S27)操作与维护培训 操作维护 9 13 园区网交换机(S系列)操作与维护培训(Fast-Track) 操作维护 9.5 14 企业MPLS VPN技术专题培训 高级技术 6 15 企业网IPV6技术专题培训 高级技术 4.5 16 企业广域网技术培训 高级技术 2 17 企业网IP路由技术培训 高级技术 6 18 企业IP VPN技术专题培训 高级技术 6 19 企业网QoS技术专题培训 高级技术 1 20 企业网HA技术专题培训 高级技术 1 21 HCIE-R&amp;S考试揭秘 高级技术 6 22 HCIE技术沙龙-路由协议OSPF讨论 高级技术 0.5 23 HCIE技术沙龙-路由协议IS-IS的深入探讨 高级技术 0.5 24 HCIE?技术沙龙-考试流程解读 高级技术 1 25 HCIE-R&amp;S HNC网络大会演讲 高级技术 5 2.WLAN 序号 课程名称 课程类别 课程时长 1 华为移动办公解决方案 技术基础 2 2 华为WLAN网规网优 规划设计 13 3.**安全** 序号 课程名称 课程类别 课程时长 1 华为NIP2000系列产品介绍 技术基础 0.12 2 华为NIP5000系列产品介绍 技术基础 0.12 3 ASG产品介绍 技术基础 0.5 4 华为NIP系列产品硬件安装培训 操作维护 0.3 5 华为NIP系列产品BYPASS卡安装培训 操作维护 0.1 6 华为NIP Manager安装培训 操作维护 0.6 7 华为Secospace USG9310?统一安全网关 安装指南 操作维护 0.45 8 华为Secospace USG9320?统一安全网关 安装指南 操作维护 0.45 9 DSM产品基础安装配置 操作维护 13 10 TSM产品基础安装配置 操作维护 8 11 ASG产品操作与维护 操作维护 0.5 12 USG9000系列防火墙DPI特性介绍及配置 操作维护 0.5 13 数据中心安全方案设计 规划设计 1","categories":[{"name":"运维","slug":"运维","permalink":"http://www.wangxinlei.cn/categories/运维/"}],"tags":[]},{"title":"如何防止无线网络被破解","slug":"e5-a6-82-e4-bd-95-e9-98-b2-e6-ad-a2-e6-97-a0-e7-ba-bf-e7-bd-91-e7-bb-9c-e8-a2-ab-e7-a0-b4-e8-a7-a3","date":"2015-01-10T14:47:27.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/01/10/e5-a6-82-e4-bd-95-e9-98-b2-e6-ad-a2-e6-97-a0-e7-ba-bf-e7-bd-91-e7-bb-9c-e8-a2-ab-e7-a0-b4-e8-a7-a3/","link":"","permalink":"http://www.wangxinlei.cn/2015/01/10/e5-a6-82-e4-bd-95-e9-98-b2-e6-ad-a2-e6-97-a0-e7-ba-bf-e7-bd-91-e7-bb-9c-e8-a2-ab-e7-a0-b4-e8-a7-a3/","excerpt":"","text":"随着各种移动设备的普及，渐渐的基本上所有人家里都有了无线路由器，无线路由器刚刚普及的时候人们的安全意识不强一般不设置密码所以很容易被“蹭网”。现在无线设备普及了基本上没有不加密的无线网络了，但是一些不经意的设置 可能依然会让你被蹭网。 知己知彼，百战不殆。要想防止被蹭网 就来了解一下蹭网的原理。 一般蹭网都使用rtl8187或rt3070芯片的无线网卡在CDLinux环境下通过以下两种方法破解： 1.找到想要破解的无线信号后发送一个攻击包使无线AP请求无线终端的验证信息，然后“抓取握手包”保存握手包后搜寻字典进行破解。 2.通过pin破解，这种破解方法针对于有“一键连接”功能的无线路由器，通过不断变化pin码验证，由于pin码是8位纯数字 所以只要信号好就可以很轻松的破解成功。 了解了破解方法后，下面向大家介绍一下防止被破解的方法。 1.针对第一种破解方法主要方法是设置强密码，要超过8位并且数字字母符号混排并且无规律，最好的办法是利用密码生成软件生成随机密码，并且每3个月左右更换一次。密码越长越难破解这点不假但是有的人用自己的手机号码作为密码，11位的纯数字确实也很难破解，但是电话号码所属位置的排列信息都是公开的，这时只要下载一个手机号码生成工具就可以把本地区所有的电话号码生成出来，这样密码就很容易被破解了，所以使用手机号码作为密码是不安全的。 2.针对第二种破解方法，主要解决办法是关掉路由器的pin功能，只使用密码验证。并且购买无线路由器时不要一味的购买信号强的，要本着够用就行的原则，一来可以减少电磁辐射对身体健康的影响，二来可以大大延长pin破解的速度，pin破解对信号强度与质量的要求是非常大的。 3.终极大招，设置MAC地址白名单，将家中的所有无线设备的MAC地址添加到路由器的白名单中，这样不在白名单中的设备就无法连接到你的路由器了。 4.柔和方案，将所有不在白名单中的设备设置限速32k/s或更低，这样即使被人蹭网了 也会因为速度太慢而让蹭网者抓狂。","categories":[{"name":"运维","slug":"运维","permalink":"http://www.wangxinlei.cn/categories/运维/"}],"tags":[]},{"title":"好工具大家分享","slug":"e5-a5-bd-e5-b7-a5-e5-85-b7-e5-a4-a7-e5-ae-b6-e5-88-86-e4-ba-ab","date":"2015-01-10T14:45:46.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/01/10/e5-a5-bd-e5-b7-a5-e5-85-b7-e5-a4-a7-e5-ae-b6-e5-88-86-e4-ba-ab/","link":"","permalink":"http://www.wangxinlei.cn/2015/01/10/e5-a5-bd-e5-b7-a5-e5-85-b7-e5-a4-a7-e5-ae-b6-e5-88-86-e4-ba-ab/","excerpt":"","text":"在日常的生活和学习当中，解决一些问题的时候会用到一些很实用的工具，这些工具有的很常见，很多人都知道，而另一些工具，恨少有人知道…… 常见工具 1.SecureCRT 2.WinSCP 这两个工具用来管理Linux服务器可以说是绝配了，本人初次接触这两个工具是在自己架设某游戏的.私.服.的时候…… 鲜为人知的实用小工具 1.ipop (ip工具合集) 有人说这个工具是华为制造的，但是在软件中没有发现华为的标记……但是这个工具确实是个实用的好工具。 首先这个工具是单文件绿色版的无需安装。 主要具有以下功能： ip绑定功能 Windows路由表管理功能，可以方便的管理Windows系统内的路由表。 MAC信息工具 方便的更换IP地址，自带一个MAC厂家信息表，但是数据库中好像没有无线网卡的MAC厂家信息。 网络信息统计工具 端口信息工具 端口映射，就像家用路由器里的端口映射 流量信息可以查看指定网卡的速度（就像Win8任务管理器中那样） 抓包工具，简单的抓包分析功能。 终端工具，支持多种协议，Win7/8系统中调路由器、交换机再也不用安装别的工具了。 服务 发包工具，这个功能需要配合WinPcap使用。 2.PCHunter(优秀的国产手工杀毒软件) 提到手工杀毒软件 大部分人应该都能想到冰刃，这个XP时代非常强大的工具，但是很遗憾，冰刃不支持win7以后的系统，更不支持64位操作系统了 而PCHunter这个工具能够支持最新的Windows8.1 x64操作系统，同样是个绿色软件 不过64位版本和32位版本是分开的单文件。 对IE右键菜单及其他不能直接设置的地方的操作 文件选项卡中可以对本地文件进行强制删除等操作。 PS:当我点击系统杂项功能的时候 我的Win8.1蓝屏并提示系统内核保护了……","categories":[{"name":"运维","slug":"运维","permalink":"http://www.wangxinlei.cn/categories/运维/"}],"tags":[]},{"title":"[转]带你认清所谓实时优化、内存整理、网络优化、注册表清理的骗局","slug":"youhua","date":"2015-01-10T08:22:29.000Z","updated":"2018-10-07T06:29:36.821Z","comments":true,"path":"2015/01/10/youhua/","link":"","permalink":"http://www.wangxinlei.cn/2015/01/10/youhua/","excerpt":"","text":"原文地址：http://bbs.pcbeta.com/viewthread-1270454-1-1.html 本文主要谈两点： 1、任何软件的优化功能（实时优化、内存整理、网络优化等等）纯属忽悠，带来效能上的改良微乎其微； 2、注册表清理是Windows系统自诞生以来最大的骗局。 我实在费解，为什么这么多人对所谓优化软件趋之若鹜，甚至还花钱购买所谓TuneUp之流的优化软件，难道就因为它号称是全球第一的优化工具？？ 优化的话，平时清理清理垃圾、禁用一些不必要的启动项和服务就行了，你电脑再慢，一款优化软件带来的提升根本就是心理上的（所谓实时优化，无非就是调节进程优先级，这类通用技术根本谈不上有多高深，自己就能轻松搞定）；若电脑各方面已经很快了，你再开个实时优化反而占用内存，得不偿失。 还有个忽悠了人们大半个世纪的所谓“内存整理”，其原理是：优化软件通过整块整块的申请物理内存，将现在内存中的数据被尽可能的放到硬盘的页表缓存中，然后再把申请的内存释放掉，从而实现强制释放物理内存的所谓“优化”效果。故所谓“内存优化”就是个彻头彻尾的噱头。 所谓网络优化，也是名过其实，网络优化的方法主要有：优化默认分组报文寿命、最大传输单元探测、缓冲区优化（TCP/IP）、改变域名服务器超时计数值以及增加网络最大链接参数等等，这些数值优化之后其效果也是微乎其微，其根本速度还是取决于当地网络供应商提供的网速，你自己不懂这些数值，瞎调整后还会导致各种各样的问题。 系统优化方面，最可笑的莫过于很多人一味追求注册表清理的“彻底性”，甚至还发帖询问那款清理工具最彻底之类云云，我想请问你注册表一年不清理，系统难道就“自然而然地”出现一系列的错误甚至崩溃了？？要知道，99%以上的系统错误都源于自己操作不当、病毒破坏或是软硬件兼容问题导致，当然，注册表清理的太过火也是导致系统出错的原因之一；若说注册表清理能给系统带来效能上的巨大提升，也纯粹是扯谈，各位扪心自问下，注册表清理之后系统是启动变快了，还是运行效率提升了，更多的还不是纯粹心理层面的。 这里有必要给这些优化控、注册表清洁控扫扫盲。首先，我们来看看注册表的定义： 从根本上来说，注册表（Registry）是操作系统中的一个核心数据库，直接控制着系统的启动、硬件驱动程序的装载以及一些应用程序的运行，从而在整个系统中起着核心作用。在没有注册表亦或注册表完整性被破坏的情况下，操作系统难以获得必须的信息来运行和控制附属的设备和应用程序，因此无法正确响应用户的输入，从而导致系统出现一系列的错误。 从这个定义中我们可以初步窥见注册表的重要性和运行原理，其中重要的一点是，随着系统使用时间的增加，软件安装、使用、删除，注册表中产生冗余数据是不可避免的，但这些冗余数据（包括丢失的文件关联、错误的动态链接库等等）都不会被系统再次调用和访问，因此存放在注册表中一点问题也没有，若使用一些不合规范的注册表清理工具，很有可能导致清理注册表时注册表完整性被破坏，这样势必出现问题。也有人说，通过清理注册表，可以减少体积，增加系统启动速度和运行效率，一般情况下，一个主机的注册表大小在在几十MB到一两百MB，很多清理工具清理的内容无非是冗余的键值、历史记录等等，这些东西清理掉了你注册表能缩小多少？给系统的加载影响多大？而频繁清理后注册表的完整性和稳定性又会怎样？注册表清理软件中所谓“可能导致系统崩溃”之类的话纯属瞎扯，这种宣传语好像把注册表冗余说的洪水猛兽般可怕，加上所谓“电脑达人”、“高手”之流对注册表清理的夸大宣传，搞得每个人不弄几次注册表清理就好像不懂电脑一样，好像不知道几个号称顶级的清理软件就会被人鄙视成小白一样，许许多多厂家为了迎合这种奇怪的心态，优化软件像杀毒软件一样每年一番新，甚至某些厂商在新一代的产品中号称“加入了全新的注册表清理引擎，扫描更彻底，系统提速更明显”之类的所谓“新特性”，一旦有新的换代产品上市，很多人乐此不疲地“求破解”、“求序列号”，甚至“求教程”（优化软件改来改去，原理始终不会变，有个屁的教程要学），殊不知，这类清理软件往往就是导致系统崩溃的“罪魁祸首”。 下面总结下关于注册表清理的几个误区： 1、注册表中的冗余数据不可避免地会产生，但这些数据不会被系统再次调用或访问，因此放在注册表内毫无问题，清理工具宣称“注册表垃圾会导致这样那样的系统问题”纯属胡说八道，用这些工具频繁清理注册表才是导致系统出错的根源； 2、注册表文件是数据库文件，是完整的索引，系统会在每次更改之后更新，清理注册表能节省的空间微乎其微，也无必要，并且不会对系统启动、运行速度带来任何影响。可以这么说：注册表与计算机的运行速度根本没有关系； 3、一句话：系统从安装以来，根本不需要清理注册表。 优化实在要弄，不弄不爽的话，建议像上文提到的，清理清理垃圾文件、减少不必要的开机启动项和服务足矣，这也就是说，Tuneup、ASC等等软件的优化功能都是毫无意义的（当然，其中一些小工具还是很实用的，能切实解决我们日常使用中的不少问题），至于软件官方号称全球多少多少用户在使用，多少多少人反馈良好，那就仁者见仁，智者见智了：如果你认为优化有效果且不会造成系统出错的可能，那就继续用，不过请在优化之前做好备份工作，以免“优化”不成反把自己害了。","categories":[{"name":"运维","slug":"运维","permalink":"http://www.wangxinlei.cn/categories/运维/"}],"tags":[]}]}