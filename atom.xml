<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>王鑫磊的记事本</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.wangxinlei.cn/"/>
  <updated>2018-10-07T06:29:36.823Z</updated>
  <id>http://www.wangxinlei.cn/</id>
  
  <author>
    <name>finaldusk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决Extmail在部分邮件客户端附件名乱码的问题</title>
    <link href="http://www.wangxinlei.cn/2018/08/27/extmailencodeerror/"/>
    <id>http://www.wangxinlei.cn/2018/08/27/extmailencodeerror/</id>
    <published>2018-08-27T08:38:37.000Z</published>
    <updated>2018-10-07T06:29:36.823Z</updated>
    
    <content type="html"><![CDATA[<p>使用Extmail发送邮件的附件名称为中文时，部分邮件客户端（如安卓端K-9Mail）附件名称会显示为乱码，这是因为邮件头中Content-Disposition和Content-Type中的中文字符没有进行编码，修改<strong>extmail/libs/Ext/App/Compose.pm</strong>   第701行</p><p>print $FD “Content-Disposition: attachment; filename=\“”.rfc822_encode_str($chst, $lf).”\“\n”;</p><p>第702行</p><p>print $FD “Content-Type: application/octet-stream; charset=\“$chst\“; name=\“”.rfc822_encode_str($chst, $lf).”\“\n”;</p><p>第1198行</p><p>print $TMP “Content-Disposition: attachment; filename=\“”.rfc822_encode_str($chst, $header{filename}).”\“\n”;</p><p>第1199行</p><p>print $TMP ‘Content-Type: ‘.$header{‘Content-Type’}.”; charset=\“$chst\“; name=\“”.rfc822_encode_str($chst, $header{filename}).”\“\n”;</p><p>  <strong>修改完成后再发送邮件</strong>附件中的中文文件名就不会显示为乱码了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用Extmail发送邮件的附件名称为中文时，部分邮件客户端（如安卓端K-9Mail）附件名称会显示为乱码，这是因为邮件头中Content-Disposition和Content-Type中的中文字符没有进行编码，修改&lt;strong&gt;extmail/libs/Ext/App
      
    
    </summary>
    
      <category term="extmail" scheme="http://www.wangxinlei.cn/categories/extmail/"/>
    
    
      <category term="extmail" scheme="http://www.wangxinlei.cn/tags/extmail/"/>
    
      <category term="中文" scheme="http://www.wangxinlei.cn/tags/%E4%B8%AD%E6%96%87/"/>
    
      <category term="乱码" scheme="http://www.wangxinlei.cn/tags/%E4%B9%B1%E7%A0%81/"/>
    
      <category term="附件" scheme="http://www.wangxinlei.cn/tags/%E9%99%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>迁移QMail到POSTFIX(ExtMail)</title>
    <link href="http://www.wangxinlei.cn/2018/06/01/qmail2postfix/"/>
    <id>http://www.wangxinlei.cn/2018/06/01/qmail2postfix/</id>
    <published>2018-06-01T03:18:56.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<h1 id="迁移身份认证数据库"><a href="#迁移身份认证数据库" class="headerlink" title="迁移身份认证数据库"></a>迁移身份认证数据库</h1><h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具:"></a>使用工具:</h2><ul><li>navicat</li><li>Excel</li></ul><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><p>Qmail身份认证数据库存储的内容与Postfix身份认证所用数据库有所差异，但都可以通过拼接字符串方式来消除差异，通过Excel函数拼接字符串生成SQL脚本。</p><h2 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h2><ol><li>使用navicat登陆原邮件服务器数据库，导出vpopmail的vpopmail表为Excel文件，注意选择正确的编码格式防止出现乱码（一般为GBK）</li><li>打开导出的Excel文件，新建一张工作表<strong>建库脚本</strong></li><li>新工作表各列公式如下</li></ol><p>A列username邮件地址</p><blockquote><p>=vpopmail!B1&amp;”@”&amp;vpopmail!C1</p></blockquote><p>B列uid用户名</p><blockquote><p>=vpopmail!B1</p></blockquote><p>C列password密码</p><blockquote><p>=vpopmail!D1</p></blockquote><p>D列name姓名</p><blockquote><p>=vpopmail!G1</p></blockquote><p>E列maildir邮箱存储路径</p><blockquote><p>=MID(vpopmail!H1,24,100)&amp;”/Maildir”</p></blockquote><p>F列Homedir用户存储路径</p><blockquote><p>=MID(vpopmail!H1,24,100)</p></blockquote><p>G列quota邮箱大小</p><blockquote><p>因为要扩容到每人1G故填写固定值 <strong>1073741824S</strong></p></blockquote><p>H列netdiskquota网盘大小</p><blockquote><p>因为要扩容到每人1G故填写固定值 <strong>1073741824S</strong></p></blockquote><p>I列domain域名</p><blockquote><p>=vpopmail!C1</p></blockquote><p>J列uidnumber用户文件所有人</p><blockquote><p>固定值<strong>1000</strong></p></blockquote><p>K列gidnumber用户文件所有组</p><blockquote><p>固定值<strong>1000</strong></p></blockquote><p>L列createtime创建时间</p><blockquote><p>=vpopmail!K1</p></blockquote><p>M列expiredate过期时间</p><blockquote><p>固定值<strong>0000-00-00</strong></p></blockquote><p>N列active是否启用</p><blockquote><p>固定值<strong>1</strong></p></blockquote><p>  P列拼接SQL语句</p><blockquote><p>=”INSERT INTO `mailbox` VALUES (‘“&amp;A2&amp;”‘, ‘“&amp;B2&amp;”‘, ‘“&amp;C2&amp;”‘, ‘’, ‘“&amp;D2&amp;”‘, ‘’, ‘“&amp;E2&amp;”‘, ‘“&amp;F2&amp;”‘, ‘1073741824S’, ‘1073741824S’, ‘ln.pcc’, 1000, 1000, ‘“&amp;L2&amp;”‘, ‘0000-00-00’, 1,0, 0, 0, 0, 0, 0, 0, ‘’, ‘’);”</p></blockquote><p><strong>注：固定值列可以引用对应单元格，也可以直接写到公式里，根据需求决定</strong> 4.navicat连接到新邮件服务器数据库中执行使用Excel生成的SQL语句  </p><h1 id="迁移邮件存储"><a href="#迁移邮件存储" class="headerlink" title="迁移邮件存储"></a>迁移邮件存储</h1><h2 id="使用工具-1"><a href="#使用工具-1" class="headerlink" title="使用工具"></a>使用工具</h2><ul><li>PuTTY</li></ul><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><p>1.登陆原邮件服务器打包邮件存储传送到新邮件服务器中</p><p>tar czvf  domain.tar.gz /home/vpopmail/domains/<br>sftp 【新邮件服务器IP地址】<br>【新邮件服务器密码】<br>put domain.tar.gz<br>exit</p><p>2.解压打包的文件并放到其应该在的位置</p><p>tar  -zxvf   domain.tar.gz<br>cp -R 【目录】 /home/domains/</p><h1 id="迁移网盘"><a href="#迁移网盘" class="headerlink" title="迁移网盘"></a>迁移网盘</h1><h2 id="使用工具-2"><a href="#使用工具-2" class="headerlink" title="使用工具"></a>使用工具</h2><ul><li>Excel</li><li>PuTTY</li><li>convmv</li></ul><h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><p>Qmail的网盘位于/home/netdisk/【域名】/【用户名】 Extmail的网盘位于/home/domains/【域名】/【用户名】/Maildir/fileman/ Qmail的网盘储存文件名采用GBK编码，Extmail的网盘储存文件名采用UTF-8编码</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>使用Excel生成文件迁移脚本 使用convmv解决文件名乱码</p><h2 id="具体步骤-1"><a href="#具体步骤-1" class="headerlink" title="具体步骤"></a>具体步骤</h2><p>1.在之前使用的Excel中新建一张工作表 各列公式如下 A列用户名</p><blockquote><p>=vpopmail!B1</p></blockquote><p>B列新网盘所在目录</p><blockquote><p>=建库脚本!E2&amp;”/fileman/“</p></blockquote><p>C列Shell脚本</p><blockquote><p>=”cp -r /home/netdisk/ln.pcc/“&amp;A2&amp;”/ /home/domains/“&amp;B2&amp;””</p></blockquote><p>2..登陆原邮件服务器打包网盘传送到新邮件服务器中</p><p>tar czvf  netdisk.tar.gz /home/netdisk/<br>sftp 【新邮件服务器IP地址】<br>【新邮件服务器密码】<br>put netdisk.tar.gz<br>exit</p><p>2.解压打包的文件并放到Home文件夹</p><p>tar  -zxvf   netdisk.tar.gz<br>cp -R 【目录】 /home/netdisk/</p><p>3.允许excel生成的shell脚本拷贝文件 4.执行命令修改文件名编码</p><p>convmv -f gbk -t utf-8 -r –notest /home/domains/</p><h1 id="生成新的全局通讯录"><a href="#生成新的全局通讯录" class="headerlink" title="生成新的全局通讯录"></a>生成新的全局通讯录</h1><h2 id="使用工具-3"><a href="#使用工具-3" class="headerlink" title="使用工具"></a>使用工具</h2><ul><li>Excel</li><li>navicat</li></ul><h2 id="具体步骤-2"><a href="#具体步骤-2" class="headerlink" title="具体步骤"></a>具体步骤</h2><p>1.连接到原邮件服务器导出dept表，并将表移动至刚刚使用的Excel中 2.新建一张工作表通讯录 3.各列公式如下 A列姓名</p><blockquote><p>=vpopmail!G1</p></blockquote><p>B列邮箱地址</p><blockquote><p>=建库脚本!A2</p></blockquote><p>C列部门</p><blockquote><p>=VLOOKUP(vpopmail!M1,dept!$A$1:$B$36,2,FALSE)</p></blockquote><p>D列电话</p><blockquote><p>由于原数据库中没存电话故填入固定值024-00000000</p></blockquote><p>E列通讯录所需格式</p><blockquote><p>=””””&amp;A2&amp;”””,”””&amp;B2&amp;”””,”””&amp;C2&amp;”””,”””&amp;D2&amp;””””</p></blockquote><h1 id="后续操作"><a href="#后续操作" class="headerlink" title="后续操作"></a>后续操作</h1><h2 id="1-变更文件所有权"><a href="#1-变更文件所有权" class="headerlink" title="1.变更文件所有权"></a>1.变更文件所有权</h2><p>chown -R vuser.vgroup /home/domains/</p><p>若不进行此操作用户登陆邮箱后会提示无权操作文件</p><h2 id="2-删除原网盘内记录网盘使用情况的文件"><a href="#2-删除原网盘内记录网盘使用情况的文件" class="headerlink" title="2.删除原网盘内记录网盘使用情况的文件"></a>2.删除原网盘内记录网盘使用情况的文件</h2><p>find /home/ -name .ftpquota | xargs rm</p><p>若不进行此操作则用户登陆网盘后会看见<strong>.ftpquota</strong>这个文件而这个文件无论是对于用户还是对于新邮件系统都是无用 的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;迁移身份认证数据库&quot;&gt;&lt;a href=&quot;#迁移身份认证数据库&quot; class=&quot;headerlink&quot; title=&quot;迁移身份认证数据库&quot;&gt;&lt;/a&gt;迁移身份认证数据库&lt;/h1&gt;&lt;h2 id=&quot;使用工具&quot;&gt;&lt;a href=&quot;#使用工具&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="extmail" scheme="http://www.wangxinlei.cn/categories/extmail/"/>
    
    
  </entry>
  
  <entry>
    <title>[JS]身份证号码校验并提取信息</title>
    <link href="http://www.wangxinlei.cn/2018/05/14/idcardpaser/"/>
    <id>http://www.wangxinlei.cn/2018/05/14/idcardpaser/</id>
    <published>2018-05-14T08:40:31.000Z</published>
    <updated>2018-10-07T06:29:36.823Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IDCardPaser"><a href="#IDCardPaser" class="headerlink" title="IDCardPaser"></a>IDCardPaser</h1><p>中国居民身份证解析器，依据身份证号判断身份证是否符合格式规则，若符合规则可返回所在地、出生日期、性别信息。</p><h1 id="本项目大部分代码来自以下两个项目"><a href="#本项目大部分代码来自以下两个项目" class="headerlink" title="本项目大部分代码来自以下两个项目"></a><a href="https://gitee.com/finaldusk/IDCardPaser#%E6%9C%AC%E9%A1%B9%E7%9B%AE%E5%A4%A7%E9%83%A8%E5%88%86%E4%BB%A3%E7%A0%81%E6%9D%A5%E8%87%AA%E4%BB%A5%E4%B8%8B%E4%B8%A4%E4%B8%AA%E9%A1%B9%E7%9B%AE" target="_blank" rel="noopener"></a>本项目大部分代码来自以下两个项目</h1><p><a href="https://github.com/cn/GB2260.js" target="_blank" rel="noopener">cn/GB2260.js</a>. <a href="https://github.com/mc-zone/IDValidator" target="_blank" rel="noopener">mc-zone/IDValidator</a>.</p><h1 id="与mc-zone-IDValidator-的区别"><a href="#与mc-zone-IDValidator-的区别" class="headerlink" title="与mc-zone/IDValidator 的区别"></a><a href="https://gitee.com/finaldusk/IDCardPaser#%E4%B8%8Emc-zoneidvalidator-%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noopener"></a>与<a href="https://github.com/mc-zone/IDValidator" target="_blank" rel="noopener">mc-zone/IDValidator</a> 的区别</h1><p>地区码使用 <a href="https://github.com/cn/GB2260.js" target="_blank" rel="noopener">cn/GB2260.js</a> 中提供的数据，地区名称不包含省市从而大大减少了GB2260.js占用的空间 使用js内置函数对出生日期进行日期校验 不包含伪造ID功能</p><h1 id="项目中GB2260-js与cn-GB2260-js的区别"><a href="#项目中GB2260-js与cn-GB2260-js的区别" class="headerlink" title="项目中GB2260.js与cn/GB2260.js的区别"></a><a href="https://gitee.com/finaldusk/IDCardPaser#%E9%A1%B9%E7%9B%AE%E4%B8%ADgb2260js%E4%B8%8Ecngb2260js%E7%9A%84%E5%8C%BA%E5%88%AB" target="_blank" rel="noopener"></a>项目中GB2260.js与<a href="https://github.com/cn/GB2260.js" target="_blank" rel="noopener">cn/GB2260.js</a>的区别</h1><p>本项目中的GB2260.js基于 GB2260.js/lib/201607.json 修改除大陆地区的地区码外还包含hongkong和macao的地区码</p><h1 id="源代码下载"><a href="#源代码下载" class="headerlink" title="源代码下载"></a>源代码下载</h1><p>本项目源代码发布于github和码云 <a href="https://github.com/finaldusk/IDCardPaser" target="_blank" rel="noopener"><strong>github</strong> https://github.com/finaldusk/IDCardPaser</a> <a href="https://gitee.com/finaldusk/IDCardPaser" target="_blank" rel="noopener"><strong>码云</strong> https://gitee.com/finaldusk/IDCardPaser</a></p><h1 id="GB2260-js"><a href="#GB2260-js" class="headerlink" title="GB2260.js"></a>GB2260.js</h1><p>本JS记录了地区码（身份证前六位）与地区名称的对应关系，由于文件较大（100KB）影响本文阅读效果故若需要下载请访问github或码云单独下载此文件。  </p><h1 id="IDCardPaser-js"><a href="#IDCardPaser-js" class="headerlink" title="IDCardPaser.js"></a>IDCardPaser.js</h1><p>function IDCardPaser() {<br>    var param = {<br>        error: {<br>            longNumber: ‘长数字存在精度问题，请使用字符串传值！ Long number is not allowed, because the precision of the Number In JavaScript.’<br>        }<br>    };<br>    var util = {<br>        checkArg: function (id) {<br>            var argType = (typeof id);</p><pre><code>        switch (argType) {            case &apos;number&apos;:                // long number not allowed                id = id.toString();                if (id.length &gt; 15) {                    this.error(param.error.longNumber);                    return false;                }                break;            case &apos;string&apos;:                break;            default:                return false;        }        id = id.toUpperCase();        var code = null;        if (id.length === 18) {            // 18位            code = {                body: id.slice(0, 17),                checkBit: id.slice(-1),                type: 18            };        } else if (id.length === 15) {            // 15位            code = {                body: id,                type: 15            };        } else {            return false;        }        return code;    }    // 地址码检查    ,    checkAddr: function (addr, GB2260) {        var addrInfo = this.getAddrInfo(addr, GB2260);        return (addrInfo === false ? false : true);    }    // 取得地址码信息    ,    getAddrInfo: function (addr, GB2260) {        GB2260 = GB2260 || null;        // 查询GB/T2260,没有引入GB2260时略过        if (GB2260 === null) {            return addr;        }        var province = addr.slice(0, 2) + &apos;0000&apos;;        var city = addr.slice(0, 4) + &apos;00&apos;;                if (!GB2260.hasOwnProperty(addr)) {            // 考虑标准不全的情况，搜索不到时向上搜索                            if (!GB2260.hasOwnProperty(city)) {                                    if (!GB2260.hasOwnProperty(province)) {                    return false;                } else {                    return GB2260\[province\] + &apos;未知地区&apos;;                }            } else {                return GB2260\[province\]+GB2260\[city\] + &apos;未知地区&apos;;            }        } else {                                    return GB2260\[province\] + GB2260\[city\]+ GB2260\[addr\];        }    }    // 生日码检查    ,    checkBirth: function (birth) {        var year, month, day;        if (birth.length == 8) {            year = parseInt(birth.slice(0, 4), 10);            month = parseInt(birth.slice(4, 6), 10);            day = parseInt(birth.slice(-2), 10);                        } else if (birth.length == 6) {            year = parseInt(&apos;19&apos; + birth.slice(0, 2), 10);            month = parseInt(birth.slice(2, 4), 10);            day = parseInt(birth.slice(-2), 10);        } else {            return false;        }        birth=year+&apos;-&apos;+month+&apos;-&apos;+day;        return (new Date(birth).getDate()==birth.substring(birth.length-2));    }    // 顺序码检查    ,    checkOrder: function (order) {        // 暂无需检测        return true;    }    // 加权    ,    weight: function (t) {        return Math.pow(2, t - 1) % 11;    }    // 随机整数    ,    rand: function (max, min) {        min = min || 1;        return Math.round(Math.random() * (max - min)) + min;    }    // 数字补位    ,    str_pad: function (str, len, chr, right) {        str = str.toString();        len = len || 2;        chr = chr || &apos;0&apos;;        right = right || false;        if (str.length &gt;= len) {            return str;        } else {            for (var i = 0, j = len - str.length; i &lt; j; i++) {                if (right) {                    str = str + chr;                } else {                    str = chr + str;                }            }            return str;        }    }    // 抛错    ,    error: function (msg) {        var e = new Error();        e.message = &apos;IDCardPaser: &apos; + msg;        throw e;    }};var _IDCardPaser = function (GB2260) {    if (typeof GB2260 !== &quot;undefined&quot;) {        this.GB2260 = GB2260;    }    // 建立cache    this.cache = {};};_IDCardPaser.prototype = {    isValid: function (id) {        var GB2260 = this.GB2260 || null;        var code = util.checkArg(id);        if (code === false) {            return false;        }        // 查询cache        if (this.cache.hasOwnProperty(id)            &amp;&amp; typeof this.cache\[id\].valid !== &apos;undefined&apos;) {            return this.cache\[id\].valid;        } else {            if (!this.cache.hasOwnProperty(id)) {                this.cache\[id\] = {};            }        }        var addr = code.body.slice(0, 6);        var birth = (code.type === 18 ? code.body.slice(6, 14) : code.body            .slice(6, 12));        var order = code.body.slice(-3);        if (!(util.checkAddr(addr, GB2260) &amp;&amp; util.checkBirth(birth) &amp;&amp; util            .checkOrder(order))) {            this.cache\[id\].valid = false;            return false;        }        // 15位不含校验码，到此已结束        if (code.type === 15) {            this.cache\[id\].valid = true;            return true;        }        /\* 校验位部分 */        // 位置加权        var posWeight = \[\];        for (var i = 18; i &gt; 1; i--) {            var wei = util.weight(i);            posWeight\[i\] = wei;        }        // 累加body部分与位置加权的积        var bodySum = 0;        var bodyArr = code.body.split(&apos;&apos;);        for (var j = 0; j &lt; bodyArr.length; j++) {            bodySum += (parseInt(bodyArr\[j\], 10) * posWeight\[18 - j\]);        }        // 得出校验码        var checkBit = 12 - (bodySum % 11);        if (checkBit == 10) {            checkBit = &apos;X&apos;;        } else if (checkBit &gt; 10) {            checkBit = checkBit % 11;        }        checkBit = (typeof checkBit === &apos;number&apos; ? checkBit.toString()            : checkBit);        // 检查校验码        if (checkBit !== code.checkBit) {            this.cache\[id\].valid = false;            return false;        } else {            this.cache\[id\].valid = true;            return true;        }    }    // 分析详细信息    ,    getInfo: function (id) {        var GB2260 = this.GB2260 || null;        // 号码必须有效        if (this.isValid(id) === false) {            return false;        }        // TODO 复用此部分        var code = util.checkArg(id);        // 查询cache        // 到此时通过isValid已经有了cache记录        if (typeof this.cache\[id\].info !== &apos;undefined&apos;) {            return this.cache\[id\].info;        }        var addr = code.body.slice(0, 6);        var birth = (code.type === 18 ? code.body.slice(6, 14) : code.body            .slice(6, 12));        var order = code.body.slice(-3);        var info = {};        info.addrCode = addr;        if (GB2260 !== null) {            info.addr = util.getAddrInfo(addr, GB2260);        }        info.birth = (code.type === 18 ? ((\[birth.slice(0, 4),        birth.slice(4, 6), birth.slice(-2)\]).join(&apos;-&apos;)) : (\[            &apos;19&apos; + birth.slice(0, 2), birth.slice(2, 4),            birth.slice(-2)\]).join(&apos;-&apos;));        info.sex = (order % 2 === 0 ? &apos;女&apos; :&apos;男&apos;);        info.length = code.type;        if (code.type === 18) {            info.checkBit = code.checkBit;        }        // 记录cache        this.cache\[id\].info = info;        return info;    }};// _IDCardPaserGB2260 = GB2260 == null ? &quot;&quot; : GB2260;return new _IDCardPaser(GB2260);</code></pre><p>}</p><h1 id="index-html"><a href="#index-html" class="headerlink" title="index.html"></a>index.html</h1><p>&lt;!DOCTYPE html&gt;</p><html><br><head><br>    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"><br>    <meta charset="utf-8"><br>    <meta name="viewport" content="width=device-width"><br>    <title>身份证号码解析器</title><br>    <script src="GB2260.js"></script><br>    <script src="IDCardPaser.js"></script><br></head><br><br><body><br><br><form role="form"><br>    <div class="form-group"><br>      <label for="IDCardNumber">身份证号码：</label><br>      <input type="text" class="form-control" name="IDCardNumber" id="IDCardNumber" placeholder="请输入身份证号码"><br>    </div><br>    <div class="form-group"><br>        <label for="Address">所在地：</label><br>        <input type="text" class="form-control" name="Address" id="Address" placeholder="所在地"><br>    </div><br>    <div class="form-group"><br>        <label for="BirthDate">出生日期：</label><br>        <input type="text" class="form-control" name="BirthDate" id="BirthDate" placeholder="出生日期"><br>      </div><br>      <div class="form-group"><br>        <label for="Sex">性别：</label><br>        <input type="text" class="form-control" name="Sex" id="Sex" placeholder="性别"><br>      </div><br>  </form><br>  <script><br>    document.getElementById(“IDCardNumber”).addEventListener(“change”, function () {<br>        var idCardPaser = new IDCardPaser();<br>        var info = idCardPaser.getInfo(document.getElementById(“IDCardNumber”).value);<br>        if (info == false) {<br>            alert(‘身份证号码输入可能有误，请确认’)<br>        } else {<br>            document.getElementById(“Sex”).value = info.sex;<br>            document.getElementById(“BirthDate”).value = info.birth;<br>            document.getElementById(“Address”).value = info.addr;<br>        }<br>    });<br></script><br></body><br></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;IDCardPaser&quot;&gt;&lt;a href=&quot;#IDCardPaser&quot; class=&quot;headerlink&quot; title=&quot;IDCardPaser&quot;&gt;&lt;/a&gt;IDCardPaser&lt;/h1&gt;&lt;p&gt;中国居民身份证解析器，依据身份证号判断身份证是否符合格式规则，若符合
      
    
    </summary>
    
      <category term="前端" scheme="http://www.wangxinlei.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>使UEditor编辑器中插入的视频可以在IE8中正常播放</title>
    <link href="http://www.wangxinlei.cn/2017/12/20/forceueditorvideoplayinie8/"/>
    <id>http://www.wangxinlei.cn/2017/12/20/forceueditorvideoplayinie8/</id>
    <published>2017-12-20T13:01:31.000Z</published>
    <updated>2018-10-07T06:29:36.823Z</updated>
    
    <content type="html"><![CDATA[<p>UEditor中插入的视频在现代浏览器中都可以正常播放，然而在IE8等上古浏览器中却不能播放，其实UEditor已经引用了Video.js只要稍加修改是可以在IE8中正常播放的。</p><blockquote><p>本文使用UEditor1.4.3.3版本</p></blockquote><p>1.根据 ueditor.all.js 第17664至17670行代码正常生成的Video标签是应该包含一个source子标签的，然而在编辑器生成的Html代码中却找不到source标签，原来UEditor生成的部分标签没有被包含在UEditor的XSS白名单里，我们需要将被误过滤的标签加入到XSS白名单里来使Video.js正常工作。</p><p>//在ueditor.config.js第428行为video标签添加”data-setup”属性<br>//添加后的第428行代码如下所示<br>video:  [‘autoplay’, ‘controls’, ‘loop’, ‘preload’, ‘src’, ‘height’, ‘width’, ‘class’, ‘style’,’data-setup’]</p><p>//添加source标签的src和type属性到白名单<br>source:[‘src’, ‘type’],</p><p>完成上述操作后在需要播放视频的页面引入video.js相关文件即可播放视频</p><!--引入Video.js的js及css文件--><script type="text/javascript" src="ueditor/third-party/video-js/video.js"></script><link rel="stylesheet" href="ueditor/third-party/video-js/video-js.min.css"><!--设置Video.js使用服务器端的flash播放器，若不设置则默认会调用互联网上的播放器，也可直接在video.js代码中修改flash播放器引用地址--><script>    videojs.options.flash.swf = "ueditor/third-party/video-js/video-js.swf";</script><p>2.在现代浏览器中播放，一切正常，但在IE8中播放器的播放按钮始终不会消失，而且进度条也不会正常显示，经过反复测试发现，若video标签的父标签为p标签，那么播放器就会产生bug，给video标签套上一个div标签就不会产生这个问题了。</p><p>//修改ueditor.all.js第17664行~17670行代码让video标签生成时外面自动套上一层div标签<br>            case ‘video’:<br>                var ext = url.substr(url.lastIndexOf(‘.’) + 1);<br>                if(ext == ‘ogv’) ext = ‘ogg’;<br>                str = ‘<div><video' +="" (id="" ?="" '="" id="' + id + '" :="" '')="" class="' + classname + ' video-js" (align="" style="float:' + align + '" ':="" controls preload="none" width="' + width + '" height="' + height + '" src="' + url + '" data-setup="{}">‘ +<br>                    ‘<source src="' + url + '" type="video/' + ext + '"></video'></div>‘;<br>                break;</p><blockquote><p>本文同样适用于“在IE8浏览器中播放video标签的视频”</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;UEditor中插入的视频在现代浏览器中都可以正常播放，然而在IE8等上古浏览器中却不能播放，其实UEditor已经引用了Video.js只要稍加修改是可以在IE8中正常播放的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本文使用UEditor1.4.3.3版本&lt;/p&gt;
&lt;/
      
    
    </summary>
    
      <category term="前端" scheme="http://www.wangxinlei.cn/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Ueditor" scheme="http://www.wangxinlei.cn/tags/Ueditor/"/>
    
      <category term="html5" scheme="http://www.wangxinlei.cn/tags/html5/"/>
    
      <category term="ie8" scheme="http://www.wangxinlei.cn/tags/ie8/"/>
    
      <category term="video" scheme="http://www.wangxinlei.cn/tags/video/"/>
    
      <category term="在IE8浏览器中播放video标签的视频" scheme="http://www.wangxinlei.cn/tags/%E5%9C%A8IE8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E6%92%AD%E6%94%BEvideo%E6%A0%87%E7%AD%BE%E7%9A%84%E8%A7%86%E9%A2%91/"/>
    
  </entry>
  
  <entry>
    <title>修改extmail的附件大小限制</title>
    <link href="http://www.wangxinlei.cn/2017/08/23/changeextmaillimit/"/>
    <id>http://www.wangxinlei.cn/2017/08/23/changeextmaillimit/</id>
    <published>2017-08-23T02:50:30.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>1、修改extmail目录下的webmail.cf文件</p><p>SYS_MESSAGE_SIZE_LIMIT = 5242880</p><p>2、修改/etc/postfix/main.cf文件</p><p>message_size_limit = &lt;新的邮件大小限制&gt;</p><p>需要注意的是 以上大小为附件经过编码后的大小，经过编码后附件大小会变大40%左右 所以应将大小限制放大50%左右。 当网络带宽有限时还应调整<strong>/etc/httpd/conf/httpd.conf</strong>文件修改连接超时时间防止上传附件过程中超时导致邮件发送结果不能正常返回</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、修改extmail目录下的webmail.cf文件&lt;/p&gt;
&lt;p&gt;SYS_MESSAGE_SIZE_LIMIT = 5242880&lt;/p&gt;
&lt;p&gt;2、修改/etc/postfix/main.cf文件&lt;/p&gt;
&lt;p&gt;message_size_limit = &amp;lt;新的邮
      
    
    </summary>
    
      <category term="extmail" scheme="http://www.wangxinlei.cn/categories/extmail/"/>
    
    
  </entry>
  
  <entry>
    <title>使用CMD命令创建指定大小的空文件</title>
    <link href="http://www.wangxinlei.cn/2017/08/23/usecmdmakefile/"/>
    <id>http://www.wangxinlei.cn/2017/08/23/usecmdmakefile/</id>
    <published>2017-08-23T02:20:24.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>以管理员身份运行CMD或PowerShell</p><p>fsutil file createnew C:\test.txt 1024</p><p>C:\test.txt 为创建文件的路径 1024为创建文件的大小单位B</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以管理员身份运行CMD或PowerShell&lt;/p&gt;
&lt;p&gt;fsutil file createnew C:\test.txt 1024&lt;/p&gt;
&lt;p&gt;C:\test.txt 为创建文件的路径 1024为创建文件的大小单位B&lt;/p&gt;

      
    
    </summary>
    
      <category term="运维" scheme="http://www.wangxinlei.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>C#多线程Ping测试</title>
    <link href="http://www.wangxinlei.cn/2017/06/30/csharpmutithreadpingtest/"/>
    <id>http://www.wangxinlei.cn/2017/06/30/csharpmutithreadpingtest/</id>
    <published>2017-06-30T07:39:15.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>public static Stopwatch sw = new Stopwatch();<br>        public static void Main(string[] args)<br>        {<br>            sw.Start();<br>            ModelDataBase db = new ModelDataBase();<br>            List<pingresult> pingresult = new List<pingresult>();<br>            var assets = db.tbl_Asset.ToList();</pingresult></pingresult></p><pre><code>    //读取IP地址列表并添加任务    foreach (var item in assets)    {        var ipadd = item.Asset_IPAddr;        pingresult p = new pingresult();        p.ipadd = ipadd;        p.PingTask = Task.Run(() =&gt; { return PingReply(ipadd); });        pingresult.Add(p);    }                Console.WriteLine(&quot;任务创建完毕\\t&quot;+ sw.Elapsed);    foreach (var item in pingresult)    {        new Thread(item.FillResult).Start();        //Task.Run(new Action(item.FillResult));    }    Console.ReadLine();}public class pingresult{    public string ipadd { get; set; }    public PingReply PingReply { get; set; }    public Task&lt;PingReply&gt; PingTask{get;set;}    /// &lt;summary&gt;    /// 从异步任务中获取测试结果并输出    /// &lt;/summary&gt;    public void FillResult()    {                        PingReply = PingTask.Result;        ShowResult();                    }    /// &lt;summary&gt;    /// 输出测试结果    /// &lt;/summary&gt;    public void ShowResult()    {        var str = ipadd+ &quot;\\t&quot;;                       if (PingReply.Status == IPStatus.Success)        {            str+= PingReply.RoundtripTime + &quot;ms\\tTTL=&quot; + PingReply.Options.Ttl;            //Console.WriteLine(&quot;Don&apos;t fragment: {0}&quot;, reply.Options.DontFragment);            //Console.WriteLine(&quot;Buffer size: {0}&quot;, reply.Buffer.Length);        }        else        {            str += PingReply.Status;        }        str = (&quot;Thread ID:&quot; + Thread.CurrentThread.ManagedThreadId + &quot;\\t&quot; + sw.Elapsed) + Environment.NewLine + str;        Console.WriteLine(str+ Environment.NewLine);    }}      /// &lt;summary&gt;/// 异步测试网络连通性/// &lt;/summary&gt;/// &lt;param name=&quot;ipadd&quot;&gt;IP地址&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public static Task&lt;PingReply&gt; PingReply(String ipadd){    Ping pingSender = new Ping();    PingOptions options = new PingOptions();    // Use the default Ttl value which is 128,    // but change the fragmentation behavior.    options.DontFragment = true;    // Create a buffer of 32 bytes of data to be transmitted.    string data = &quot;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&quot;;    byte\[\] buffer = Encoding.ASCII.GetBytes(data);    int timeout = 1000;    return  pingSender.SendPingAsync(ipadd, timeout, buffer, options);            }</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;public static Stopwatch sw = new Stopwatch();&lt;br&gt;        public static void Main(string[] args)&lt;br&gt;        {&lt;br&gt;            sw.Start();&lt;b
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>ASP.NET MVC中使用Ueditor</title>
    <link href="http://www.wangxinlei.cn/2017/02/15/asp-net-mvc-ueditor/"/>
    <id>http://www.wangxinlei.cn/2017/02/15/asp-net-mvc-ueditor/</id>
    <published>2017-02-15T03:07:52.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>1.将下载的uediotr文件夹拖入项目中 2.在需要的Model类中添加<strong>[DataType(DataType.MultilineText)]</strong>标签 3.在View中添加Script引用</p><p>@section Scripts {<br>@Scripts.Render(“~/bundles/jqueryval”, “~/Content/ueditor/ueditor.config.js”, “~/Content/ueditor/ueditor.all.js”)</p><script type="text/javascript"><p>var editorOption = {<br>initialFrameWidth: 784,<br>initialFrameHeight: 400<br>};<br>var editor = new baidu.editor.ui.Editor(editorOption);<br>editor.render(‘<strong>此处为对应类名</strong>‘);<br></script><br>}<p></p><p>4.接收表单的对应Action上添加<strong>[ValidateInput(false)]</strong>标签 5.在要显示输入的地方使用HTML.Raw显示</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.将下载的uediotr文件夹拖入项目中 2.在需要的Model类中添加&lt;strong&gt;[DataType(DataType.MultilineText)]&lt;/strong&gt;标签 3.在View中添加Script引用&lt;/p&gt;
&lt;p&gt;@section Scripts {&lt;b
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
      <category term="ASP.NET" scheme="http://www.wangxinlei.cn/tags/ASP-NET/"/>
    
      <category term="MVC" scheme="http://www.wangxinlei.cn/tags/MVC/"/>
    
      <category term="Ueditor" scheme="http://www.wangxinlei.cn/tags/Ueditor/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap在使用Bundle时提示数组越界</title>
    <link href="http://www.wangxinlei.cn/2017/02/14/bootstrap-bundle/"/>
    <id>http://www.wangxinlei.cn/2017/02/14/bootstrap-bundle/</id>
    <published>2017-02-14T14:27:27.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>在使用Bundle引入了从官方下载的bootstrap时编译会报索引超出了数组界限异常</p><h1 id="“-”应用程序中的服务器错误。"><a href="#“-”应用程序中的服务器错误。" class="headerlink" title="“/”应用程序中的服务器错误。"></a>“/”应用程序中的服务器错误。</h1><hr><h2 id="索引超出了数组界限。"><a href="#索引超出了数组界限。" class="headerlink" title="索引超出了数组界限。"></a><em>索引超出了数组界限。</em></h2><p><strong>说明:</strong> 执行当前 Web 请求期间，出现未经处理的异常。请检查堆栈跟踪信息，以了解有关该错误以及代码中导致错误的出处的详细信息。 <strong>异常详细信息:</strong> System.IndexOutOfRangeException: 索引超出了数组界限。 <strong>源错误:</strong></p><p>行 6:      <meta name="viewport" content="width=device-width, initial-scale=1.0"><br>行 7:      <title>@ViewBag.Title - 我的 ASP.NET 应用程序</title><br>行 8:      @Styles.Render(“~/Content/css”) 行 9:      @Scripts.Render(“~/bundles/modernizr”)<br>行 10: </p><p><strong>源文件:</strong> c:\users\final\documents\visual studio 2015\Projects\NetDisk\NetDisk\Views\Shared\<em>Layout.cshtml <strong>行:</strong> 8   这时到Content/bootstrap.css中找到<strong>2424行</strong>，会发现有多行行首为”</em>“删掉这些”_”再次编译，正常运行。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在使用Bundle引入了从官方下载的bootstrap时编译会报索引超出了数组界限异常&lt;/p&gt;
&lt;h1 id=&quot;“-”应用程序中的服务器错误。&quot;&gt;&lt;a href=&quot;#“-”应用程序中的服务器错误。&quot; class=&quot;headerlink&quot; title=&quot;“/”应用程序中的服务
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>辽宁省县区经纬坐标</title>
    <link href="http://www.wangxinlei.cn/2017/01/05/liaoningxy/"/>
    <id>http://www.wangxinlei.cn/2017/01/05/liaoningxy/</id>
    <published>2017-01-05T02:34:31.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>适用于1080P分辨率 具体经纬度有偏移10公里左右 在点大小12px时几乎不重叠</p><p>var geoCoordMap = {<br>        “康平县”: [123.335742, 42.751171],<br>        “法库县”: [123.413278, 42.509307],<br>        “新民市”: [122.824839, 42.007298],<br>        “辽中区”: [122.735799, 41.517894],<br>        “皇姑区”: [123.421817, 41.896006],<br>        “苏家屯区”: [123.349248, 41.671746],<br>        “于洪区”: [123.12861, 41.721581],<br>        “铁西区”: [123.3036, 41.828691],<br>        “沈河区”: [123.50942, 41.77965],<br>        “大东区”: [123.669031, 41.878177],<br>        “浑南区”: [123.504461, 41.641791],<br>        “和平区”: [123.425712, 41.79556],<br>        “沈北新区”: [123.519984, 42.06026],</p><pre><code>  &quot;清原县&quot;: \[124.924862, 42.105873\],  &quot;新宾县&quot;: \[125.035246, 41.738324\],  &quot;抚顺县&quot;: \[123.905701, 41.980746\],  &quot;望花区&quot;: \[123.922655, 41.741218\],  &quot;新抚区&quot;: \[123.853959, 41.847621\],  &quot;东洲区&quot;: \[124.042596, 41.858129\],  &quot;顺城区&quot;: \[123.96836, 41.916234\],  &quot;西丰县&quot;: \[124.731855, 42.743536\],  &quot;昌图县&quot;: \[124.117845, 42.791827\],  &quot;铁岭县&quot;: \[123.676885, 42.23804\],  &quot;银州区&quot;: \[123.851084, 42.291848\],  &quot;清河区&quot;: \[124.166713, 42.554245\],  &quot;调兵山市&quot;: \[123.571675, 42.475131\],  &quot;开原市&quot;: \[124.037932, 42.552544\],  &quot;站前区&quot;: \[122.283002, 40.692966\],  &quot;西市区&quot;: \[122.203951, 40.672832\],  &quot;鲅鱼圈区&quot;: \[122.131655, 40.23033\],  &quot;老边区&quot;: \[122.372689, 40.682025\],  &quot;大石桥市&quot;: \[122.512106, 40.650722\],  &quot;盖州市&quot;: \[122.352998, 40.408562\],  &quot;清河门区&quot;: \[121.424366, 41.787839\],  &quot;海州区&quot;: \[121.641109, 42.026417\],  &quot;细河区&quot;: \[121.741288, 42.04399\],  &quot;太平区&quot;: \[121.705787, 41.992971\],  &quot;新邱区&quot;: \[121.843048, 42.145903\],  &quot;阜新县&quot;: \[121.702768, 42.151465\],  &quot;彰武县&quot;: \[122.543151, 42.395064\],  &quot;北票市&quot;: \[120.77083, 41.816017\],  &quot;喀左县&quot;: \[119.746262, 41.132468\],  &quot;凌源市&quot;: \[119.40943, 41.256164\],  &quot;建平县&quot;: \[119.646296, 41.408706\],  &quot;朝阳县&quot;: \[120.262853, 41.242755\],  &quot;双塔区&quot;: \[120.460873, 41.559353\],  &quot;龙城区&quot;: \[120.390833, 41.690589\],  &quot;连山区&quot;: \[120.771427, 40.919333\],  &quot;南票区&quot;: \[120.75548, 41.113792\],  &quot;龙港区&quot;: \[120.899859, 40.73916\],  &quot;绥中县&quot;: \[120.349008, 40.332558\],  &quot;建昌县&quot;: \[119.839352, 40.828145\],  &quot;兴城市&quot;: \[120.76073, 40.615724\],  &quot;义县&quot;: \[121.235815, 41.533315\],  &quot;黑山县&quot;: \[122.126503, 41.673349\],  &quot;北镇市&quot;: \[121.783854, 41.59571\],  &quot;凌海市&quot;: \[121.361866, 41.167448\],  &quot;古塔区&quot;: \[121.131325, 41.190036\],  &quot;凌河区&quot;: \[121.199165, 41.123553\],  &quot;太和区&quot;: \[121.09223, 41.109639\],  &quot;双台子区&quot;: \[122.049465, 41.206104\],  &quot;兴隆台区&quot;: \[122.098332, 41.116161\],  &quot;大洼县&quot;: \[122.086834, 41.001272\],  &quot;盘山县&quot;: \[121.882164, 41.326266\],  &quot;铁东区&quot;: \[123.061316, 41.093548\],  &quot;鞍山铁西区&quot;: \[122.888841, 41.152675\],  &quot;千山区&quot;: \[122.948058, 41.072666\],  &quot;立山区&quot;: \[123.039469, 41.159193\],  &quot;海城市&quot;: \[122.674398, 40.888362\],  &quot;台安县&quot;: \[122.439545, 41.41938\],  &quot;岫岩县&quot;: \[123.283373, 40.296641\],  &quot;白塔区&quot;: \[123.165228, 41.436858\],  &quot;文圣区&quot;: \[123.15488, 41.34117\],  &quot;宏伟区&quot;: \[123.206047, 41.143284\],  &quot;弓长岭区&quot;: \[123.419341, 41.156321\],  &quot;太子河区&quot;: \[123.179026, 41.259659\],  &quot;辽阳县&quot;: \[123.107737, 41.211918\],  &quot;灯塔市&quot;: \[123.340002, 41.430368\],  &quot;平山区&quot;: \[123.738754, 41.236397\],  &quot;溪湖区&quot;: \[123.763762, 41.422532\],  &quot;明山区&quot;: \[123.83074, 41.318804\],  &quot;南芬区&quot;: \[123.749102, 41.111284\],  &quot;本溪县&quot;: \[124.127396, 41.307534\],  &quot;桓仁县&quot;: \[125.342768, 41.282384\],  &quot;元宝区&quot;: \[124.394157, 40.140571\],  &quot;振兴区&quot;: \[124.283774, 40.048728\],  &quot;振安区&quot;: \[124.461997, 40.199673\],  &quot;东港市&quot;: \[124.137745, 39.862009\],  &quot;凤城市&quot;: \[124.060706, 40.460159\],  &quot;宽甸县&quot;: \[124.767852, 40.742374\],  &quot;中山区&quot;: \[121.653045, 38.938018\],  &quot;西岗区&quot;: \[121.707649, 38.891015\],  &quot;沙河口区&quot;: \[121.543223, 38.879781\],  &quot;金州区&quot;: \[121.781166, 39.056454\],  &quot;甘井子区&quot;: \[121.53012, 38.957997\],  &quot;旅顺口区&quot;: \[121.254448, 38.850628\],  &quot;瓦房店市&quot;: \[121.983536, 39.633444\],  &quot;庄河市&quot;: \[122.970092, 39.691212\],  &quot;普兰店市&quot;: \[121.857055, 39.405678\],  &quot;长海县&quot;: \[122.589497, 39.280454\],};</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;适用于1080P分辨率 具体经纬度有偏移10公里左右 在点大小12px时几乎不重叠&lt;/p&gt;
&lt;p&gt;var geoCoordMap = {&lt;br&gt;        “康平县”: [123.335742, 42.751171],&lt;br&gt;        “法库县”: [123.41
      
    
    </summary>
    
      <category term="运维" scheme="http://www.wangxinlei.cn/categories/%E8%BF%90%E7%BB%B4/"/>
    
    
  </entry>
  
  <entry>
    <title>邮件服务器更换域名</title>
    <link href="http://www.wangxinlei.cn/2016/12/09/changemailname/"/>
    <id>http://www.wangxinlei.cn/2016/12/09/changemailname/</id>
    <published>2016-12-09T02:35:16.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>按照上一篇 <a href="http://www.wangxinlei.cn/2016/12/emailsystembaseoncentos6-5/">基于CentOS6.5搭建的邮件系统</a> 搭建完邮件服务器后需要将邮件服务器克隆并更换域名这时只需按照如下方法修改相关配置文件即可</p><h1 id="修改IP地址"><a href="#修改IP地址" class="headerlink" title="修改IP地址"></a>修改IP地址</h1><p>克隆邮件服务器虚拟机后MAC地址会发生变化这时需要做一些操作将”新网卡”变成eth0</p><p># vi /etc/udev/rules.d/70-persistent-net.rules</p><p>##出现以下内容，会看到有2块网卡eth0和eth1，eth0为原系统的，eth1为新生成的<br># PCI device0x1022:0x2000 (pcnet32)<br>SUBSYSTEM==”net”, ACTION==”add”,DRIVERS==”?<em>“, ATTR{address}==”00:0c:29:16:f4:91”,ATTR{type}==”1”, KERNEL==”eth</em>“, NAME=”eth0”</p><p># PCI device0x1022:0x2000 (pcnet32)<br>SUBSYSTEM==”net”, ACTION==”add”,DRIVERS==”?<em>“, ATTR{address}==”00:0c:29:52:45:fc”,ATTR{type}==”1”, KERNEL==”eth</em>“, NAME=”eth1”</p><p>##将原网卡注释掉并将新网卡名称变更为eth0</p><p># PCI device0x1022:0x2000 (pcnet32) </p><p>#SUBSYSTEM==”net”, ACTION==”add”,DRIVERS==”?<em>“, ATTR{address}==”00:0c:29:16:f4:91”,ATTR{type}==”1”, KERNEL==”eth</em>“, NAME=”eth0”</p><p># PCI device0x1022:0x2000 (pcnet32)<br>SUBSYSTEM==”net”, ACTION==”add”,DRIVERS==”?<em>“, ATTR{address}==”00:0c:29:52:45:fc”,ATTR{type}==”1”, KERNEL==”eth</em>“, NAME=”eth0”</p><p>记录一下新生成的MAC地址下一步操作会用到</p><p>#vi /etc/sysconfig/network-scripts/ifcfg-eth0</p><p>HWADDR=00:0C:29:52:45:fc   ##将MAC地址修改为新MAC<br>IPADDR=192.168.1.99 ##修改IP地址</p><p>#vi /etc/sysconfig/network</p><p>HOSTNAME=mail.fmail.com ##修改主机名</p><p>#shutdown -r now  ##重新启动</p><p>启动之后就可以重新使用SSH连接了</p><h1 id="修改POSTFIX配置文件"><a href="#修改POSTFIX配置文件" class="headerlink" title="修改POSTFIX配置文件"></a>修改POSTFIX配置文件</h1><p>vi /etc/postfix/main.cf<br>myhostname = mail.fmail.com</p><h1 id="重新初始化数据库"><a href="#重新初始化数据库" class="headerlink" title="重新初始化数据库"></a>重新初始化数据库</h1><p>#cd /var/www/extsuite</p><p>#mysql -uroot -p123456<br>mysql&gt; DROP DATABASE extmail;<br>mysql&gt; quit</p><p>##email.com为原域名 fmail.com为现域名<br>[root@mail extsuite]# mysql -uroot -p123456 &lt; extman/docs/extmail.sql<br>[root@mail extsuite]# sed -i ‘s/email.com/fmail.com/g’ extman/docs/init.sql<br>[root@mail extsuite]# sed -i ‘s/1000/1002/g’ extman/docs/init.sql<br>[root@mail extsuite]# mysql -uroot -p123456 &lt; /var/www/extsuite/extman/docs/init.sql</p><h1 id="修改Apache配置"><a href="#修改Apache配置" class="headerlink" title="修改Apache配置"></a>修改Apache配置</h1><p>#vi /etc/httpd/conf.d/extmail.conf<br>ServerName mail.fmail.com</p><p>##修改ServerName</p><h1 id="建立Maildir"><a href="#建立Maildir" class="headerlink" title=" 建立Maildir"></a> 建立Maildir</h1><p>#cd /var/www/extsuite/extman/tools<br>[root@mail tools]# ./maildirmake.pl /home/domains/fmail.com/postmaster/Maildir<br>[root@mail tools]# chown -R vmail:vmail /home/domains</p><h1 id="重新启动"><a href="#重新启动" class="headerlink" title=" 重新启动"></a> 重新启动</h1><p>#shutdown -r now</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;按照上一篇 &lt;a href=&quot;http://www.wangxinlei.cn/2016/12/emailsystembaseoncentos6-5/&quot;&gt;基于CentOS6.5搭建的邮件系统&lt;/a&gt; 搭建完邮件服务器后需要将邮件服务器克隆并更换域名这时只需按照如下方法修改相
      
    
    </summary>
    
      <category term="extmail" scheme="http://www.wangxinlei.cn/categories/extmail/"/>
    
    
  </entry>
  
  <entry>
    <title>基于CentOS6.5搭建的邮件系统</title>
    <link href="http://www.wangxinlei.cn/2016/12/08/emailsystembaseoncentos6-5/"/>
    <id>http://www.wangxinlei.cn/2016/12/08/emailsystembaseoncentos6-5/</id>
    <published>2016-12-08T07:55:32.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-参考资料"><a href="#1-参考资料" class="headerlink" title="-1 参考资料"></a>-1 参考资料</h1><p>本资料主要参考一下资料整理而成，实现了最基本的WebMail以及IMAP和POP3功能。若要使用更多功能(如反垃圾邮件和防病毒)请到以下参考资料查看。 <a href="http://ywzhou.blog.51cto.com/2785388/d-4" target="_blank" rel="noopener">月晴星飞博客-Postfix邮箱</a> <a href="http://wangzhijian.blog.51cto.com/6427016/1695401" target="_blank" rel="noopener">记事本博客-Postfix+Sasl+Courier-authlib+Dovecot+MySQL+extmail实现WebMail</a> 相关源码包可到 <a href="http://down.51cto.com/data/1955875" target="_blank" rel="noopener">http://down.51cto.com/data/1955875</a> 下载(月晴星飞博客提供) ExtMail可到官网或 <a href="http://ywzhou.blog.51cto.com/2785388/1590022" target="_blank" rel="noopener">Postfix邮箱(三)：安装Webmail前台</a> 下载</p><h1 id="0-准备工作"><a href="#0-准备工作" class="headerlink" title="0 准备工作"></a>0 准备工作</h1><h2 id="0-1-系统环境"><a href="#0-1-系统环境" class="headerlink" title="0.1 系统环境"></a>0.1 系统环境</h2><p>CentOS 6.5 x86_64 下载地址 <a href="http://vault.centos.org/6.5/isos/x86\_64/CentOS-6.5-x86_64-minimal.iso" target="_blank" rel="noopener">http://vault.centos.org/6.5/isos/x86\_64/CentOS-6.5-x86_64-minimal.iso</a> 主机名 mail.email.com IP地址 eth0=192.168.1.92 DNS: 192.168.1.91 (Windows Server) 在DNS中做好到 email.com 的解析 (泛解析及MX记录) 关闭SELinux</p><p>1.永久性关闭（这样需要重启服务器后生效）<br># sed -i ‘s/SELINUX=enforcing/SELINUX=disabled/‘ /etc/selinux/config<br>2.临时性关闭（立即生效，但是重启服务器后失效）<br># setenforce 0 #设置selinux为permissive模式（即关闭）<br># setenforce 1 #设置selinux为enforcing模式（即开启）</p><h2 id="0-2-安装软件"><a href="#0-2-安装软件" class="headerlink" title="0.2 安装软件"></a>0.2 安装软件</h2><p>编译环境</p><p>#yum install gcc gcc-c++</p><p>依赖软件</p><p>#yum install openssl openssl-devel cyrus-sasl libtool-ltdl libtool-ltdl-devel db4 db4-devel expect expect-devel pcre pcre-devel</p><p>LAMP环境</p><p>#yum install httpd httpd-devel mysql mysql-server mysql-devel php php-mysql</p><p>设置防火墙</p><p>#iptables -I INPUT -p tcp -m multiport –dport 21,80 -j ACCEPT</p><p>#service iptables save</p><p>安装EPEL软件源</p><p>#wget <a href="http://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm" target="_blank" rel="noopener">http://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</a></p><p>#rpm -ivh epel-release-latest-6.noarch.rpm&gt;</p><p>#yum repolist</p><p>同步系统时间</p><p>#yum install ntpdate&gt;</p><p>#ntpdate time1.aliyun.com &amp;&amp; hwclock -w</p><h1 id="1-安装POSTFIX"><a href="#1-安装POSTFIX" class="headerlink" title="1 安装POSTFIX"></a>1 安装POSTFIX</h1><h2 id="1-1-安装"><a href="#1-1-安装" class="headerlink" title="1.1 安装"></a>1.1 安装</h2><p>[root@mail ~]# rpm -aq|grep postfix<br>postfix-2.6.6-2.2.el6_1.x86_64</p><p>#CentOS6.5已默认安装了2.6.6版本，再升级一下：<br>[root@mail ~]# yum update postfix<br>postfix-2.6.6-6.el6_5.x86_64</p><h2 id="1-2-配置"><a href="#1-2-配置" class="headerlink" title="1.2 配置"></a>1.2 配置</h2><p>[root@mail ~]# cd /etc/postfix<br>[root@mail postfix]# postconf -n /etc/postfix/main2.cf<br>[root@mail postfix]# mv main.cf main.cf.old<br>[root@mail postfix]# mv main2.cf main.cf<br>[root@mail postfix]# vi main.cf<br># 注释掉下面这行，否则25端口只能本地连接<br># inet_interfaces = localhost<br># 添加以下基本配置<br># 主机设置<br>mynetworks = 127.0.0.1<br>myhostname = mail.email.com<br>mydestination = $myhostname, localhost.$mydomain, localhost<br># 显示连接信息<br>mail_name = Postfix - by email.com<br>smtpd_banner = $myhostname ESMTP $mail_name<br># 立即响应<br>smtpd_error_sleep_time = 0s<br># 邮件大小和邮箱大小限制10M、2G<br>message_size_limit = 10485760<br>mailbox_size_limit = 2097152000<br>show_user_unknown_table_name = no<br># 队列超时限制 1天<br>bounce_queue_lifetime = 1d<br>maximal_queue_lifetime = 1d</p><h2 id="1-3-启动"><a href="#1-3-启动" class="headerlink" title="1.3 启动"></a>1.3 启动</h2><p>[root@mail postfix]# service postfix start<br>[root@mail postfix]# chkconfig postfix on<br>[root@mail postfix]# ps aux|grep postfix<br>root 3070 0.0 0.3 81292 3436 ? Ss 13:59 0:00 /usr/libexec/postfix/master<br>postfix 3072 0.0 0.3 81372 3392 ? S 13:59 0:00 pickup -l -t fifo -u<br>postfix 3073 0.0 0.3 81440 3440 ? S 13:59 0:00 qmgr -l -t fifo -u<br>root 3124 0.0 0.0 103248 880 pts/1 S+ 14:02 0:00 grep postfix<br>[root@mail postfix]# netstat -tlnp|grep 25<br>tcp 0 0 127.0.0.1:25 0.0.0.0:<em> LISTEN 3070/master<br>tcp 0 0 ::1:25 :::</em> LISTEN 3070/master</p><h2 id="1-4检查"><a href="#1-4检查" class="headerlink" title="1.4检查"></a>1.4检查</h2><p>[root@mail postfix]# postfix check</p><p>#没有错误返回表示配置正确<br>[root@mail postfix]# postconf -a</p><p>#出现cyrus表示可以支持cyrus认证用户<br>[root@mail postfix]# postconf -m</p><p>#出现mysql表示可以支持mysql存储账号</p><h2 id="1-5设置防火墙"><a href="#1-5设置防火墙" class="headerlink" title="1.5设置防火墙"></a>1.5设置防火墙</h2><p>[root@mail ~]# iptables -I INPUT -p tcp –dport 25 -j ACCEPT<br>[root@mail ~]# service iptables save</p><h1 id="2-安装Courier-Authlib"><a href="#2-安装Courier-Authlib" class="headerlink" title=" 2 安装Courier-Authlib"></a> 2 安装Courier-Authlib</h1><h2 id="2-1-编译安装"><a href="#2-1-编译安装" class="headerlink" title="2.1 编译安装"></a>2.1 编译安装</h2><p>#先查看下uid 1000是否已使用<br>[root@mail ~]# cat /etc/passwd</p><p>#安装系统时创建了一个用户，占用了1000，因此使用1002<br>[root@mail ~]# groupadd vmail -g 1002<br>[root@mail ~]# useradd vmail -u 1002 -g 1002 -d /home/domains<br>[root@mail ~]# cd /usr/local/src<br>[root@mail src]# wget <a href="http://cznic.dl.sourceforge.net/project/courier/authlib/0.66.1/courier-authlib-0.66.1.tar.bz2" target="_blank" rel="noopener">http://cznic.dl.sourceforge.net/project/courier/authlib/0.66.1/courier-authlib-0.66.1.tar.bz2</a><br>[root@mail src]# tar -jxf courier-authlib-0.66.1.tar.bz2<br>[root@mail src]# cd courier-authlib-0.66.1<br>[root@mail courier-authlib-0.66.1]# ./configure –with-mysql-libs –with-mysql-includes –with-authmysql –with-authmysql=yes –with-mailuser=vmail –with-mailgroup=vmail<br>[root@mail courier-authlib-0.66.1]# make<br>[root@mail courier-authlib-0.66.1]# make install<br>[root@mail courier-authlib-0.66.1]# make install-configure</p><p>说明：编译时可能出现报错，基本是因为某些包没有安装，YUM装上后重新编译；因此建议先按上文“系统环境”安装好依赖软件。 mysql参数也可以指定绝对路径： –with-mysql-libs=/usr/local/mysql/lib/mysql\ –with-mysql-includes=/usr/local/mysql/include/mysql/ \</p><h2 id="2-2-配置"><a href="#2-2-配置" class="headerlink" title="2.2 配置"></a>2.2 配置</h2><p>[root@mail courier-authlib-0.66.1]# cd /usr/local/etc/authlib<br>[root@mail authlib]# vi authmysqlrc<br>MYSQL_SERVER localhost<br>MYSQL_USERNAME extmail<br>MYSQL_PASSWORD extmail<br>MYSQL_SOCKET /var/lib/mysql/mysql.sock<br>MYSQL_PORT 3306<br>MYSQL_OPT 0<br>MYSQL_DATABASE extmail<br>MYSQL_USER_TABLE mailbox<br>MYSQL_CRYPT_PWFIELD password<br>MYSQL_UID_FIELD 1002<br>MYSQL_GID_FIELD 1002<br>MYSQL_LOGIN_FIELD username<br>MYSQL_HOME_FIELD homedir<br>MYSQL_NAME_FIELD name<br>MYSQL_MAILDIR_FIELD maildir<br>MYSQL_QUOTA_FIELD quota<br>MYSQL_SELECT_CLAUSE SELECT username,password,””,uidnumber,gidnumber,\<br>CONCAT(‘/home/domains/‘,homedir), \<br>CONCAT(‘/home/domains/‘,maildir), \<br>quota, \<br>name \<br>FROM mailbox \<br>WHERE username = ‘$(local_part)@$(domain)’<br>[root@mail authlib]# vi authdaemonrc<br>authmodulelist=”authmysql”<br>authmodulelistorig=”authmysql”<br>[root@mail authlib]# ln -s /usr/local/etc/authlib /etc/authlib</p><h2 id="2-3启动"><a href="#2-3启动" class="headerlink" title="2.3启动"></a>2.3启动</h2><p>[root@mail authlib]# /usr/local/sbin/authdaemond start<br>[root@mail authlib]# ps aux|grep authdaemond<br>root 9954 0.0 0.0 4308 440 ? S 15:31 0:00 /usr/local/sbin/courierlogger -pid=/usr/local/var/spool/authdaemon/pid<br>-start /usr/local/libexec/courier-authlib/authdaemond<br>root 9955 0.0 0.2 66500 2720 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemond<br>root 9956 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemond<br>root 9957 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemond<br>root 9958 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemond<br>root 9959 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemond<br>root 9960 0.0 0.0 66500 748 ? S 15:31 0:00 /usr/local/libexec/courier-authlib/authdaemond<br>root 10024 0.0 0.0 112656 980 pts/1 S+ 15:31 0:00 grep –color=auto authdaemond<br>[root@mail authlib]# echo “/usr/local/sbin/authdaemond start” &gt;&gt; /etc/rc.d/rc.local</p><h1 id="3-安装Maildrop"><a href="#3-安装Maildrop" class="headerlink" title="3 安装Maildrop"></a>3 安装Maildrop</h1><h2 id="3-1-安装Courier-Unicode"><a href="#3-1-安装Courier-Unicode" class="headerlink" title="3.1 安装Courier-Unicode"></a>3.1 安装Courier-Unicode</h2><p>[root@mail ~]# cd /usr/local/src<br>[root@mail src]# wget <a href="http://jaist.dl.sourceforge.net/project/courier/courier-unicode/1.1/courier-unicode-1.1.tar.bz2" target="_blank" rel="noopener">http://jaist.dl.sourceforge.net/project/courier/courier-unicode/1.1/courier-unicode-1.1.tar.bz2</a><br>[root@mail src]# tar -jxf courier-unicode-1.1.tar.bz2<br>[root@mail src]# cd courier-unicode-1.1<br>[root@mail courier-unicode-1.1]# ./configure<br>[root@mail courier-unicode-1.1]# make &amp;&amp; make install</p><h2 id="3-2-安装Maildrop"><a href="#3-2-安装Maildrop" class="headerlink" title="3.2 安装Maildrop"></a>3.2 安装Maildrop</h2><p>[root@mail ~]# cd /usr/local/src<br>[root@mail src]# wget <a href="http://jaist.dl.sourceforge.net/project/courier/maildrop/2.7.2/maildrop-2.7.2.tar.bz2" target="_blank" rel="noopener">http://jaist.dl.sourceforge.net/project/courier/maildrop/2.7.2/maildrop-2.7.2.tar.bz2</a><br>[root@mail src]# tar -jxf maildrop-2.7.2.tar.bz2<br>[root@mail src]# cd maildrop-2.7.2<br>[root@mail maildrop-2.7.2]# ./configure –enable-maildirquota –enable-maildrop-uid=1002 –enable-maildrop-gid=1002 –with-trashquota<br>[root@mail maildrop-2.7.2]# make<br>[root@mail maildrop-2.7.2]# make install</p><h2 id="3-3-配置"><a href="#3-3-配置" class="headerlink" title="3.3 配置"></a>3.3 配置</h2><p>[root@mail maildrop-2.7.2]# vi /etc/postfix/master.cf<br>maildrop unix - n n - - pipe<br>flags=DRhu user=vmail argv=/usr/local/bin/maildrop -w 90 -d ${user}@${nexthop} ${recipient} ${user} ${extension} {nexthop}</p><p>#flags前的两个空格一定要保留</p><p>[root@mail maildrop-2.7.2]# vi /etc/postfix/main.cf</p><p>#控制maildrop一次只处理一封邮件<br>maildrop_destination_recipient_limit = 1</p><p>用户vmail和组vmail将惯穿整个邮件系统，一定要记住它们的名称vmail和ID号1002，如果不和本文设置的一样，请在编译和配置时修改成你自己的。 建立到libunicode.so的链接</p><p>ln -s /usr/local/lib/libunicode.so.1 /lib64/</p><p>若在上述路径未找到请使用find / -name libunicode.so 查找</p><h1 id="4-Webmail前台"><a href="#4-Webmail前台" class="headerlink" title="4 Webmail前台"></a>4 Webmail前台</h1><h2 id="4-1-安装"><a href="#4-1-安装" class="headerlink" title="4.1 安装"></a>4.1 安装</h2><p>[root@mail ~]# cd /usr/local/src<br>[root@mail src]# tar -zxvf extmail-1.2.tar.gz<br>[root@mail src]# tar -zxvf extman-1.1.tar.gz<br>[root@mail src]# mkdir /var/www/extsuite<br>[root@mail src]# mv extman-1.1 /var/www/extsuite/extman<br>[root@mail src]# mv extmail-1.2 /var/www/extsuite/extmail</p><h2 id="4-2-配置extmail"><a href="#4-2-配置extmail" class="headerlink" title="4.2 配置extmail"></a>4.2 配置extmail</h2><p>[root@mail src]# cd /var/www/extsuite<br>[root@mail extsuite]# cp extmail/webmail.cf.default extmail/webmail.cf<br>[root@mail extsuite]# vi extmail/webmail.cf<br>SYS_MYSQL_USER = extmail<br>SYS_MYSQL_PASS = extmail<br>SYS_MYSQL_DB = extmail</p><h2 id="4-3-配置extman"><a href="#4-3-配置extman" class="headerlink" title="4.3 配置extman"></a>4.3 配置extman</h2><p>[root@mail extsuite]# mkdir /var/www/extsuite/extman/session<br>[root@mail extsuite]# cp extman/webman.cf.default extman/webman.cf<br>[root@mail extsuite]# vi extman/webman.cf<br>SYS_SESS_DIR = /var/www/extsuite/extman/session/<br>SYS_DEFAULT_UID = 1002<br>SYS_DEFAULT_GID = 1002</p><p>注意：用户和组1002是前一小节中创建的用户和组vmail，注意保持一致。目录session用来保存临时会话信息(由于原来的目录会被centos系统随时清理故需要新建目录)。</p><h2 id="4-4-初始化数据库"><a href="#4-4-初始化数据库" class="headerlink" title="4.4 初始化数据库"></a>4.4 初始化数据库</h2><h3 id="4-4-1设置数据库root账户的密码"><a href="#4-4-1设置数据库root账户的密码" class="headerlink" title="4.4.1设置数据库root账户的密码"></a>4.4.1设置数据库root账户的密码</h3><p>[root@mail extsuite]# service mysqld start<br>[root@mail extsuite]# mysql -uroot<br>mysql&gt;set password for root@localhost=password(‘123456’);<br>mysql&gt;quit</p><h3 id="4-4-2-导入数据库及表结构"><a href="#4-4-2-导入数据库及表结构" class="headerlink" title="4.4.2 导入数据库及表结构"></a>4.4.2 导入数据库及表结构</h3><p>[root@mail extsuite]# mysql -uroot -p123456 &lt; extman/docs/extmail.sql</p><h3 id="4-4-3-修改参数并导入数据"><a href="#4-4-3-修改参数并导入数据" class="headerlink" title="4.4.3 修改参数并导入数据"></a>4.4.3 修改参数并导入数据</h3><p>[root@mail extsuite]# sed -i ‘s/extmail.org/email.com/g’ extman/docs/init.sql<br>[root@mail extsuite]# sed -i ‘s/1000/1002/g’ extman/docs/init.sql<br>[root@mail extsuite]# mysql -uroot -p123456 &lt; /var/www/extsuite/extman/docs/init.sql</p><h3 id="4-4-4-查看数据库确认设置"><a href="#4-4-4-查看数据库确认设置" class="headerlink" title="4.4.4 查看数据库确认设置"></a>4.4.4 查看数据库确认设置</h3><p>[root@mail extsuite]# mysql -uroot -p123456<br>mysql&gt; use extmail;<br>mysql&gt; show tables;<br>+——————-+<br>| Tables_in_extmail |<br>+——————-+<br>| alias |<br>| domain |<br>| domain_manager |<br>| mailbox |<br>| manager |<br>+——————-+<br>mysql&gt; select username,uidnumber,gidnumber from mailbox;<br>+————————-+———–+———–+<br>| username | uidnumber | gidnumber |<br>+————————-+———–+———–+<br>| <a href="mailto:postmaster@email.com" target="_blank" rel="noopener">postmaster@email.com</a> | 1002 | 1002 |<br>+————————-+———–+———–+<br>1 row in set (0.00 sec)<br>mysql&gt; quit</p><h2 id="4-5-配置postfix"><a href="#4-5-配置postfix" class="headerlink" title="4.5 配置postfix"></a>4.5 配置postfix</h2><p>[root@mail extsuite]# cp extman/docs/mysql_*.cf /etc/postfix/<br>[root@mail extsuite]# vi /etc/postfix/main.cf<br># 添加 extmail 配置<br>virtual_alias_maps = mysql:/etc/postfix/mysql_virtual_alias_maps.cf<br>virtual_mailbox_domains = mysql:/etc/postfix/mysql_virtual_domains_maps.cf<br>virtual_mailbox_maps = mysql:/etc/postfix/mysql_virtual_mailbox_maps.cf<br>virtual_transport = maildrop<br>virtual_uid_maps = static:1002<br>virtual_gid_maps = static:1002</p><h2 id="4-6-设置文件权限归属"><a href="#4-6-设置文件权限归属" class="headerlink" title="4.6 设置文件权限归属"></a>4.6 设置文件权限归属</h2><p>[root@mail extsuite]# chown root.root -R extmail extman<br>[root@mail extsuite]# chown -R vmail:vmail extmail/cgi/ extman/cgi/ extman/session</p><h2 id="4-7-配置Apache"><a href="#4-7-配置Apache" class="headerlink" title="4.7 配置Apache"></a>4.7 配置Apache</h2><p>[root@mail extsuite]# vi /etc/httpd/conf.d/extmail.conf<br># VirtualHost for ExtMail Solution<br>NameVirtualHost *:80</p><virtualhost *:80=""><br>ServerName mail.email.com<br>DocumentRoot /var/www/extsuite/extmail/html/<br>ScriptAlias /extmail/cgi/ /var/www/extsuite/extmail/cgi/<br>Alias /extmail /var/www/extsuite/extmail/html/<br>ScriptAlias /extman/cgi/ /var/www/extsuite/extman/cgi/<br>Alias /extman /var/www/extsuite/extman/html/<br># Suexec config<br>SuexecUserGroup vmail vmail<br></virtualhost><h2 id="4-8-重启相关服务并设置自启"><a href="#4-8-重启相关服务并设置自启" class="headerlink" title="4.8 重启相关服务并设置自启"></a>4.8 重启相关服务并设置自启</h2><p>[root@mail extsuite]# service postfix restart<br>[root@mail extsuite]# service httpd restart<br>[root@mail extsuite]# chkconfig postfix on<br>[root@mail extsuite]# chkconfig httpd on</p><h2 id="4-9建立Maildir"><a href="#4-9建立Maildir" class="headerlink" title="4.9建立Maildir"></a>4.9建立Maildir</h2><p>手动建立Maildir</p><p>[root@mail extsuite]# cd extman/tools<br>[root@mail tools]# ./maildirmake.pl /home/domains/email.com/postmaster/Maildir<br>[root@mail tools]# chown -R vmail:vmail /home/domains</p><p>测试authlib认证登陆账号 必须先启动authdaemond进程，否则报Authentication FAILED: Operation not permitted</p><p>[root@mail tools]# /usr/local/sbin/authtest -s login <a href="mailto:postmaster@email.com" target="_blank" rel="noopener">postmaster@email.com</a> extmail<br>Authentication succeeded.<br>Authenticated: <a href="mailto:postmaster@email.com" target="_blank" rel="noopener">postmaster@email.com</a> (uid 1002, gid 1002)<br>Home Directory: /home/domains/email.com/postmaster<br>Maildir: /home/domains/email.com/postmaster/Maildir/<br>Quota: 104857600S<br>Encrypted Password: $1$phz1mRrj$3ok6BjeaoJYWDBsEPZb5C0<br>Cleartext Password: extmail<br>Options: (none)</p><p>输出表明ExtMan的安装正确，数据库也正确导入，courier-authlib能正确连接到mysql数据库</p><h2 id="4-10安装其他依赖包"><a href="#4-10安装其他依赖包" class="headerlink" title="4.10安装其他依赖包"></a>4.10安装其他依赖包</h2><p># yum install -y rrdtool rrdtool-perl<br># yum install -y cpan perl<br># yum install -y perl-YAML perl-Test-Exception perl-Crypt-PasswdMD5 perl-GD perl-CGI perl-Time-HiRes</p><p># yum install perl-Unix-Syslog<br># yum install perl-File-Tail<br># yum install perl-Encode-HanExtra</p><h2 id="4-11启动进程"><a href="#4-11启动进程" class="headerlink" title="4.11启动进程"></a>4.11启动进程</h2><p>[root@mail tools]# cd /var/www/extsuite/extman<br>[root@mail extman]# cp -R addon/mailgraph_ext/ /usr/local/<br>[root@mail extman]# /usr/local/mailgraph_ext/mailgraph-init start<br>Starting mail statistics grapher: mailgraph_ext<br>Starting queue statistics grapher: qmonitor<br>[root@mail courier-unicode-1.1]# ps aux|grep mailgraph_ext<br>root 63848 0.0 0.5 187384 5884 ? SNs 15:53 0:00 /usr/bin/perl -w /usr/local/mailgraph_ext/mailgraph_ext.pl -l /var/log/maillog -d –daemon-pid=/var/run/mailgraph.pid –daemon-rrd=/var/lib<br>root 63850 0.2 0.4 181624 4204 ? SNs 15:53 0:00 /usr/bin/perl -w /usr/local/mailgraph_ext/qmonitor.pl -d –daemon-pid=/var/run/qmonitor.pid –daemon-rrd=/var/lib<br>root 63852 0.0 0.0 103256 852 pts/1 S+ 15:53 0:00 grep mailgraph_ext<br>[root@mail extman]# /var/www/extsuite/extman/daemon/cmdserver -v -d<br>loaded ok<br>[root@mail extman]# ps aux|grep cmdserver<br>root 36597 0.0 0.5 144572 5288 ? Ss 10:23 0:00 /usr/bin/perl -w /var/www/extsuite/extman/daemon/cmdserver -v -d<br>root 36568 0.0 0.0 112656 980 pts/1 S+ 10:21 0:00 grep –color=auto cmdserver<br>[root@mail extman]# echo “/usr/local/mailgraph_ext/mailgraph-init start” &gt;&gt; /etc/rc.d/rc.local<br>[root@mail extman]# echo “/var/www/extsuite/extman/daemon/cmdserver -v -d” &gt;&gt; /etc/rc.d/rc.local<br>进程mailgraph-init用于生成图形日志；进程cmdserver用于生成extman主页的系统信息。</p><h2 id="4-12定时任务"><a href="#4-12定时任务" class="headerlink" title="4.12定时任务"></a>4.12定时任务</h2><p>[root@mail extman]# crontab -e<br>0 4 <em> </em> <em> /var/www/extsuite/extman/tools/expireusers.pl -all <a href="mailto:postmaster@email.com" target="_blank" rel="noopener">postmaster@email.com</a><br>30 4 </em> <em> </em> /var/www/extsuite/extman/tools/reportusage.pl -all /home/domains <a href="mailto:postmaster@email.com" target="_blank" rel="noopener">postmaster@email.com</a><br>[root@mail extman]# service crond restart</p><p>每天4点发送关于用户到期的报告给管理员邮箱； 每天4点半发送邮箱容量使用情况报告给管理员邮箱。</p><h2 id="4-13-测试Web访问"><a href="#4-13-测试Web访问" class="headerlink" title="4.13 测试Web访问"></a>4.13 测试Web访问</h2><p>Extmail 账号：postmaster 密码：extmail 域名：email.com Extman 账号：<a href="mailto:root@email.com" target="_blank" rel="noopener">root@email.com</a> 密码：extmail*123*</p><h2 id="4-14-检查Maildrop"><a href="#4-14-检查Maildrop" class="headerlink" title="4.14 检查Maildrop"></a>4.14 检查Maildrop</h2><p>查看版本信息</p><p>[root@mail extsuite]# maildrop -v<br>maildrop 2.7.2 Copyright 1998-2005 Double Precision, Inc.<br>GDBM/DB extensions enabled.<br>Courier Authentication Library extension enabled. #必须有这条<br>Maildir quota extension are now always enabled.<br>This program is distributed under the terms of the GNU General Public<br>License. See COPYING for additional information.</p><p>测试Maildrop连接</p><p>[root@mail extsuite]# echo “test” | maildrop -V 10 -d <a href="mailto:postmaster@email.com" target="_blank" rel="noopener">postmaster@email.com</a><br>maildrop: authlib: groupid=1002<br>maildrop: authlib: userid=1002<br>maildrop: authlib: <a href="mailto:logname=postmaster@email.com" target="_blank" rel="noopener">logname=postmaster@email.com</a>, home=/home/domains/email.com/postmaster, mail=/home/domains/email.com/postmaster/Maildir/<br>maildrop: Changing to /home/domains/email.com/postmaster<br>Message envelope sender=MAILER-DAEMON<br>maildrop: Attempting .mailfilter<br>maildrop: Delivery complete.</p><h1 id="5-安装Cyrus-SASL使Postfix支持SMTP认证"><a href="#5-安装Cyrus-SASL使Postfix支持SMTP认证" class="headerlink" title="5 安装Cyrus-SASL使Postfix支持SMTP认证"></a>5 安装Cyrus-SASL使Postfix支持SMTP认证</h1><h2 id="5-1检查所需包是否安装"><a href="#5-1检查所需包是否安装" class="headerlink" title="5.1检查所需包是否安装"></a>5.1检查所需包是否安装</h2><p>[root@mail ~]# rpm -aq|grep cyrus-sasl<br>cyrus-sasl-gssapi-2.1.23-13.el6_3.1.x86_64<br>cyrus-sasl-plain-2.1.23-13.el6_3.1.x86_64<br>cyrus-sasl-lib-2.1.23-13.el6_3.1.x86_64<br>cyrus-sasl-2.1.23-13.el6_3.1.x86_64<br>cyrus-sasl-md5-2.1.23-13.el6_3.1.x86_64</p><p>若缺少以上包请使用yum安装</p><h2 id="5-2配置cyrus-sasl"><a href="#5-2配置cyrus-sasl" class="headerlink" title="5.2配置cyrus-sasl"></a>5.2配置cyrus-sasl</h2><p>[root@mail ~]# vi /etc/sasl2/smtpd.conf</p><p>#pwcheck_method: saslauthd</p><p>#mech_list: plain login<br>pwcheck_method: authdaemond<br>log_level: 3<br>mech_list: PLAIN LOGIN<br>authdaemond_path:/usr/local/var/spool/authdaemon/socket<br>[root@mail ~]# chmod 755 /usr/local/var/spool/authdaemon</p><h2 id="5-3配置postfix"><a href="#5-3配置postfix" class="headerlink" title="5.3配置postfix"></a>5.3配置postfix</h2><p>[root@mail ~]# vi /etc/postfix/main.cf<br># SMTP 收件方限制<br>smtpd_recipient_restrictions =<br>permit_mynetworks,<br>permit_sasl_authenticated,<br>reject_non_fqdn_hostname,<br>reject_non_fqdn_sender,<br>reject_non_fqdn_recipient,<br>reject_unauth_destination,<br>reject_unauth_pipelining,<br>reject_invalid_hostname<br># SMTP 发件方限制<br>smtpd_sender_restrictions =<br>permit_mynetworks,<br>reject_sender_login_mismatch,<br>reject_authenticated_sender_login_mismatch,<br>reject_unauthenticated_sender_login_mismatch<br># SMTP 用户登陆限制<br>smtpd_sender_login_maps =<br>mysql:/etc/postfix/mysql_virtual_sender_maps.cf,<br>mysql:/etc/postfix/mysql_virtual_alias_maps.cf<br># SMTP 认证配置<br>broken_sasl_auth_clients = yes<br>smtpd_sasl_auth_enable = yes<br>smtpd_sasl_local_domain = $myhostname<br>smtpd_sasl_security_options = noanonymous</p><p>重启Postfix [root@mail ~]# service postfix restart</p><h2 id="5-4测试SMTP认证"><a href="#5-4测试SMTP认证" class="headerlink" title="5.4测试SMTP认证"></a>5.4测试SMTP认证</h2><p>获得用户名和密码的Base64编码</p><p>[root@mail ~]# perl -e ‘use MIME::Base64; print encode_base64(“postmaster\@email.com”)’<br>cG9zdG1hc3RlclxAZW1haWwuY29t<br>[root@mail ~]# perl -e ‘use MIME::Base64; print encode_base64(“extmail”)’<br>ZXh0bWFpbA==</p><p>使用telnet测试</p><p>[root@mail ~]# telnet localhost 25<br>Trying ::1…<br>Connected to localhost.<br>Escape character is ‘^]‘.<br>220 mail.email.com ESMTP Postfix - by email.com<br>ehlo localhost #输入hello内容<br>250-mail.email.com<br>250-PIPELINING<br>250-SIZE 10485760<br>250-VRFY<br>250-ETRN<br>250-AUTH PLAIN LOGIN #显示认证登陆表示Postfix成功<br>250-AUTH=PLAIN LOGIN #调用Cyrus-SASL进行SMTP认证<br>250-ENHANCEDSTATUSCODES<br>250-8BITMIME<br>250 DSN<br>auth login #输入认证登陆命令<br>334 VXNlcm5hbWU6<br>cG9zdG1hc3RlclxAZW1haWwuY29t #输入账号的Base64编码<br>334 UGFzc3dvcmQ6<br>ZXh0bWFpbA== #输入密码的Base64编码<br>235 2.7.0 Authentication successful #显示认证成功<br>quit<br>221 2.0.0 Bye<br>Connection closed by foreign host.</p><p>以上信息表示postfix成功使用并通过SMTP认证（cyrus-sasl）</p><h1 id="6-实现POP3、IMAP功能"><a href="#6-实现POP3、IMAP功能" class="headerlink" title="6 实现POP3、IMAP功能"></a>6 实现POP3、IMAP功能</h1><h2 id="6-1-安装Courier-IMAP"><a href="#6-1-安装Courier-IMAP" class="headerlink" title="6.1 安装Courier-IMAP"></a>6.1 安装Courier-IMAP</h2><p>[root@mail ~]# cd /usr/local/src<br>[root@mail src]# wget <a href="http://ncu.dl.sourceforge.net/project/courier/imap/4.15.1/courier-imap-4.15.1.tar.bz2" target="_blank" rel="noopener">http://ncu.dl.sourceforge.net/project/courier/imap/4.15.1/courier-imap-4.15.1.tar.bz2</a><br>[root@mail src]# tar -jxf courier-imap-4.15.1.tar.bz2<br>[root@mail src]# cd courier-imap-4.15.1<br>[root@mail courier-imap-4.15.1]# ./configure –enable-workarounds-for-imap-client-bugs –with-authchangepwdir –enable-unicode –with-trashquota –disable-root-check<br>[root@mail courier-imap-4.15.1]# make<br>[root@mail courier-imap-4.15.1]# make install<br>[root@mail courier-imap-4.15.1]# make install-configure</p><h2 id="6-2-启动imap"><a href="#6-2-启动imap" class="headerlink" title="6.2 启动imap"></a>6.2 启动imap</h2><p>[root@mail courier-imap-4.15.1]# cd /usr/lib/courier-imap/<br>[root@mail courier-imap]# /usr/lib/courier-imap/libexec/imapd.rc start<br>[root@mail courier-imap]# echo “/usr/lib/courier-imap/libexec/imapd.rc start” &gt;&gt; /etc/rc.local<br>[root@mail courier-imap]# ps aux|grep imapd<br>root 46134 0.0 0.0 4068 340 ? S 16:41 0:00 /usr/local/sbin/courierlogger -pid=/var/run/imapd.pid -start -name=imapd /usr/lib/courier-imap/libexec/couriertcpd -address=0 -maxprocs=40 -maxperip=4 -nodnslookup -noidentlookup 143 /usr/lib/courier-imap/sbin/imaplogin /usr/lib/courier-imap/bin/imapd Maildir<br>root 46135 0.1 0.0 8280 636 ? S 16:41 0:00 /usr/lib/courier-imap/libexec/couriertcpd -address=0 -maxprocs=40 -maxperip=4 -nodnslookup -noidentlookup 143 /usr/lib/courier-imap/sbin/imaplogin /usr/lib/courier-imap/bin/imapd Maildir<br>root 46137 0.0 0.0 103256 848 pts/1 S+ 16:41 0:00 grep imapd<br>[root@mail courier-imap]# netstat -tnlp|grep 143<br>tcp6 0 0 :::143 :::* LISTEN 32666/couriertcpd</p><h2 id="6-3-启动pop3"><a href="#6-3-启动pop3" class="headerlink" title="6.3 启动pop3"></a>6.3 启动pop3</h2><p>[root@mail courier-imap]# /usr/lib/courier-imap/libexec/pop3d.rc start<br>[root@mail courier-imap]# echo “/usr/lib/courier-imap/libexec/pop3d.rc start” &gt;&gt; /etc/rc.local<br>[root@mail courier-imap]# ps aux|grep pop3d<br>root 46149 0.0 0.0 4068 344 ? S 16:42 0:00 /usr/local/sbin/courierlogger -pid=/var/run/pop3d.pid -start -name=pop3d /usr/lib/courier-imap/libexec/couriertcpd -address=0 -maxprocs=40 -maxperip=4 -nodnslookup -noidentlookup 110 /usr/lib/courier-imap/sbin/pop3login /usr/lib/courier-imap/bin/pop3d Maildir<br>root 46150 0.0 0.0 8280 632 ? S 16:42 0:00 /usr/lib/courier-imap/libexec/couriertcpd -address=0 -maxprocs=40 -maxperip=4 -nodnslookup -noidentlookup 110 /usr/lib/courier-imap/sbin/pop3login /usr/lib/courier-imap/bin/pop3d Maildir<br>root 46155 0.0 0.0 103256 848 pts/1 S+ 16:42 0:00 grep pop3d<br>[root@mail courier-imap]# netstat -tnlp|grep 110<br>tcp6 0 0 :::110 :::* LISTEN 32761/couriertcpd</p><h2 id="6-4-设置imapd、pop3为启用状态"><a href="#6-4-设置imapd、pop3为启用状态" class="headerlink" title="6.4 设置imapd、pop3为启用状态"></a>6.4 设置imapd、pop3为启用状态</h2><p>[root@mail courier-imap]# sed -i ‘s/IMAPDSTART=NO/IMAPDSTART=YES/g’ etc/imapd<br>[root@mail courier-imap]# sed -i ‘s/POP3DSTART=NO/POP3DSTART=YES/g’ etc/pop3d</p><h2 id="6-5-设置防火墙策略"><a href="#6-5-设置防火墙策略" class="headerlink" title="6.5 设置防火墙策略"></a>6.5 设置防火墙策略</h2><p>[root@mail ~]# iptables -I INPUT -p tcp -m multiport –dport 110,143 -j ACCEPT<br>[root@mail ~]# service iptables save</p><h2 id="6-6-测试IMAP连接"><a href="#6-6-测试IMAP连接" class="headerlink" title="6.6 测试IMAP连接"></a>6.6 测试IMAP连接</h2><p>[root@mail courier-imap]# telnet localhost 110<br>Trying ::1…<br>Connected to localhost.<br>Escape character is ‘^]‘.<br>+OK Hello there.<br>user <a href="mailto:postmaster@email.com" target="_blank" rel="noopener">postmaster@email.com</a> #输入用户账号<br>+OK Password required.<br>pass extmail #输入用户密码<br>+OK logged in.<br>list #显示邮件列表<br>+OK POP3 clients that break here, they violate STD53.<br>1 6<br>2 716<br>3 923<br>4 1197<br>.<br>quit #退出<br>+OK Bye-bye.<br>Connection closed by foreign host.</p><h2 id="6-7-测试POP3连接"><a href="#6-7-测试POP3连接" class="headerlink" title="6.7 测试POP3连接"></a>6.7 测试POP3连接</h2><p>[root@mail courier-imap]# telnet localhost 143<br>Trying ::1…<br>Connected to localhost.<br>Escape character is ‘^]‘.<br>* OK [CAPABILITY IMAP4rev1 UIDPLUS CHILDREN NAMESPACE<br>THREAD=ORDEREDSUBJECT THREAD=REFERENCES SORT QUOTA<br>IDLE ACL ACL2=UNION STARTTLS] Courier-IMAP ready.<br>Copyright 1998-2011 Double Precision, Inc.<br>See COPYING for distribution information.<br>tag login <a href="mailto:postmaster@email.com" target="_blank" rel="noopener">postmaster@email.com</a> extmail #输入登陆账号、密码<br>tag OK LOGIN Ok. #显示登陆成功<br>tag logout #退出<br>* BYE Courier-IMAP server shutting down<br>tag OK LOGOUT completed<br>Connection closed by foreign host.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-参考资料&quot;&gt;&lt;a href=&quot;#1-参考资料&quot; class=&quot;headerlink&quot; title=&quot;-1 参考资料&quot;&gt;&lt;/a&gt;-1 参考资料&lt;/h1&gt;&lt;p&gt;本资料主要参考一下资料整理而成，实现了最基本的WebMail以及IMAP和POP3功能。若要使用更多功能
      
    
    </summary>
    
      <category term="extmail" scheme="http://www.wangxinlei.cn/categories/extmail/"/>
    
    
  </entry>
  
  <entry>
    <title>在空ASP.NET MVC网站中使用Bundle</title>
    <link href="http://www.wangxinlei.cn/2016/09/26/using-bundle-in-empty-asp-net-mvc-project/"/>
    <id>http://www.wangxinlei.cn/2016/09/26/using-bundle-in-empty-asp-net-mvc-project/</id>
    <published>2016-09-26T05:46:34.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-在NuGet管理器中"><a href="#1-在NuGet管理器中" class="headerlink" title="1.在NuGet管理器中"></a>1.在NuGet管理器中</h1><p>添加包 <strong>Microsoft.AspNet.Web.Optimization</strong></p><h1 id="2-在Global-asax中"><a href="#2-在Global-asax中" class="headerlink" title="2.在Global.asax中"></a>2.在Global.asax中</h1><p>using System.Web.Optimization;</p><p>并在protected void Application_Start()方法中添加语句</p><p>BundleConfig.RegisterBundles(BundleTable.Bundles);</p><h1 id="3-在Views文件夹下的Web-config中"><a href="#3-在Views文件夹下的Web-config中" class="headerlink" title=" 3.在Views文件夹下的Web.config中"></a> 3.在Views文件夹下的Web.config中</h1><p>在configuration节点的system.web.webPages.razor节点的pages pageBaseType=”System.Web.Mvc.WebViewPage”节点的namespaces节点添加</p><add namespace="System.Web.Optimization"><h1 id="4-在App-Start文件夹下创建类BundleConfig-cs"><a href="#4-在App-Start文件夹下创建类BundleConfig-cs" class="headerlink" title=" 4.在App_Start文件夹下创建类BundleConfig.cs"></a> 4.在App_Start文件夹下创建类BundleConfig.cs</h1><p>using System.Web;<br>using System.Web.Optimization;</p><p>namespace ProjectName<br>{<br>    public class BundleConfig<br>    {<br>        // 有关绑定的详细信息，请访问 <a href="http://go.microsoft.com/fwlink/?LinkId=301862" target="_blank" rel="noopener">http://go.microsoft.com/fwlink/?LinkId=301862</a><br>        public static void RegisterBundles(BundleCollection bundles)<br>        {<br>            bundles.Add(new ScriptBundle(“~/bundles/jquery”).Include(<br>                        “~/Scripts/jquery-{version}.js”));</p><pre><code>        bundles.Add(new ScriptBundle(&quot;~/bundles/jqueryval&quot;).Include(                    &quot;~/Scripts/jquery.validate*&quot;));        // 使用要用于开发和学习的 Modernizr 的开发版本。然后，当你做好        // 生产准备时，请使用 http://modernizr.com 上的生成工具来仅选择所需的测试。        bundles.Add(new ScriptBundle(&quot;~/bundles/modernizr&quot;).Include(                    &quot;~/Scripts/modernizr-*&quot;));        bundles.Add(new ScriptBundle(&quot;~/bundles/bootstrap&quot;).Include(                  &quot;~/Scripts/bootstrap.js&quot;,                  &quot;~/Scripts/respond.js&quot;));        bundles.Add(new StyleBundle(&quot;~/Content/css&quot;).Include(                  &quot;~/Content/bootstrap.css&quot;,                  &quot;~/Content/site.css&quot;));    }}</code></pre><p>}</p><h1 id="5-在视图中引用"><a href="#5-在视图中引用" class="headerlink" title=" 5.在视图中引用"></a> 5.在视图中引用</h1><p>@Styles.Render(“~/Content/css”)<br>@Scripts.Render(“~/bundles/modernizr”)<br>@Scripts.Render(“~/bundles/jquery”)<br>@Scripts.Render(“~/bundles/bootstrap”)</p></add>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-在NuGet管理器中&quot;&gt;&lt;a href=&quot;#1-在NuGet管理器中&quot; class=&quot;headerlink&quot; title=&quot;1.在NuGet管理器中&quot;&gt;&lt;/a&gt;1.在NuGet管理器中&lt;/h1&gt;&lt;p&gt;添加包 &lt;strong&gt;Microsoft.AspNet.W
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>ASP.NET MVC实现灵活的角色控制功能</title>
    <link href="http://www.wangxinlei.cn/2016/09/08/asp-net-mvc-roles/"/>
    <id>http://www.wangxinlei.cn/2016/09/08/asp-net-mvc-roles/</id>
    <published>2016-09-08T02:18:37.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>采用ASP.NET MVC+Entity Framework</p><h1 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h1><p>public class User<br>    {<br>        public string Username { get; set; }<br>        public string Password { get; set; }<br>        public virtual Power Power { get; set; }<br>    }</p><p> public  class Power<br>    {<br>        public bool P_Admin { get; set; }<br>        public bool P_Event { get; set; }<br>        //此处可添加更多权限<br>        //重写tostring方法返回拥有的权限<br>        public override string ToString()<br>        {<br>            Type type = this.GetType();<br>            System.Reflection.PropertyInfo[] ps = type.GetProperties();<br>            String roles=””;<br>            foreach (PropertyInfo i in ps)<br>            {<br>                if (i.PropertyType == typeof(bool))//只获取bool类型的属性<br>                {<br>                    var obj = i.GetValue(this, null);<br>                    if ((bool)obj)<br>                    {<br>                        roles += i.Name+”,”;//值为true的属性加入到权限中以逗号分隔<br>                    }<br>                }<br>            }<br>            roles=roles.Substring(0, roles.Length - 1);<br>            return roles;<br>        }</p><pre><code>}</code></pre><h1 id="View"><a href="#View" class="headerlink" title=" View"></a> View</h1><p>@model  ProjectName.Models.User<br>@{<br>    ViewBag.Title = “login”;<br>}</p><div class="row clearfix"><br>    <div class="col-md-4 column"><br>    </div><br>    <div class="col-md-4 column"><br>        <h2>登陆</h2><br>        @Html.ValidationMessage(“CredentialError”, new { style = “color:red;” })<br>        @using (Html.BeginForm(“DoLogin”, “Home”, FormMethod.Post, new { @class = “” }))<br>            {<br><br>            @Html.TextBoxFor(x =&gt; x.Username, new { placeholder = “用户名”, @class = “form-control” })<br>            @Html.ValidationMessageFor(x =&gt; x.Username)<br>            <br><br>            @Html.PasswordFor(x =&gt; x.Password, new { placeholder = “密码”, @class = “form-control” })<br>            <br><br>                <input type="submit" class="btn btn-primary" name="BtnSubmi" value="登陆"><br>        }<br>    </div><br>    <div class="col-md-4 column"><br>    </div><br></div><h1 id="Controllers"><a href="#Controllers" class="headerlink" title=" Controllers"></a> Controllers</h1><p>public class HomeController : Controller<br>    {<br>        private Modeldb db = new Modeldb();<br>        // GET: Home<br>        public ActionResult Index()<br>        {<br>            return View();<br>        }</p><pre><code>    public ActionResult Login()    {        return View();    }    \[HttpPost\]    public ActionResult DoLogin(User u)    {        var user = db.User.Where(a =&gt; a.Username == u.Userame).Select(a =&gt; a);        if (user.Count() &gt; 0 &amp;&amp; user.First().Password== u.Password)        {            FormsAuthenticationTicket ticket = new FormsAuthenticationTicket                (                    1,                    user.First().Username,                    DateTime.Now,                    DateTime.Now.AddMinutes(20),                    true,                    user.First().Power.ToString()                );            var cookie = new HttpCookie(FormsAuthentication.FormsCookieName, FormsAuthentication.Encrypt(ticket));            cookie.HttpOnly = true;            HttpContext.Response.Cookies.Add(cookie);            return RedirectToAction(&quot;Index&quot;, &quot;Admin&quot;);        }        else        {            ModelState.AddModelError(&quot;CredentialError&quot;, &quot;用户名或密码不正确&quot;);            return View(&quot;Login&quot;, u);        }    }    public ActionResult Logout()    {        FormsAuthentication.SignOut();        return RedirectToAction(&quot;Login&quot;);    }}</code></pre><h1 id="自定义RoleProvider"><a href="#自定义RoleProvider" class="headerlink" title="自定义RoleProvider"></a>自定义RoleProvider</h1><p>继承RoleProvider只需给出GetRolesForUser的具体实现即可</p><p>namespace ProjectName.utils<br>{<br>    public class CustomRoleProvider: RoleProvider<br>    {<br>        public override string ApplicationName<br>        {<br>            get<br>            {<br>                throw new NotImplementedException();<br>            }</p><pre><code>        set        {            throw new NotImplementedException();        }    }    public override void AddUsersToRoles(string\[\] usernames, string\[\] roleNames)    {        throw new NotImplementedException();    }    public override void CreateRole(string roleName)    {        throw new NotImplementedException();    }    public override bool DeleteRole(string roleName, bool throwOnPopulatedRole)    {        throw new NotImplementedException();    }    public override string\[\] FindUsersInRole(string roleName, string usernameToMatch)    {        throw new NotImplementedException();    }    public override string\[\] GetAllRoles()    {        throw new NotImplementedException();    }    public override string\[\] GetRolesForUser(string username)    {        var cookie = HttpContext.Current.Request.Cookies\[FormsAuthentication.FormsCookieName\];        var ticket = FormsAuthentication.Decrypt(cookie.Value);        string role = ticket.UserData;        return role.Split(&apos;,&apos;);    }    public override string\[\] GetUsersInRole(string roleName)    {        throw new NotImplementedException();    }    public override bool IsUserInRole(string username, string roleName)    {        throw new NotImplementedException();    }    public override void RemoveUsersFromRoles(string\[\] usernames, string\[\] roleNames)    {        throw new NotImplementedException();    }    public override bool RoleExists(string roleName)    {        throw new NotImplementedException();    }}</code></pre><p>}</p><h1 id="配置Web-config"><a href="#配置Web-config" class="headerlink" title="配置Web.config"></a>配置Web.config</h1><p>&lt;system.web&gt;<br>    <compilation debug="true" targetframework="4.5"><br>    <httpruntime targetframework="4.5"><br>    <authentication mode="Forms"><br>      <forms loginurl="~/Home/Login"></forms><br>    </authentication><br>    <rolemanager enabled="true" defaultprovider="CustomRoleProvid"><br>      <providers><br>        <clear><br>        <add name="CustomRoleProvid" type="ProjectName.utils.CustomRoleProvider"><br>      </add></clear></providers><br>    </rolemanager><br>  &lt;/system.web&gt;</httpruntime></compilation></p><p>使用方式 为相应的Controller或ActionResult添加过滤器 允许匿名访问：[AllowAnonymous] 登陆访问：[Authorize] 限制权限访问：[Authorize(Roles =”Admin”)]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;采用ASP.NET MVC+Entity Framework&lt;/p&gt;
&lt;h1 id=&quot;Model&quot;&gt;&lt;a href=&quot;#Model&quot; class=&quot;headerlink&quot; title=&quot;Model&quot;&gt;&lt;/a&gt;Model&lt;/h1&gt;&lt;p&gt;public class User&lt;br
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>ASP.NET MVC 创建最简单的CRUD程序</title>
    <link href="http://www.wangxinlei.cn/2016/09/04/asp-net-mvc-crud-simple/"/>
    <id>http://www.wangxinlei.cn/2016/09/04/asp-net-mvc-crud-simple/</id>
    <published>2016-09-04T01:11:54.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h1><h2 id="User-cs"><a href="#User-cs" class="headerlink" title="User.cs"></a>User.cs</h2><p>[Table(“User”)]<br>    public partial class User<br>    {<br>        [Key]<br>        public int UID { get; set; }</p><pre><code>    \[Required\]    \[StringLength(10)\]    public string username { get; set; }    \[Required\]    \[StringLength(10)\]    public string password { get; set; }}</code></pre><h2 id="ModelUser-cs"><a href="#ModelUser-cs" class="headerlink" title="ModelUser.cs"></a>ModelUser.cs</h2><p>public partial class ModelUser : DbContext<br>    {<br>        public ModelUser()<br>            : base(“name=ModelUser”)//参数为Web.config中连接字符串的标识<br>        {<br>        }</p><pre><code>    public virtual DbSet&lt;User&gt; User { get; set; }    protected override void OnModelCreating(DbModelBuilder modelBuilder)    {        modelBuilder.Entity&lt;User&gt;()            .Property(e =&gt; e.username)            .IsFixedLength();        modelBuilder.Entity&lt;User&gt;()            .Property(e =&gt; e.password)            .IsFixedLength();    }}</code></pre><h1 id="View"><a href="#View" class="headerlink" title="View"></a>View</h1><h2 id="Index-cshtml"><a href="#Index-cshtml" class="headerlink" title="Index.cshtml"></a>Index.cshtml</h2><p>@model IEnumerable&lt;UsersCRUD.Models.User&gt;</p><p>@{<br>    ViewBag.Title = “Index”;<br>}</p><h2>Index</h2><p><br>    @Html.ActionLink(“Create New”, “Create”)<br></p><br><table class="table"><br>    <tr><br>        <th><br>            @Html.DisplayNameFor(model =&gt; model.username)<br>        </th><br>        <th><br>            @Html.DisplayNameFor(model =&gt; model.password)<br>        </th><br>        <th></th><br>    </tr><br><br>@foreach (var item in Model) {<br>    <tr><br>        <td><br>            @Html.DisplayFor(modelItem =&gt; item.username)<br>        </td><br>        <td><br>            @Html.DisplayFor(modelItem =&gt; item.password)<br>        </td><br>        <td><br>            @Html.ActionLink(“Edit”, “Edit”, new { id=item.UID }) |<br>            @Html.ActionLink(“Details”, “Details”, new { id=item.UID }) |<br>            @Html.ActionLink(“Delete”, “Delete”, new { id=item.UID })<br>        </td><br>    </tr><br>}<br><br></table><br><br> Create.cshtml<br>————–<br><br>@model UsersCRUD.Models.User<br><br>@{<br>    ViewBag.Title = “Create”;<br>}<br><br><h2>Create</h2><br><br><br>@using (Html.BeginForm())<br>{<br>    @Html.AntiForgeryToken()<br><br>    <div class="form-horizontal"><br>        <h4>User</h4><br>        <hr><br>        @Html.ValidationSummary(true, “”, new { @class = “text-danger” })<br>        <div class="form-group"><br>            @Html.LabelFor(model =&gt; model.username, htmlAttributes: new { @class = “control-label col-md-2” })<br>            <div class="col-md-10"><br>                @Html.EditorFor(model =&gt; model.username, new { htmlAttributes = new { @class = “form-control” } })<br>                @Html.ValidationMessageFor(model =&gt; model.username, “”, new { @class = “text-danger” })<br>            </div><br>        </div><br><br>        <div class="form-group"><br>            @Html.LabelFor(model =&gt; model.password, htmlAttributes: new { @class = “control-label col-md-2” })<br>            <div class="col-md-10"><br>                @Html.EditorFor(model =&gt; model.password, new { htmlAttributes = new { @class = “form-control” } })<br>                @Html.ValidationMessageFor(model =&gt; model.password, “”, new { @class = “text-danger” })<br>            </div><br>        </div><br><br>        <div class="form-group"><br>            <div class="col-md-offset-2 col-md-10"><br>                <input type="submit" value="Create" class="btn btn-default"><br>            </div><br>        </div><br>    </div><br>}<br><br><div><br>    @Html.ActionLink(“Back to List”, “Index”)<br></div><br><br><script src="~/Scripts/jquery-1.10.2.min.js"></script><br><script src="~/Scripts/jquery.validate.min.js"></script><br><script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script><br><br> Delete.cshtml<br>————–<br><br>@model UsersCRUD.Models.User<br><br>@{<br>    ViewBag.Title = “Delete”;<br>}<br><br><h2>Delete</h2><br><br><h3>Are you sure you want to delete this?</h3><br><div><br>    <h4>User</h4><br>    <hr><br>    <dl class="dl-horizontal"><br>        <dt><br>            @Html.DisplayNameFor(model =&gt; model.username)<br>        </dt><br><br>        <dd><br>            @Html.DisplayFor(model =&gt; model.username)<br>        </dd><br><br>        <dt><br>            @Html.DisplayNameFor(model =&gt; model.password)<br>        </dt><br><br>        <dd><br>            @Html.DisplayFor(model =&gt; model.password)<br>        </dd><br><br>    </dl><br><br>    @using (Html.BeginForm()) {<br>        @Html.AntiForgeryToken()<br><br>        <div class="form-actions no-color"><br>            <input type="submit" value="Delete" class="btn btn-default"> |<br>            @Html.ActionLink(“Back to List”, “Index”)<br>        </div><br>    }<br></div><br><br> Details.cshtml<br>—————<br><br>@model UsersCRUD.Models.User<br><br>@{<br>    ViewBag.Title = “Details”;<br>}<br><br><h2>Details</h2><br><br><div><br>    <h4>User</h4><br>    <hr><br>    <dl class="dl-horizontal"><br>        <dt><br>            @Html.DisplayNameFor(model =&gt; model.username)<br>        </dt><br><br>        <dd><br>            @Html.DisplayFor(model =&gt; model.username)<br>        </dd><br><br>        <dt><br>            @Html.DisplayNameFor(model =&gt; model.password)<br>        </dt><br><br>        <dd><br>            @Html.DisplayFor(model =&gt; model.password)<br>        </dd><br><br>    </dl><br></div><br><p><br>    @Html.ActionLink(“Edit”, “Edit”, new { id = Model.UID }) |<br>    @Html.ActionLink(“Back to List”, “Index”)<br></p><h2 id="Edit-cshtml"><a href="#Edit-cshtml" class="headerlink" title=" Edit.cshtml"></a> Edit.cshtml</h2><p>@model UsersCRUD.Models.User</p><p>@{<br>    ViewBag.Title = “Edit”;<br>}</p><h2>Edit</h2><p>@using (Html.BeginForm())<br>{<br>    @Html.AntiForgeryToken()</p><pre><code>&lt;div class=&quot;form-horizontal&quot;&gt;    &lt;h4&gt;User&lt;/h4&gt;    &lt;hr /&gt;    @Html.ValidationSummary(true, &quot;&quot;, new { @class = &quot;text-danger&quot; })    @Html.HiddenFor(model =&gt; model.UID)    &lt;div class=&quot;form-group&quot;&gt;        @Html.LabelFor(model =&gt; model.username, htmlAttributes: new { @class = &quot;control-label col-md-2&quot; })        &lt;div class=&quot;col-md-10&quot;&gt;            @Html.EditorFor(model =&gt; model.username, new { htmlAttributes = new { @class = &quot;form-control&quot; } })            @Html.ValidationMessageFor(model =&gt; model.username, &quot;&quot;, new { @class = &quot;text-danger&quot; })        &lt;/div&gt;    &lt;/div&gt;    &lt;div class=&quot;form-group&quot;&gt;        @Html.LabelFor(model =&gt; model.password, htmlAttributes: new { @class = &quot;control-label col-md-2&quot; })        &lt;div class=&quot;col-md-10&quot;&gt;            @Html.EditorFor(model =&gt; model.password, new { htmlAttributes = new { @class = &quot;form-control&quot; } })            @Html.ValidationMessageFor(model =&gt; model.password, &quot;&quot;, new { @class = &quot;text-danger&quot; })        &lt;/div&gt;    &lt;/div&gt;    &lt;div class=&quot;form-group&quot;&gt;        &lt;div class=&quot;col-md-offset-2 col-md-10&quot;&gt;            &lt;input type=&quot;submit&quot; value=&quot;Save&quot; class=&quot;btn btn-default&quot; /&gt;        &lt;/div&gt;    &lt;/div&gt;&lt;/div&gt;</code></pre><p>}</p><div><br>    @Html.ActionLink(“Back to List”, “Index”)<br></div><script src="~/Scripts/jquery-1.10.2.min.js"></script><script src="~/Scripts/jquery.validate.min.js"></script><script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script><h1 id="Conroller"><a href="#Conroller" class="headerlink" title=" Conroller"></a> Conroller</h1><p>public class UsersController : Controller<br>    {<br>        private ModelUser db = new ModelUser();</p><pre><code>    // GET: Users    public ActionResult Index()    {        return View(db.User.ToList());    }    // GET: Users/Details/5    public ActionResult Details(int? id)    {        if (id == null)        {            return new HttpStatusCodeResult(HttpStatusCode.BadRequest);        }        User user = db.User.Find(id);        if (user == null)        {            return HttpNotFound();        }        return View(user);    }    // GET: Users/Create    public ActionResult Create()    {        return View();    }    // POST: Users/Create    // 为了防止“过多发布”攻击，请启用要绑定到的特定属性，有关     // 详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=317598。    \[HttpPost\]    \[ValidateAntiForgeryToken\]    public ActionResult Create(\[Bind(Include = &quot;UID,username,password&quot;)\] User user)    {        if (ModelState.IsValid)        {            db.User.Add(user);            db.SaveChanges();            return RedirectToAction(&quot;Index&quot;);        }        return View(user);    }    // GET: Users/Edit/5    public ActionResult Edit(int? id)    {        if (id == null)        {            return new HttpStatusCodeResult(HttpStatusCode.BadRequest);        }        User user = db.User.Find(id);        if (user == null)        {            return HttpNotFound();        }        return View(user);    }    // POST: Users/Edit/5    // 为了防止“过多发布”攻击，请启用要绑定到的特定属性，有关     // 详细信息，请参阅 http://go.microsoft.com/fwlink/?LinkId=317598。    \[HttpPost\]    \[ValidateAntiForgeryToken\]    public ActionResult Edit(\[Bind(Include = &quot;UID,username,password&quot;)\] User user)    {        if (ModelState.IsValid)        {            db.Entry(user).State = EntityState.Modified;            db.SaveChanges();            return RedirectToAction(&quot;Index&quot;);        }        return View(user);    }    // GET: Users/Delete/5    public ActionResult Delete(int? id)    {        if (id == null)        {            return new HttpStatusCodeResult(HttpStatusCode.BadRequest);        }        User user = db.User.Find(id);        if (user == null)        {            return HttpNotFound();        }        return View(user);    }    // POST: Users/Delete/5    \[HttpPost, ActionName(&quot;Delete&quot;)\]    \[ValidateAntiForgeryToken\]    public ActionResult DeleteConfirmed(int id)    {        User user = db.User.Find(id);        db.User.Remove(user);        db.SaveChanges();        return RedirectToAction(&quot;Index&quot;);    }    protected override void Dispose(bool disposing)    {        if (disposing)        {            db.Dispose();        }        base.Dispose(disposing);    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Model&quot;&gt;&lt;a href=&quot;#Model&quot; class=&quot;headerlink&quot; title=&quot;Model&quot;&gt;&lt;/a&gt;Model&lt;/h1&gt;&lt;h2 id=&quot;User-cs&quot;&gt;&lt;a href=&quot;#User-cs&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>ASP.NET MVC 通过向导创建CRUD程序</title>
    <link href="http://www.wangxinlei.cn/2016/09/02/asp-net-mvc-crud/"/>
    <id>http://www.wangxinlei.cn/2016/09/02/asp-net-mvc-crud/</id>
    <published>2016-09-02T07:34:05.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>1.首先创建好数据库和表 2.打开Visual Studio(以2015Update3版本为例) 3.创建ASP.NET Web应用程序 4.选择Empty模板并勾选MVC引用 5.在Models文件夹添加项 6.选择数据分组中的ASP.NET实体数据模型 7.选择来自数据库的Code First 8.配置好数据连接，<strong>一定要勾选将Web.Config中的设置另存为</strong> 9.勾选需要的表并完成向导 10.<strong>非常重要：生成解决方案</strong> 11.在Controllers文件夹上添加新搭建基架的项目 12.选择包含视图的MVC5控制器（使用Entity Framework） 13.选择相应模型类与数据上下文类并选择添加 至此，一个包含CRUD操作的ASP.NET MVC应用程序已经创建完成</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.首先创建好数据库和表 2.打开Visual Studio(以2015Update3版本为例) 3.创建ASP.NET Web应用程序 4.选择Empty模板并勾选MVC引用 5.在Models文件夹添加项 6.选择数据分组中的ASP.NET实体数据模型 7.选择来自数据
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>ASP.NET MVC有用户角色功能的登陆验证</title>
    <link href="http://www.wangxinlei.cn/2016/09/02/asp-net-mvc-authwithrole/"/>
    <id>http://www.wangxinlei.cn/2016/09/02/asp-net-mvc-authwithrole/</id>
    <published>2016-09-02T05:59:41.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h1><p>public enum UserStatus<br>    {<br>        AuthenticatedAdmin,<br>        AuthentucatedUser,<br>        NonAuthenticatedUser<br>    }</p><p>public class UserDetails<br>    {<br>        [StringLength(7, MinimumLength = 2, ErrorMessage = “UserName length should be between 2 and 7”)]<br>        public string UserName { get; set; }<br>        public string Password { get; set; }<br>    }</p><p>public class UserBusinessLayer<br>        {<br>            public UserStatus GetUserValidity(UserDetails u)<br>            {<br>                if (u.UserName == “Admin” &amp;&amp; u.Password == “Admin”)<br>                {<br>                    return UserStatus.AuthenticatedAdmin;<br>                }<br>                else if (u.UserName == “Sukesh” &amp;&amp; u.Password == “Sukesh”)<br>                {<br>                    return UserStatus.AuthentucatedUser;<br>                }<br>                else<br>                {<br>                    return UserStatus.NonAuthenticatedUser;<br>                }<br>            }<br>        }</p><h1 id="View"><a href="#View" class="headerlink" title=" View"></a> View</h1><p>@model ProjectName.Models.UserDetails<br>@Html.ValidationMessage(“CredentialError”, new {style=”color:red;” })<br>        @using (Html.BeginForm(“DoLogin”, “Authentication”, FormMethod.Post))<br>        {<br>            @Html.LabelFor(c=&gt;c.UserName)<br>            @Html.TextBoxFor(x=&gt;x.UserName)<br>            @Html.ValidationMessageFor(x=&gt;x.UserName)<br>            <br><br>            @Html.LabelFor(c =&gt; c.Password)<br>            @Html.PasswordFor(x =&gt; x.Password)<br>            <br></p><pre><code>    &lt;input type=&quot;submit&quot; name=&quot;BtnSubmi&quot; value=&quot;Login&quot; /&gt;}</code></pre><h1 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h1><p>[AllowAnonymous]<br>   public class AuthenticationController : Controller<br>   {</p><pre><code>public ActionResult Logout(){    FormsAuthentication.SignOut();    return RedirectToAction(&quot;Login&quot;);}</code></pre><p>   // GET: Authentication<br>       public ActionResult Login()<br>       {<br>           return View();<br>       }</p><pre><code>\[HttpPost\]public ActionResult DoLogin(UserDetails u){    if (ModelState.IsValid)    {        UserBusinessLayer bal = new UserBusinessLayer();        UserStatus status = bal.GetUserValidity(u);        bool IsAdmin = false;        if (status==UserStatus.AuthenticatedAdmin)        {            IsAdmin = true;        }        else if (status == UserStatus.AuthentucatedUser)        {            IsAdmin = false;        }        else        {            ModelState.AddModelError(&quot;CredentialError&quot;, &quot;Invalid Username or Password&quot;);            return View(&quot;Login&quot;);        }        FormsAuthentication.SetAuthCookie(u.UserName, false);        Session\[&quot;IsAdmin&quot;\] = IsAdmin;        return RedirectToAction(&quot;Index&quot;, &quot;Employee&quot;);    }    else    {        return View(&quot;Login&quot;);    }}</code></pre><p>   }</p><h1 id="Filter"><a href="#Filter" class="headerlink" title=" Filter"></a> Filter</h1><p>public class AdminFilter:ActionFilterAttribute<br>    {<br>        public override void OnActionExecuting(ActionExecutingContext filterContext)<br>        {<br>            if (!Convert.ToBoolean(filterContext.HttpContext.Session[“IsAdmin”]))<br>            {<br>                filterContext.Result = new ContentResult()<br>                {<br>                    Content=”Unauthorized to access specified resource.”<br>                };<br>            }<br>        }<br>    }</p><h1 id="使用方式"><a href="#使用方式" class="headerlink" title="使用方式"></a>使用方式</h1><p>为相应的Controller或ActionResult添加过滤器 允许匿名访问：[AllowAnonymous] 登陆访问：[Authorize] 管理员访问：[AdminFilter]</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Model&quot;&gt;&lt;a href=&quot;#Model&quot; class=&quot;headerlink&quot; title=&quot;Model&quot;&gt;&lt;/a&gt;Model&lt;/h1&gt;&lt;p&gt;public enum UserStatus&lt;br&gt;    {&lt;br&gt;        AuthenticatedAd
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>ASP.NET MVC 用户登陆验证模块</title>
    <link href="http://www.wangxinlei.cn/2016/09/02/asp-net-mvc-verification/"/>
    <id>http://www.wangxinlei.cn/2016/09/02/asp-net-mvc-verification/</id>
    <published>2016-09-02T00:24:07.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h1><p>public class UserDetails<br>    {<br>        public string UserName { get; set; }<br>        public string Password { get; set; }<br>    }</p><p>public class UserDetailBusinessLayer<br>    {<br>        public bool IsValidUser(UserDetails u)<br>        {<br>            if (u.UserName == “Admin” &amp;&amp; u.Password == “Admin”)<br>            {<br>                return true;<br>            }<br>            else<br>            {<br>                return false;<br>            }<br>        }<br>    }</p><h1 id="View"><a href="#View" class="headerlink" title=" View"></a> View</h1><p>@model ProjectName.Models.UserDetails</p><p></p><h4>登陆</h4><br>@Html.ValidationMessage(“CredentialError”, new { style = “color:red;” })<br>@using (Html.BeginForm(“DoLogin”, “Authentication”, FormMethod.Post)) {<p></p><div class="form-group"><br> <label for="Username">用户</label><input type="text" placeholder="请输入用户名" class="form-control" id="UserName" name="UserName"><br></div><div class="form-group"><br> <label for="Password">密码</label><input type="password" placeholder="请输入密码" class="form-control" id="Password" name="Password"><br></div><p><div class="form-group"><br> <input type="submit" class="btn btn-primary" name="BtnSubmit" value="登陆"><br></div><br>}</p><h1 id="Controller"><a href="#Controller" class="headerlink" title=" Controller"></a> Controller</h1><p>public class AuthenticationController : Controller<br>    {<br>        // GET: Authentication<br>        public ActionResult Login()<br>        {<br>            return View();<br>        }</p><pre><code>    \[HttpPost\]    public ActionResult DoLogin(UserDetails u)    {        //初始化用户信息业务层        var bal = new UserDetailBusinessLayer();        if (bal.IsValidUser(u))        {            FormsAuthentication.SetAuthCookie(u.UserName, false);            return RedirectToAction(&quot;Index&quot;, &quot;Admin&quot;);        }        else        {            ModelState.AddModelError(&quot;CredentialError&quot;, &quot;用户名或密码输入错误&quot;);            return View(&quot;Login&quot;);        }    }    public ActionResult Logout()    {        FormsAuthentication.SignOut();        return RedirectToAction(&quot;Login&quot;);    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Model&quot;&gt;&lt;a href=&quot;#Model&quot; class=&quot;headerlink&quot; title=&quot;Model&quot;&gt;&lt;/a&gt;Model&lt;/h1&gt;&lt;p&gt;public class UserDetails&lt;br&gt;    {&lt;br&gt;        public string
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
  </entry>
  
  <entry>
    <title>批处理暴力找回宽带账号</title>
    <link href="http://www.wangxinlei.cn/2016/08/04/findadsl/"/>
    <id>http://www.wangxinlei.cn/2016/08/04/findadsl/</id>
    <published>2016-08-04T13:58:48.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p>存在这样一种情况： 宽带账号忘记了，密码还记得，小区宽带前部分一样仅后几位不同。 宽带拨号691几次之后服务器会拒绝拨号请求造成678/651错误。 这是即可使用本批处理找回你的宽带账号。</p><p>@echo off<br>REM id为起始ID,ENDID为终止ID,PASSWORD为密码<br>SET id=242006000<br>SET ENDID=242007000<br>SET PASSWORD=888888</p><p>set count=1<br>:1<br>cls</p><p>echo 正在尝试%id%第%count%次</p><p>rasdial “宽带连接” “username” “password” &gt;now.temp</p><p>find “651” now.temp&gt;nul<br>if “%errorlevel%”==”0” (<br>  echo %id%,%password%&gt;&gt;651.csv<br>  goto RETRY<br>)</p><p>find “691” now.temp&gt;nul<br>if “%errorlevel%”==”0” (<br>  echo %id%,%password%&gt;&gt;691.csv<br>  set count=1<br>)</p><p>find “已连接” now.temp&gt;nul<br>if “%errorlevel%”==”0” (<br>  echo %id%,%password%&gt;&gt;success.csv<br>  rasdial “宽带连接” /disconnect<br>)</p><p>set /a id=%id%+1<br>set count=1</p><p>if %id% geq %ENDID% (<br>goto END<br>)</p><p>:RETRY<br>set /a count=%count%+1<br>goto 1</p><p>:END</p><p>@pause</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;存在这样一种情况： 宽带账号忘记了，密码还记得，小区宽带前部分一样仅后几位不同。 宽带拨号691几次之后服务器会拒绝拨号请求造成678/651错误。 这是即可使用本批处理找回你的宽带账号。&lt;/p&gt;
&lt;p&gt;@echo off&lt;br&gt;REM id为起始ID,ENDID为终止ID
      
    
    </summary>
    
      <category term="脚本" scheme="http://www.wangxinlei.cn/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
  </entry>
  
  <entry>
    <title>六月总结</title>
    <link href="http://www.wangxinlei.cn/2016/06/24/summary/"/>
    <id>http://www.wangxinlei.cn/2016/06/24/summary/</id>
    <published>2016-06-24T14:42:23.000Z</published>
    <updated>2018-10-07T06:29:36.822Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Q：网页内容溢出第一屏时页面不出现滚动条也没办法强制滚动到下一屏</strong> A：原来是不知什么时候在CSS里给body设置了 overflow: hidden;   <strong>Q：使用母版后控件ID发生了变化</strong> A：使用 “#&lt;%=原控件ID.ClientID%&gt;”来选择控件，因为使用了母版之后客户端收到的HTML代码的控件ID会附加上客户端ID 如下：</p><script>        $(function () {            $("#<%=datepicker.ClientID%>").datepicker({ dateFormat: 'yy-mm-dd' });        });</script><p>&lt;asp:TextBox ID=”datepicker” placeholder=”单击以选择日期” runat=”server”&gt;&lt;/asp:TextBox&gt;</p><p>  <strong>Q：CheckBoxList生成的Checkbox修改样式不正常</strong> A：经过观察 默认情况下CheckBox的 RepeatLayout=”Table” 传送到客户端的CheckBox会被套上表格而表格的宽度是Checkbox中最宽的那个元素的宽度，所以解决这个问题可以设置 RepeatLayout=”Flow” 这样生成的CheckBox就不会被套上Table了。   <strong>Q：如何拿到在Web.config中配置的连接字符串</strong> A：ConfigurationManager.ConnectionStrings[“连接字符串名”].ConnectionString 例如： Web.config中配置连接字符串的部分如下：</p><connectionstrings><br>    <add name="ConnectionString" connectionstring="Data Source=DESKTOP-ND7VC8Q\\SQLEXPRESS;Initial Catalog=MenuCMS;Integrated Security=True" providername="System.Data.SqlClient"><br>  </add></connectionstrings><p>using System.Configuration;<br>using System.Data.SqlClient;</p><p>public class SqlCon<br>{<br>private SqlConnection sqlcon;<br>public SqlCon(){<br>sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings[“ConnectionString”].ConnectionString);<br>}</p><p>}</p><p>  <strong>Q：如何定义数据库操作类以便捷操作数据库</strong> A：</p><p>using System;<br>using System.Configuration;<br>using System.Data;<br>using System.Data.SqlClient;</p><p>/// <summary><br>/// SqlData 数据库操作工具类<br>/// </summary><br>public class SqlData<br>{<br>    private SqlConnection sqlcon;<br>    private SqlCommand sqlcom;<br>    private SqlDataAdapter sqldata;<br>    /// <summary><br>    /// 构造函数初始化数据库连接<br>    /// </summary><br>    public SqlData()<br>    {<br>        sqlcon = new SqlConnection(ConfigurationManager.ConnectionStrings[“ConnectionString”].ConnectionString);<br>        sqlcon.Open();<br>    }</p><pre><code>/// &lt;summary&gt;/// 执行SqlCom返回执行结果/// &lt;/summary&gt;/// &lt;param name=&quot;SqlCom&quot;&gt;SQL语句&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public bool ExceSQL(String SqlCom){    sqlcom = new SqlCommand(SqlCom, sqlcon);    try    {        sqlcom.ExecuteNonQuery();        return true;    }    catch    {        return false;    }    finally    {        sqlcon.Close();    }}/// &lt;summary&gt;/// 执行SqlCom返回DAtaSet/// &lt;/summary&gt;/// &lt;param name=&quot;SqlCom&quot;&gt;SQL语句&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public DataSet ExecDS(String SqlCom){    try    {        sqlcom = new SqlCommand(SqlCom, sqlcon);        sqldata = new SqlDataAdapter();        sqldata.SelectCommand = sqlcom;        DataSet ds = new DataSet();        sqldata.Fill(ds);        return ds;    }    finally    {        sqlcon.Close();    }}/// &lt;summary&gt;/// 执行SqlCom语句返回SqlDataReader/// &lt;/summary&gt;/// &lt;param name=&quot;SqlCom&quot;&gt;SQL语句&lt;/param&gt;/// &lt;returns&gt;&lt;/returns&gt;public SqlDataReader ExecRead(String SqlCom){    sqlcom = new SqlCommand(SqlCom, sqlcon);    SqlDataReader read = sqlcom.ExecuteReader();    return read;}public void shut(){    sqlcon.Close();}</code></pre><p>}</p><p>  Q:数据库表名起成了USER无法执行SQL语句怎么办？ A:用[]包围关键字如：</p><p>SELECT UserName FROM [User] WHERE UID = 1</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Q：网页内容溢出第一屏时页面不出现滚动条也没办法强制滚动到下一屏&lt;/strong&gt; A：原来是不知什么时候在CSS里给body设置了 overflow: hidden;   &lt;strong&gt;Q：使用母版后控件ID发生了变化&lt;/strong&gt; A：使用 “#&amp;
      
    
    </summary>
    
      <category term="C#" scheme="http://www.wangxinlei.cn/categories/C/"/>
    
    
  </entry>
  
</feed>
